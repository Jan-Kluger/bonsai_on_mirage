// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Sexp_hidden_in_test
//# unitInfo: Requires: Bin_prot__Common, Bin_prot__Shape, Bin_shape, Core, Expect_test_collector, Expect_test_common__File, Expect_test_config, Inline_test_config, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$0 = "",
    cst_114f573b5ca7a2585c5466177d$1 = "114f573b5ca7a2585c5466177d756599",
    cst_Sexp_hidden_in_test = "Sexp_hidden_in_test",
    cst_a$3 = "a",
    cst_sexp_hidden_in_test = "sexp_hidden_in_test",
    cst_sexp_hidden_in_test_src_se$13 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml",
    cst_t$3 = "t";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) === 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) === 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = cst$0,
    Core = global_data.Core,
    Expect_test_common_File = global_data.Expect_test_common__File,
    Expect_test_config = global_data.Expect_test_config,
    Expect_test_collector = global_data.Expect_test_collector,
    Inline_test_config = global_data.Inline_test_config,
    Bin_shape = global_data.Bin_shape,
    Bin_prot_Shape = global_data.Bin_prot__Shape,
    Bin_prot_Common = global_data.Bin_prot__Common,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Sexp_hidden_in_test);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_sexp_hidden_in_test);
   caml_call1(Expect_test_collector[6][1], cst_sexp_hidden_in_test_src_se$13);
   caml_call2
    (Ppx_inline_test_lib[5],
     cst_sexp_hidden_in_test,
     "sexp_hidden_in_test.ml");
   var
    cst_a = cst_a$3,
    cst_sexp_hidden_in_test_src_se =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:7:14",
    cst_a$0 = cst_a$3,
    cst_t = cst_t$3,
    cst_sexp_hidden_in_test_src_se$0 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:7:2",
    cst_t$0 = cst_t$3,
    _a_ = [5, "sexp_hidden_in_test/src/sexp_hidden_in_test.ml.Make.t"],
    _b_ = [0, "<hidden_in_test>"],
    cst_a$1 = cst_a$3,
    cst_sexp_hidden_in_test_src_se$1 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:14:23",
    cst_a$2 = cst_a$3,
    cst_t$1 = cst_t$3,
    cst_sexp_hidden_in_test_src_se$2 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:14:4",
    cst_t$2 = cst_t$3,
    cst_sexp_hidden_in_test_src_se$3 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$4 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$5 = cst_sexp_hidden_in_test_src_se$13,
    _c_ = [1, " <hidden_in_test> "],
    _d_ = [0, cst$0],
    _e_ = [0, "Turned on"],
    cst_sexp_hidden_in_test_src_se$6 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$7 = cst_sexp_hidden_in_test_src_se$13,
    cst_114f573b5ca7a2585c5466177d = cst_114f573b5ca7a2585c5466177d$1,
    cst_sexp_hidden_in_test_src_se$8 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$9 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$10 = cst_sexp_hidden_in_test_src_se$13,
    _f_ = [1, " 1024 "],
    _g_ = [0, cst$0],
    _h_ = [0, "Turned off"],
    cst_sexp_hidden_in_test_src_se$11 = cst_sexp_hidden_in_test_src_se$13,
    cst_sexp_hidden_in_test_src_se$12 = cst_sexp_hidden_in_test_src_se$13,
    cst_114f573b5ca7a2585c5466177d$0 = cst_114f573b5ca7a2585c5466177d$1,
    dummy = 0;
   function Make(M){
    var
     _u_ = caml_call1(Bin_shape[3][1], cst_a),
     _v_ = caml_call1(Bin_shape[4][1], cst_sexp_hidden_in_test_src_se),
     _w_ = caml_call2(Bin_prot_Shape[11], _v_, _u_),
     _x_ = [0, caml_call1(Bin_shape[3][1], cst_a$0), 0],
     _y_ = [0, [0, caml_call1(Bin_shape[2][1], cst_t), _x_, _w_], 0],
     _z_ = caml_call1(Bin_shape[4][1], cst_sexp_hidden_in_test_src_se$0),
     group = caml_call2(Bin_prot_Shape[2], _z_, _y_);
    function bin_shape_t(a){
     var _L_ = caml_call1(Bin_shape[2][1], cst_t$0);
     return caml_call1(caml_call2(Bin_prot_Shape[10], group, _L_), [0, a, 0]);
    }
    function bin_size_t(size_of_a){return size_of_a;}
    function bin_write_t(write_a){return write_a;}
    function bin_writer_t(bin_writer_a){
     return [0,
             function(v){
              var size_of_a = bin_writer_a[1];
              return caml_call1(size_of_a, v);
             },
             function(v){
              var write_a = bin_writer_a[2];
              return caml_call1(write_a, v);
             }];
    }
    function bin_read_t(of_a, buf, pos_ref, vint){
     return caml_call2(Bin_prot_Common[18], _a_, pos_ref[1]);
    }
    function bin_read_t$0(of_a){return of_a;}
    function bin_reader_t(bin_reader_a){
     return [0,
             function(buf, pos_ref){
              var of_a = bin_reader_a[1];
              return caml_call2(of_a, buf, pos_ref);
             },
             function(buf, pos_ref, vtag){
              return bin_read_t(bin_reader_a[1], buf, pos_ref, vtag);
             }];
    }
    function bin_t(bin_a){
     var _J_ = bin_reader_t(bin_a[3]), _K_ = bin_writer_t(bin_a[2]);
     return [0, bin_shape_t(bin_a[1]), _K_, _J_];
    }
    function compare(cmp_a, a_001, b_002){
     return caml_call2(cmp_a, a_001, b_002);
    }
    function equal(cmp_a, a_003, b_004){
     return caml_call2(cmp_a, a_003, b_004);
    }
    function t_of_sexp(of_a_005){return of_a_005;}
    function sexp_of_t(sexp_of_a, a){
     return M[1] ? _b_ : caml_call1(sexp_of_a, a);
    }
    var
     _A_ = caml_call1(Bin_shape[3][1], cst_a$1),
     _B_ = caml_call1(Bin_shape[4][1], cst_sexp_hidden_in_test_src_se$1),
     _C_ = bin_shape_t(caml_call2(Bin_prot_Shape[11], _B_, _A_)),
     _D_ = [0, caml_call1(Bin_shape[3][1], cst_a$2), 0],
     _E_ = [0, [0, caml_call1(Bin_shape[2][1], cst_t$1), _D_, _C_], 0],
     _F_ = caml_call1(Bin_shape[4][1], cst_sexp_hidden_in_test_src_se$2),
     group$0 = caml_call2(Bin_prot_Shape[2], _F_, _E_);
    function bin_shape_t$0(a){
     var _I_ = caml_call1(Bin_shape[2][1], cst_t$2);
     return caml_call1
             (caml_call2(Bin_prot_Shape[10], group$0, _I_), [0, a, 0]);
    }
    function bin_size_t$0(size_of_a, v){return caml_call1(size_of_a, v);}
    function bin_write_t$0(write_a, buf, pos, v){return caml_call3(write_a, buf, pos, v);
    }
    function bin_writer_t$0(bin_writer_a){
     return [0,
             function(v){
              var size_of_a = bin_writer_a[1];
              return caml_call1(size_of_a, v);
             },
             function(buf){
              var write_a = bin_writer_a[2];
              return function(pos, v){
               return caml_call3(write_a, buf, pos, v);};
             }];
    }
    function bin_read_t$1(of_a, buf, pos_ref, vint){return bin_read_t(of_a, buf, pos_ref, vint);
    }
    function bin_read_t$2(of_a, buf, pos_ref){return caml_call2(of_a, buf, pos_ref);
    }
    function bin_reader_t$0(bin_reader_a){
     return [0,
             function(buf, pos_ref){
              var of_a = bin_reader_a[1];
              return caml_call2(of_a, buf, pos_ref);
             },
             function(buf, pos_ref, vtag){
              var of_a = bin_reader_a[1];
              return bin_read_t(of_a, buf, pos_ref, vtag);
             }];
    }
    function bin_t$0(bin_a){
     var _G_ = bin_reader_t$0(bin_a[3]), _H_ = bin_writer_t$0(bin_a[2]);
     return [0, bin_shape_t$0(bin_a[1]), _H_, _G_];
    }
    function compare$0(cmp_a, a_008, b_009){
     return caml_call2(cmp_a, a_008, b_009);
    }
    function equal$0(cmp_a, a_012, b_013){
     return caml_call2(cmp_a, a_012, b_013);
    }
    var
     With_non_roundtripping_in_test =
       [0,
        bin_shape_t$0,
        bin_size_t$0,
        bin_write_t$0,
        bin_writer_t$0,
        bin_read_t$1,
        bin_read_t$2,
        bin_reader_t$0,
        bin_t$0,
        compare$0,
        equal$0,
        t_of_sexp,
        sexp_of_t];
    return [0,
            bin_shape_t,
            bin_size_t,
            bin_write_t,
            bin_writer_t,
            bin_read_t,
            bin_read_t$0,
            bin_reader_t,
            bin_t,
            compare,
            equal,
            ,
            sexp_of_t,
            With_non_roundtripping_in_test];
   }
   caml_call8
    (Ppx_inline_test_lib[9],
     Inline_test_config,
     cst,
     0,
     cst_sexp_hidden_in_test_src_se$13,
     18,
     0,
     741,
     function(param){
      var
       Sexp_hidden_in_test_turned_off = Make([0, 0]),
       Sexp_hidden_in_test_turned_on = Make([0, 1]),
       Expect_test_collector$0 =
         caml_call1(Expect_test_collector[2], Expect_test_config),
       _i_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$4),
          38,
          963,
          978,
          1000],
       _j_ =
         [0,
          [0,
           _d_,
           _c_,
           [0,
            caml_call1
             (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$5),
            38,
            963,
            971,
            977],
           _i_],
          0],
       _k_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$7),
          36,
          885,
          889,
          1001],
       _l_ =
         caml_call1
          (Expect_test_common_File[4][3], cst_114f573b5ca7a2585c5466177d);
      caml_call9
       (Expect_test_collector$0[3],
        _l_,
        _k_,
        cst_sexp_hidden_in_test_src_se$6,
        _e_,
        0,
        _j_,
        0,
        Inline_test_config,
        function(param){
         var
          _s_ = Sexp_hidden_in_test_turned_on[12].call(null, Core[363], 1024);
         caml_call2(Core[250], 0, _s_);
         var
          _t_ =
            [0,
             caml_call1
              (Expect_test_common_File[1][6],
               cst_sexp_hidden_in_test_src_se$3),
             38,
             963,
             971,
             977];
         return caml_call1(Expect_test_collector$0[1], _t_);
        });
      var
       Expect_test_collector$1 =
         caml_call1(Expect_test_collector[2], Expect_test_config),
       _m_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$9),
          43,
          1092,
          1107,
          1117],
       _n_ =
         [0,
          [0,
           _g_,
           _f_,
           [0,
            caml_call1
             (Expect_test_common_File[1][6],
              cst_sexp_hidden_in_test_src_se$10),
            43,
            1092,
            1100,
            1106],
           _m_],
          0],
       _o_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$12),
          41,
          1010,
          1014,
          1118],
       _p_ =
         caml_call1
          (Expect_test_common_File[4][3], cst_114f573b5ca7a2585c5466177d$0);
      caml_call9
       (Expect_test_collector$1[3],
        _p_,
        _o_,
        cst_sexp_hidden_in_test_src_se$11,
        _h_,
        0,
        _n_,
        0,
        Inline_test_config,
        function(param){
         var
          _q_ = Sexp_hidden_in_test_turned_off[12].call(null, Core[363], 1024);
         caml_call2(Core[250], 0, _q_);
         var
          _r_ =
            [0,
             caml_call1
              (Expect_test_common_File[1][6],
               cst_sexp_hidden_in_test_src_se$8),
             43,
             1092,
             1100,
             1106];
         return caml_call1(Expect_test_collector$1[1], _r_);
        });
      return 0;
     });
   var
    am_running_test = Core[542],
    include = Make([0, am_running_test]),
    bin_shape_t = include[1],
    bin_size_t = include[2],
    bin_write_t = include[3],
    bin_writer_t = include[4],
    bin_read_t = include[5],
    bin_read_t$0 = include[6],
    bin_reader_t = include[7],
    bin_t = include[8],
    compare = include[9],
    equal = include[10],
    sexp_of_t = include[12],
    With_non_roundtripping_in_test = include[13];
   caml_call1(Ppx_inline_test_lib[6], cst_sexp_hidden_in_test);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Sexp_hidden_in_test);
   var
    Sexp_hidden_in_test =
      [0,
       bin_shape_t,
       bin_size_t,
       bin_write_t,
       bin_read_t$0,
       bin_read_t,
       bin_writer_t,
       bin_reader_t,
       bin_t,
       compare,
       equal,
       sexp_of_t,
       [0,
        With_non_roundtripping_in_test[1],
        With_non_roundtripping_in_test[2],
        With_non_roundtripping_in_test[3],
        With_non_roundtripping_in_test[6],
        With_non_roundtripping_in_test[5],
        With_non_roundtripping_in_test[4],
        With_non_roundtripping_in_test[7],
        With_non_roundtripping_in_test[8],
        With_non_roundtripping_in_test[9],
        With_non_roundtripping_in_test[10],
        With_non_roundtripping_in_test[11],
        With_non_roundtripping_in_test[12]]];
   runtime.caml_register_global
    (52, Sexp_hidden_in_test, cst_Sexp_hidden_in_test);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
