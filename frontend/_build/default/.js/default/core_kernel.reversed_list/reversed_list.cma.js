// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Reversed_list
//# unitInfo: Requires: Base, Base__List, Expect_test_collector, Expect_test_common__File, Expect_test_config, Inline_test_config, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Stdlib
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    cst_3c9a1ba7dc4d39611835eebf4c = "3c9a1ba7dc4d39611835eebf4c7d09bd",
    cst_Reversed_list = "Reversed_list",
    cst_reversed_list = "reversed_list",
    cst_reversed_list_src_reversed$1 = "reversed_list/src/reversed_list.ml";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) === 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    x_010 = [0, 1, [0, 2, 0]],
    x_009 = [0, 1, [0, 2, 0]],
    Base = global_data.Base,
    Stdlib = global_data.Stdlib,
    Expect_test_common_File = global_data.Expect_test_common__File,
    Base_List = global_data.Base__List,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Expect_test_config = global_data.Expect_test_config,
    Inline_test_config = global_data.Inline_test_config;
   caml_call1(Ppx_module_timer_runtime[4], cst_Reversed_list);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_reversed_list);
   caml_call1(Expect_test_collector[6][1], cst_reversed_list_src_reversed$1);
   caml_call2(Ppx_inline_test_lib[5], cst_reversed_list, "reversed_list.ml");
   function equal(cmp_a, a_001, b_002){
    var cmp_a$0 = cmp_a, a_001$0 = a_001, b_002$0 = b_002;
    for(;;){
     if(a_001$0 === b_002$0) return 1;
     if(! a_001$0) return b_002$0 ? 0 : 1;
     if(! b_002$0) return 0;
     var
      b_006 = b_002$0[2],
      b_004 = b_002$0[1],
      a_005 = a_001$0[2],
      a_003 = a_001$0[1],
      _p_ = caml_call2(cmp_a$0, a_003, b_004);
     if(! _p_) return _p_;
     let cmp_a = cmp_a$0;
     var
      cmp_a$1 =
        function(a_007, b_008){return caml_call2(cmp_a, a_007, b_008);};
     cmp_a$0 = cmp_a$1;
     a_001$0 = a_005;
     b_002$0 = b_006;
    }
   }
   var
    of_list_rev = Base_List[61],
    rev = Base_List[61],
    rev_append = Base_List[62],
    rev_map = Base_List[64],
    rev_filter_map = Base_List[131],
    is_empty = Base_List[18],
    length = Base_List[17];
   function sexp_of_t(sexp_of_a, t){
    return caml_call2(Base_List[5], sexp_of_a, t);
   }
   var
    Expect_test_collector$0 =
      caml_call1(Expect_test_collector[2], Expect_test_config),
    cst_reversed_list_src_reversed = cst_reversed_list_src_reversed$1,
    _a_ =
      [0,
       caml_call1
        (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
       23,
       492,
       505,
       516],
    _b_ =
      [0,
       [0,
        [0, cst],
        [1, " (1 2) "],
        [0,
         caml_call1
          (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
         23,
         492,
         498,
         504],
        _a_],
       0],
    _c_ =
      [0,
       caml_call1
        (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
       21,
       400,
       402,
       517],
    _d_ =
      caml_call1
       (Expect_test_common_File[4][3], cst_3c9a1ba7dc4d39611835eebf4c);
   caml_call9
    (Expect_test_collector$0[3],
     _d_,
     _c_,
     cst_reversed_list_src_reversed$1,
     0,
     0,
     _b_,
     0,
     Inline_test_config,
     function(param){
      var
       _m_ = sexp_of_t(Base[125], x_009),
       _n_ = caml_call1(Base[85][15], _m_);
      caml_call1(Stdlib[46], _n_);
      var
       _o_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_reversed_list_src_reversed),
          23,
          492,
          498,
          504];
      return caml_call1(Expect_test_collector$0[1], _o_);
     });
   var With_sexp_of = [0, sexp_of_t];
   function sexp_of_t$0(sexp_of_a, t){
    var _l_ = caml_call1(rev, t);
    return caml_call2(Base_List[5], sexp_of_a, _l_);
   }
   var
    Expect_test_collector$1 =
      caml_call1(Expect_test_collector[2], Expect_test_config),
    cst_reversed_list_src_reversed$0 = cst_reversed_list_src_reversed$1,
    _e_ =
      [0,
       caml_call1
        (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
       34,
       744,
       757,
       768],
    _f_ =
      [0,
       [0,
        [0, cst],
        [1, " (2 1) "],
        [0,
         caml_call1
          (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
         34,
         744,
         750,
         756],
        _e_],
       0],
    _g_ =
      [0,
       caml_call1
        (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$1),
       32,
       652,
       654,
       769],
    _h_ =
      caml_call1
       (Expect_test_common_File[4][3], cst_3c9a1ba7dc4d39611835eebf4c);
   caml_call9
    (Expect_test_collector$1[3],
     _h_,
     _g_,
     cst_reversed_list_src_reversed$1,
     0,
     0,
     _f_,
     0,
     Inline_test_config,
     function(param){
      var
       _i_ = sexp_of_t$0(Base[125], x_010),
       _j_ = caml_call1(Base[85][15], _i_);
      caml_call1(Stdlib[46], _j_);
      var
       _k_ =
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_reversed_list_src_reversed$0),
          34,
          744,
          750,
          756];
      return caml_call1(Expect_test_collector$1[1], _k_);
     });
   var With_rev_sexp_of = [0, sexp_of_t$0];
   caml_call1(Ppx_inline_test_lib[6], cst_reversed_list);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Reversed_list);
   var
    Reversed_list =
      [0,
       equal,
       of_list_rev,
       rev,
       rev_append,
       rev_map,
       rev_filter_map,
       is_empty,
       length,
       With_sexp_of,
       With_rev_sexp_of];
   runtime.caml_register_global(35, Reversed_list, cst_Reversed_list);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2ZXJzZWRfbGlzdC5jbWEuanMiLCJzZWN0aW9ucyI6W3sib2Zmc2V0Ijp7ImxpbmUiOjksImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2ZXJzZWRfbGlzdC5jbWEuanMiLCJuYW1lcyI6WyJydW50aW1lIiwiY3N0IiwiY3N0XzNjOWExYmE3ZGM0ZDM5NjExODM1ZWViZjRjIiwiY3N0X1JldmVyc2VkX2xpc3QiLCJjc3RfcmV2ZXJzZWRfbGlzdCIsImNzdF9yZXZlcnNlZF9saXN0X3NyY19yZXZlcnNlZCIsImNhbWxfY2FsbDEiLCJmIiwiYTAiLCJjYW1sX2NhbGwyIiwiYTEiLCJjYW1sX2NhbGw5IiwiYTIiLCJhMyIsImE0IiwiYTUiLCJhNiIsImE3IiwiYTgiLCJnbG9iYWxfZGF0YSIsInhfMDEwIiwieF8wMDkiLCJCYXNlIiwiU3RkbGliIiwiRXhwZWN0X3Rlc3RfY29tbW9uX0ZpbGUiLCJCYXNlX0xpc3QiLCJQcHhfbW9kdWxlX3RpbWVyX3J1bnRpbWUiLCJQcHhfYmVuY2hfbGliX0JlbmNobWFya19hY2N1bXUiLCJFeHBlY3RfdGVzdF9jb2xsZWN0b3IiLCJQcHhfaW5saW5lX3Rlc3RfbGliIiwiRXhwZWN0X3Rlc3RfY29uZmlnIiwiSW5saW5lX3Rlc3RfY29uZmlnIiwiZXF1YWwiLCJjbXBfYSIsImFfMDAxIiwiYl8wMDIiLCJiXzAwNiIsImJfMDA0IiwiYV8wMDUiLCJhXzAwMyIsImFfMDA3IiwiYl8wMDgiLCJvZl9saXN0X3JldiIsInJldiIsInJldl9hcHBlbmQiLCJyZXZfbWFwIiwicmV2X2ZpbHRlcl9tYXAiLCJpc19lbXB0eSIsImxlbmd0aCIsInNleHBfb2ZfdCIsInNleHBfb2ZfYSIsInQiLCJwYXJhbSIsIldpdGhfc2V4cF9vZiIsIldpdGhfcmV2X3NleHBfb2YiLCJSZXZlcnNlZF9saXN0Il0sInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvVXNlcnMveWFubmljay8ub3BhbS9ib25zYWktZnJv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QTtBQUFBO0FBQUE7QUFBQTtBQUFBLGNBQUErQztBQUFBQTtBQUFBQSxPQUFBLE1BQzBEO0FBQUEsYUFBbkM7QUFBQSxNQUFyQjtBQUFBO0FBQUE7QUFBQSxTQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBcUI7QUFBQTtBQUFBLE9BQUFFLG1CQUFBO0FBQUEsR0FFdEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBQUFDO0FBQUFBLE1BQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFRG5DSCIsInNvdXJjZXNDb250ZW50IjpbIigqIGdlbmVyYXRlZCBjb2RlICopIiwidHlwZSAnYSB0ID0gJ2EgbGlzdCA9XG4gIHwgW11cbiAgfCAoIDo6ICkgb2YgJ2EgKiAnYSB0XG5bQEBkZXJpdmluZyBlcXVhbF1cblxub3BlbiBCYXNlXG5cbmxldCBvZl9saXN0X3JldiA9IExpc3QucmV2XG5sZXQgcmV2ID0gTGlzdC5yZXZcbmxldCByZXZfYXBwZW5kID0gTGlzdC5yZXZfYXBwZW5kXG5sZXQgcmV2X21hcCA9IExpc3QucmV2X21hcFxubGV0IHJldl9maWx0ZXJfbWFwID0gTGlzdC5yZXZfZmlsdGVyX21hcFxubGV0IGlzX2VtcHR5ID0gTGlzdC5pc19lbXB0eVxubGV0IGxlbmd0aCA9IExpc3QubGVuZ3RoXG5cbm1vZHVsZSBXaXRoX3NleHBfb2YgPSBzdHJ1Y3RcbiAgdHlwZSBub25yZWMgJ2EgdCA9ICdhIHRcblxuICBsZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gTGlzdC5zZXhwX29mX3Qgc2V4cF9vZl9hIHRcblxuICBsZXQlZXhwZWN0X3Rlc3QgXyA9XG4gICAgU3RkbGliLnByaW50X2VuZGxpbmUgKFNleHAudG9fc3RyaW5nIFslc2V4cCAoWyAxOyAyIF0gOiBpbnQgdCldKTtcbiAgICBbJWV4cGVjdCB7fCAoMSAyKSB8fV1cbiAgOztcbmVuZFxuXG5tb2R1bGUgV2l0aF9yZXZfc2V4cF9vZiA9IHN0cnVjdFxuICB0eXBlIG5vbnJlYyAnYSB0ID0gJ2EgdFxuXG4gIGxldCBzZXhwX29mX3Qgc2V4cF9vZl9hIHQgPSBMaXN0LnNleHBfb2ZfdCBzZXhwX29mX2EgKHJldiB0KVxuXG4gIGxldCVleHBlY3RfdGVzdCBfID1cbiAgICBTdGRsaWIucHJpbnRfZW5kbGluZSAoU2V4cC50b19zdHJpbmcgWyVzZXhwIChbIDE7IDIgXSA6IGludCB0KV0pO1xuICAgIFslZXhwZWN0IHt8ICgyIDEpIHx9XVxuICA7O1xuZW5kXG4iXSwiaWdub3JlTGlzdCI6WzBdfX1dfQ==
