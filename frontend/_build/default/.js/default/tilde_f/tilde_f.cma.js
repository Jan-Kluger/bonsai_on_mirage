// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Tilde_f
//# unitInfo: Requires: Base__Monad, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Tilde_f = "Tilde_f",
    cst_tilde_f = "tilde_f";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Base_Monad = global_data.Base__Monad;
   caml_call1(Ppx_module_timer_runtime[4], cst_Tilde_f);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_tilde_f);
   caml_call1(Expect_test_collector[6][1], "src/tilde_f.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_tilde_f, "tilde_f.ml");
   function return$0(x, f){return caml_call1(f, x);}
   function bind(t, bind_f, f){
    return caml_call1(t, function(x){return caml_call2(bind_f, x, f);});
   }
   var
    map =
      [0,
       -198771759,
       function(t, map_f, f){
        return caml_call1
                (t, function(x){return caml_call1(f, caml_call1(map_f, x));});
       }],
    include = caml_call1(Base_Monad[4], [0, bind, map, return$0]),
    symbol_bind = include[1],
    symbol_map = include[2],
    Let_syntax = include[3],
    Monad_infix = include[4],
    bind$0 = include[5],
    return$1 = include[6],
    map$0 = include[7],
    join = include[8],
    ignore_m = include[9],
    all = include[10],
    all_unit = include[11];
   function run(t){return caml_call1(t, function(_a_){return _a_;});}
   function of_curried(t, f){
    return caml_call1(t, function(a, b){return caml_call1(f, [0, a, b]);});
   }
   function of_unlabeled(t, f){return caml_call1(t, f);}
   function of_local(t){return t;}
   function of_local_k(f){return f;}
   caml_call1(Ppx_inline_test_lib[6], cst_tilde_f);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Tilde_f);
   var
    Tilde_f =
      [0,
       symbol_bind,
       symbol_map,
       Let_syntax,
       Monad_infix,
       bind$0,
       return$1,
       map$0,
       join,
       ignore_m,
       all,
       all_unit,
       run,
       of_curried,
       of_unlabeled,
       of_local,
       of_local_k];
   runtime.caml_register_global(12, Tilde_f, cst_Tilde_f);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZGVfZi5jbWEuanMiLCJzZWN0aW9ucyI6W3sib2Zmc2V0Ijp7ImxpbmUiOjksImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZGVfZi5jbWEuanMiLCJuYW1lcyI6WyJydW50aW1lIiwiY3N0X1RpbGRlX2YiLCJjc3RfdGlsZGVfZiIsImNhbWxfY2FsbDEiLCJmIiwiYTAiLCJjYW1sX2NhbGwyIiwiYTEiLCJnbG9iYWxfZGF0YSIsIlBweF9tb2R1bGVfdGltZXJfcnVudGltZSIsIlBweF9iZW5jaF9saWJfQmVuY2htYXJrX2FjY3VtdSIsIkV4cGVjdF90ZXN0X2NvbGxlY3RvciIsIlBweF9pbmxpbmVfdGVzdF9saWIiLCJCYXNlX01vbmFkIiwicmV0dXJuIiwieCIsImJpbmQiLCJ0IiwiYmluZF9mIiwibWFwIiwibWFwX2YiLCJpbmNsdWRlIiwic3ltYm9sX2JpbmQiLCJzeW1ib2xfbWFwIiwiTGV0X3N5bnRheCIsIk1vbmFkX2luZml4Iiwiam9pbiIsImlnbm9yZV9tIiwiYWxsIiwiYWxsX3VuaXQiLCJydW4iLCJvZl9jdXJyaWVkIiwiYSIsImIiLCJvZl91bmxhYmVsZWQiLCJvZl9sb2NhbCIsIm9mX2xvY2FsX2siLCJUaWxkZV9mIl0sInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvVXNlcnMveWFubmljay8ub3BhbS9ib25zYWktZnJvbnRlbmQvbGliL3RpbGRlX2YvdGlsZGVfZi5tbCJdLCJtYXBwaW5ncyI6IklBQUFBLFVBQUE7QUFBQSxJQUFBQyxjQUFBO0FBQUEsSUFBQUMsY0FBQTtBQUFBLFlBQUFDLFdBQUFDLEdBQUFDO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxXQUFBRixHQUFBQyxJQUFBRTtBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFBQyxjQUFBO0FBQUEsSUFBQUMsMkJBQUE7QUFBQSxJQUFBQztBQUFBQSxNQUFBO0FBQUEsSUFBQUMsd0JBQUE7QUFBQSxJQUFBQyxzQkFBQTtBQUFBLElBQUFDLGFBQUE7QUFBQSxHQ0FBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBQUMsU0FBQUMsR0FBQVgsR0FLc0IsdUJBQUc7QUFBQSxZQUFBWSxLQUFBQyxHQUFBQyxRQUFBZDtBQUFBQSxJQUNLLDhCQUFBVyxHQUFlLCtCQUFXLEdBQUM7QUFBQTtBQUFBO0FBQUEsSUFBQUk7QUFBQUEsTUFOekQ7QUFBQTtBQUFBLGdCQUFBRixHQUFBRyxPQUFBaEI7QUFBQUEsUUFPNEI7QUFBQSw2QkFBQVcsR0FBaUIsT0FBUyxjQUFULHFCQUFTLEdBQUM7QUFBQTtBQUFBLElBQUFNLFVBUHZEO0FBQUEsSUFBQUMsY0FBQTtBQUFBLElBQUFDLGFBQUE7QUFBQSxJQUFBQyxhQUFBO0FBQUEsSUFBQUMsY0FBQTtBQUFBLElBQUFULFNBQUE7QUFBQSxJQUFBRixXQUFBO0FBQUEsSUFBQUssUUFBQTtBQUFBLElBQUFPLE9BQUE7QUFBQSxJQUFBQyxXQUFBO0FBQUEsSUFBQUMsTUFBQTtBQUFBLElBQUFDLFdBQUE7QUFBQSxZQUFBQyxJQUFBYixHQVdZLG1DRFhaLGFDV3NCO0FBQUEsWUFBQWMsV0FBQWQsR0FBQWI7QUFBQUEsSUFDQSw4QkFBQTRCLEdBQUFDLEdBQWlCLCtCQUFRLEdBQUM7QUFBQTtBQUFBLFlBQUFDLGFBQUFqQixHQUFBYixHQUN4Qix1QkFBRztBQUFBLFlBQUErQixTQUFBbEIsR0FDVCxTQUFDO0FBQUEsWUFBQW1CLFdBQUFoQyxHQUNDLFNBQUM7QUFBQSxHQUFrRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBQWlDO0FBQUFBLE1BQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFRGZ2RiIsInNvdXJjZXNDb250ZW50IjpbIigqIGdlbmVyYXRlZCBjb2RlICopIiwib3BlbiEgQmFzZVxuXG5pbmNsdWRlIE1vbmFkLk1ha2VfaW5kZXhlZCAoc3RydWN0XG4gICAgdHlwZSAoJ2EsICdpLCAnaikgdCA9IGY6KCdhIC0+ICdqKSAtPiAnaVxuXG4gICAgbGV0IHJldHVybiB4IH5mID0gZiB4XG4gICAgbGV0IGJpbmQgdCB+ZjpiaW5kX2YgfmYgPSB0IH5mOihmdW4geCAtPiBiaW5kX2YgeCB+ZilcbiAgICBsZXQgbWFwIHQgfmY6bWFwX2YgfmYgPSB0IH5mOihmdW4geCAtPiBmIChtYXBfZiB4KSlcbiAgICBsZXQgbWFwID0gYEN1c3RvbSBtYXBcbiAgZW5kKVxuXG5sZXQgcnVuIHQgPSB0IH5mOkZuLmlkXG5sZXQgb2ZfY3VycmllZCB0IH5mID0gdCB+ZjooZnVuIGEgYiAtPiBmIChhLCBiKSlcbmxldCBvZl91bmxhYmVsZWQgdCB+ZiA9IHQgZlxubGV0IG9mX2xvY2FsIHQgPSAodCA6IGY6KCgnYSAtPiAnYilbQGxvY2FsXSkgLT4gJ2MgOj4gZjooJ2EgLT4gJ2IpIC0+ICdjKVxubGV0IG9mX2xvY2FsX2sgZiA9IChmIDogJ2EgLT4gZjooKCdiIC0+ICdjKVtAbG9jYWxdKSAtPiAnZCA6PiAnYSAtPiBmOignYiAtPiAnYykgLT4gJ2QpXG4iXSwiaWdub3JlTGlzdCI6WzBdfX1dfQ==
