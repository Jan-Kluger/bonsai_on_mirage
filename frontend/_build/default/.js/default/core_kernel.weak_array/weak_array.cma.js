// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Weak_array
//# unitInfo: Requires: Base, Base__Array, Base__Option, Expect_test_collector, Heap_block, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Stdlib__Weak
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Weak_array = "Weak_array",
    cst_weak_array = "weak_array";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) === 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Weak = global_data.Stdlib__Weak,
    Heap_block = global_data.Heap_block,
    Base = global_data.Base,
    Base_Array = global_data.Base__Array,
    Base_Option = global_data.Base__Option,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Weak_array);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_weak_array);
   caml_call1(Expect_test_collector[6][1], "weak_array/src/weak_array.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_weak_array, "weak_array.ml");
   function create(len){return caml_call1(Stdlib_Weak[1], len);}
   function length(t){return caml_call1(Stdlib_Weak[2], t);}
   var set = Stdlib_Weak[3];
   function set_exn(t, i, x){
    return caml_call3
            (set, t, i, caml_call2(Base_Option[22], x, Heap_block[3]));
   }
   var get = Stdlib_Weak[4];
   function is_some(t, i){return caml_call2(Stdlib_Weak[6], t, i);}
   function is_none(t, i){return 1 - is_some(t, i);}
   function sexp_of_t(sexp_of_a, t){
    var
     _g_ = length(t),
     x_001 =
       caml_call2
        (Base_Array[40], _g_, function(i){return caml_call2(get, t, i);}),
     _h_ = caml_call1(Heap_block[1], sexp_of_a),
     _i_ = caml_call1(Base[163], _h_);
    return caml_call2(Base[92], _i_, x_001);
   }
   function iter(t, f){
    var _e_ = length(t) - 1 | 0, _d_ = 0;
    if(_e_ >= 0){
     var i = _d_;
     for(;;){
      var match = caml_call2(get, t, i);
      if(match){
       var v = match[1];
       caml_call1(f, caml_call1(Heap_block[4], v));
      }
      var _f_ = i + 1 | 0;
      if(_e_ === i) break;
      i = _f_;
     }
    }
    return 0;
   }
   function iteri(t, f){
    var _b_ = length(t) - 1 | 0, _a_ = 0;
    if(_b_ >= 0){
     var i = _a_;
     for(;;){
      var match = caml_call2(get, t, i);
      if(match){
       var v = match[1];
       caml_call2(f, i, caml_call1(Heap_block[4], v));
      }
      var _c_ = i + 1 | 0;
      if(_b_ === i) break;
      i = _c_;
     }
    }
    return 0;
   }
   function blit(src, src_pos, dst, dst_pos, len){
    return caml_call5(Stdlib_Weak[8], src, src_pos, dst, dst_pos, len);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_weak_array);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Weak_array);
   var
    Weak_array =
      [0,
       sexp_of_t,
       create,
       length,
       set,
       set_exn,
       get,
       is_some,
       is_none,
       iter,
       iteri,
       blit];
   runtime.caml_register_global(16, Weak_array, cst_Weak_array);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha19hcnJheS5jbWEuanMiLCJzZWN0aW9ucyI6W3sib2Zmc2V0Ijp7ImxpbmUiOjksImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha19hcnJheS5jbWEuanMiLCJuYW1lcyI6WyJydW50aW1lIiwiY3N0X1dlYWtfYXJyYXkiLCJjc3Rfd2Vha19hcnJheSIsImNhbWxfY2FsbDEiLCJmIiwiYTAiLCJjYW1sX2NhbGwyIiwiYTEiLCJjYW1sX2NhbGwzIiwiYTIiLCJjYW1sX2NhbGw1IiwiYTMiLCJhNCIsImdsb2JhbF9kYXRhIiwiU3RkbGliX1dlYWsiLCJIZWFwX2Jsb2NrIiwiQmFzZSIsIkJhc2VfQXJyYXkiLCJCYXNlX09wdGlvbiIsIlBweF9tb2R1bGVfdGltZXJfcnVudGltZSIsIlBweF9iZW5jaF9saWJfQmVuY2htYXJrX2FjY3VtdSIsIkV4cGVjdF90ZXN0X2NvbGxlY3RvciIsIlBweF9pbmxpbmVfdGVzdF9saWIiLCJjcmVhdGUiLCJsZW4iLCJsZW5ndGgiLCJ0Iiwic2V0Iiwic2V0X2V4biIsImkiLCJ4IiwiZ2V0IiwiaXNfc29tZSIsImlzX25vbmUiLCJzZXhwX29mX3QiLCJzZXhwX29mX2EiLCJ4XzAwMSIsIml0ZXIiLCJtYXRjaCIsInYiLCJpdGVyaSIsImJsaXQiLCJzcmMiLCJzcmNfcG9zIiwiZHN0IiwiZHN0X3BvcyIsIldlYWtfYXJyYXkiXSwic291cmNlcyI6WyIvYnVpbHRpbi9ibGFja2JveC5tbCIsIi9Vc2Vycy95YW5uaWNrLy5vcGFtL2JvbnNhaS1mcm9udGVuZC9saWIvY29yZV9rZXJuZWwvd2Vha19hcnJheS93ZWFrX2FycmF5Lm1sIl0sIm1hcHBpbmdzIjoiSUFBQUEsVUFBQTtBQUFBLElBQUFDLGlCQUFBO0FBQUEsSUFBQUMsaUJBQUE7QUFBQSxZQUFBQyxXQUFBQyxHQUFBQztBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBQUMsV0FBQUYsR0FBQUMsSUFBQUU7QUFBQUEsSUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBQUFDLFdBQUFKLEdBQUFDLElBQUFFLElBQUFFO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxXQUFBTixHQUFBQyxJQUFBRSxJQUFBRSxJQUFBRSxJQUFBQztBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFBQyxjQUFBO0FBQUEsSUFBQUMsY0FBQTtBQUFBLElBQUFDLGFBQUE7QUFBQSxJQUFBQyxPQUFBO0FBQUEsSUFBQUMsYUFBQTtBQUFBLElBQUFDLGNBQUE7QUFBQSxJQUFBQywyQkFBQTtBQUFBLElBQUFDO0FBQUFBLE1BQUE7QUFBQSxJQUFBQyx3QkFBQTtBQUFBLElBQUFDLHNCQUFBO0FBQUEsR0NBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBQUFDLE9BQUFDLEtBTWtCLHNDQUFlO0FBQUEsWUFBQUMsT0FBQUMsR0FDbEIsb0NBQWE7QUFBQSxPQUFBQyxNQVA1QjtBQUFBLFlBQUFDLFFBQUFGLEdBQUFHLEdBQUFDO0FBQUFBLElBVTRCLE9BQXVDO0FBQUEsd0JBQXZDLDhDQUF1QztBQUFBO0FBQUEsT0FBQUMsTUFWbkU7QUFBQSxZQUFBQyxRQUFBTixHQUFBRyxHQWFrQix1Q0FBYztBQUFBLFlBQUFJLFFBQUFQLEdBQUFHLEdBQ1Ysd0JBQWE7QUFBQSxZQUFBSyxVQUFBQyxXQUFBVDtBQUFBQTtBQUFBQSxLQUFBLE1BQ1A7QUFBQSxLQUFBVTtBQUFBQSxPQUFVO0FBQUEsdUNBQUFQLEdBQWMsNEJBQU87QUFBQSxXQUNwQjtBQUFBO0FBQUEsSUFBMkIsdUNBQWM7QUFBQTtBQUFBLFlBQUFRLEtBQUFYLEdBQUF0QjtBQUFBQSxRQUFBLE1BR2pFLHlCQUFRO0FBQUE7QUFBQSxTQUFBeUIsSUFBQTtBQUFBO0FBQUEsVUFBQVMsUUFDYjtBQUFBLE1BQU87QUFBQSxXQUFBQyxJQUFBO0FBQUEsT0FFRCxjQUFFO0FBQUE7QUFBQSxnQkFGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFETTtBQUFBLEdBSWpCO0FBQUEsWUFBQUMsTUFBQWQsR0FBQXRCO0FBQUFBLFFBQUEsTUFHUyx5QkFBUTtBQUFBO0FBQUEsU0FBQXlCLElBQUE7QUFBQTtBQUFBLFVBQUFTLFFBQ2I7QUFBQSxNQUFPO0FBQUEsV0FBQUMsSUFBQTtBQUFBLE9BRUQsaUJBQUk7QUFBQTtBQUFBLGdCQUZIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURNO0FBQUEsR0FJakI7QUFBQSxZQUFBRSxLQUFBQyxLQUFBQyxTQUFBQyxLQUFBQyxTQUFBckI7QUFBQUEsSUFHSixrRUFBcUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFBc0I7QUFBQUEsTUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRURqQ3ZDIiwic291cmNlc0NvbnRlbnQiOlsiKCogZ2VuZXJhdGVkIGNvZGUgKikiLCJvcGVuISBCYXNlXG5cbm1vZHVsZSBXZWFrID0gU3RkbGliLldlYWtcblxudHlwZSAnYSB0ID0gJ2EgSGVhcF9ibG9jay50IFdlYWsudFxuXG5sZXQgY3JlYXRlIH5sZW4gPSBXZWFrLmNyZWF0ZSBsZW5cbmxldCBsZW5ndGggdCA9IFdlYWsubGVuZ3RoIHRcbmxldCBzZXQgPSBXZWFrLnNldFxuXG5sZXQgc2V0X2V4biB0IGkgeCA9IHNldCB0IGkgKE9wdGlvbi5tYXAgeCB+ZjpIZWFwX2Jsb2NrLmNyZWF0ZV9leG4pXG5cbmxldCBnZXQgPSBXZWFrLmdldFxubGV0IGlzX3NvbWUgdCBpID0gV2Vhay5jaGVjayB0IGlcbmxldCBpc19ub25lIHQgaSA9IG5vdCAoaXNfc29tZSB0IGkpXG5sZXQgdG9fYXJyYXkgdCA9IEFycmF5LmluaXQgKGxlbmd0aCB0KSB+ZjooZnVuIGkgLT4gZ2V0IHQgaSlcbmxldCBzZXhwX29mX3Qgc2V4cF9vZl9hIHQgPSBbJXNleHBfb2Y6IGEgSGVhcF9ibG9jay50IG9wdGlvbiBhcnJheV0gKHRvX2FycmF5IHQpXG5cbmxldCBpdGVyIHQgfmYgPVxuICBmb3IgaSA9IDAgdG8gbGVuZ3RoIHQgLSAxIGRvXG4gICAgbWF0Y2ggZ2V0IHQgaSB3aXRoXG4gICAgfCBOb25lIC0+ICgpXG4gICAgfCBTb21lIHYgLT4gZiAoSGVhcF9ibG9jay52YWx1ZSB2KVxuICBkb25lXG5cbmxldCBpdGVyaSB0IH5mID1cbiAgZm9yIGkgPSAwIHRvIGxlbmd0aCB0IC0gMSBkb1xuICAgIG1hdGNoIGdldCB0IGkgd2l0aFxuICAgIHwgTm9uZSAtPiAoKVxuICAgIHwgU29tZSB2IC0+IGYgaSAoSGVhcF9ibG9jay52YWx1ZSB2KVxuICBkb25lXG5cbmxldCBibGl0IH5zcmMgfnNyY19wb3MgfmRzdCB+ZHN0X3BvcyB+bGVuID1cbiAgV2Vhay5ibGl0IHNyYyBzcmNfcG9zIGRzdCBkc3RfcG9zIGxlblxuIl0sImlnbm9yZUxpc3QiOlswXX19XX0=
