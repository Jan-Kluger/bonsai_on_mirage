// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Weak_pointer
//# unitInfo: Requires: Base, Expect_test_collector, Heap_block, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Weak_array
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Weak_pointer = "Weak_pointer",
    cst_weak_pointer = "weak_pointer";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Weak_array = global_data.Weak_array,
    Heap_block = global_data.Heap_block,
    Base = global_data.Base,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Weak_pointer);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_weak_pointer);
   caml_call1(Expect_test_collector[6][1], "weak_pointer/src/weak_pointer.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_weak_pointer, "weak_pointer.ml");
   function create(param){return caml_call1(Weak_array[2], 1);}
   var index = 0;
   function get(t){return caml_call2(Weak_array[6], t, index);}
   function sexp_of_t(sexp_of_a, t){
    var x_001 = get(t), _a_ = caml_call1(Heap_block[1], sexp_of_a);
    return caml_call2(Base[163], _a_, x_001);
   }
   function is_none(t){return caml_call2(Weak_array[8], t, index);}
   function is_some(t){return caml_call2(Weak_array[7], t, index);}
   function set(t, block){
    return caml_call3(Weak_array[4], t, index, [0, block]);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_weak_pointer);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Weak_pointer);
   var Weak_pointer = [0, sexp_of_t, create, get, is_some, is_none, set];
   runtime.caml_register_global(14, Weak_pointer, cst_Weak_pointer);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha19wb2ludGVyLmNtYS5qcyIsInNlY3Rpb25zIjpbeyJvZmZzZXQiOnsibGluZSI6OSwiY29sdW1uIjowfSwibWFwIjp7InZlcnNpb24iOjMsImZpbGUiOiJ3ZWFrX3BvaW50ZXIuY21hLmpzIiwibmFtZXMiOlsicnVudGltZSIsImNzdF9XZWFrX3BvaW50ZXIiLCJjc3Rfd2Vha19wb2ludGVyIiwiY2FtbF9jYWxsMSIsImYiLCJhMCIsImNhbWxfY2FsbDIiLCJhMSIsImNhbWxfY2FsbDMiLCJhMiIsImdsb2JhbF9kYXRhIiwiV2Vha19hcnJheSIsIkhlYXBfYmxvY2siLCJCYXNlIiwiUHB4X21vZHVsZV90aW1lcl9ydW50aW1lIiwiUHB4X2JlbmNoX2xpYl9CZW5jaG1hcmtfYWNjdW11IiwiRXhwZWN0X3Rlc3RfY29sbGVjdG9yIiwiUHB4X2lubGluZV90ZXN0X2xpYiIsImNyZWF0ZSIsInBhcmFtIiwiaW5kZXgiLCJnZXQiLCJ0Iiwic2V4cF9vZl90Iiwic2V4cF9vZl9hIiwieF8wMDEiLCJpc19ub25lIiwiaXNfc29tZSIsInNldCIsImJsb2NrIiwiV2Vha19wb2ludGVyIl0sInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvVXNlcnMveWFubmljay8ub3BhbS9ib25zYWktZnJvbnRlbmQvbGliL2NvcmVfa2VybmVsL3dlYWtfcG9pbnRlci93ZWFrX3BvaW50ZXIubWwiXSwibWFwcGluZ3MiOiJJQUFBQSxVQUFBO0FBQUEsSUFBQUMsbUJBQUE7QUFBQSxJQUFBQyxtQkFBQTtBQUFBLFlBQUFDLFdBQUFDLEdBQUFDO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxXQUFBRixHQUFBQyxJQUFBRTtBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBQUMsV0FBQUosR0FBQUMsSUFBQUUsSUFBQUU7QUFBQUEsSUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBQUMsY0FBQTtBQUFBLElBQUFDLGFBQUE7QUFBQSxJQUFBQyxhQUFBO0FBQUEsSUFBQUMsT0FBQTtBQUFBLElBQUFDLDJCQUFBO0FBQUEsSUFBQUM7QUFBQUEsTUFBQTtBQUFBLElBQUFDLHdCQUFBO0FBQUEsSUFBQUMsc0JBQUE7QUFBQSxHQ0VBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBQUMsT0FBQUMsT0FJZ0IsbUNBQXdCO0FBQUEsT0FBQUMsUUFKeEM7QUFBQSxZQUFBQyxJQUFBQyxHQVNZLDBDQUFzQjtBQUFBLFlBQUFDLFVBQUFDLFdBQUFGO0FBQUFBLFFBQUFHLFFBRUUsY0FBUTtBQUFBLElBQXFCLHdDQUFDO0FBQUE7QUFBQSxZQUFBQyxRQUFBSixHQUVsRCwwQ0FBMEI7QUFBQSxZQUFBSyxRQUFBTCxHQUMxQiwwQ0FBMEI7QUFBQSxZQUFBTSxJQUFBTixHQUFBTztBQUFBQSxJQUV4QixzREFBbUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBQUMsZUFBQTtBQUFBO0FBQUE7QUFBQSxFRGxCckQiLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSIsIigqIFdlIGltcGxlbWVudCBhIHdlYWsgcG9pbnRlciB1c2luZyBhIFtXZWFrX2FycmF5LnRdLiAqKVxuXG5vcGVuISBCYXNlXG5cbnR5cGUgJ2EgdCA9ICdhIFdlYWtfYXJyYXkudFxuXG5sZXQgY3JlYXRlICgpID0gV2Vha19hcnJheS5jcmVhdGUgfmxlbjoxXG5cbigqIFdlIHVzZSBhIHdlYWsgYXJyYXkgb2YgbGVuZ3RoIDEsIHNvIHRoZSB3ZWFrIHBvaW50ZXIgaXMgYXQgaW5kZXggMC4gKilcbmxldCBpbmRleCA9IDBcblxubGV0IGdldCB0ID0gV2Vha19hcnJheS5nZXQgdCBpbmRleFxuXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gWyVzZXhwIChnZXQgdCA6IGEgSGVhcF9ibG9jay50IG9wdGlvbildXG5cbmxldCBpc19ub25lIHQgPSBXZWFrX2FycmF5LmlzX25vbmUgdCBpbmRleFxubGV0IGlzX3NvbWUgdCA9IFdlYWtfYXJyYXkuaXNfc29tZSB0IGluZGV4XG5cbmxldCBzZXQgdCBibG9jayA9IFdlYWtfYXJyYXkuc2V0IHQgaW5kZXggKFNvbWUgYmxvY2spXG4iXSwiaWdub3JlTGlzdCI6WzBdfX1dfQ==
