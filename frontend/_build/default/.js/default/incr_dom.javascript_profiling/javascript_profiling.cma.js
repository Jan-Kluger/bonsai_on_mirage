// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Javascript_profiling
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Stdlib
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Javascript_profiling = "Javascript_profiling",
    cst_javascript_profiling = "javascript_profiling";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib = global_data.Stdlib,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Javascript_profiling);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_javascript_profiling);
   caml_call1
    (Expect_test_collector[6][1],
     "javascript_profiling/javascript_profiling.ml");
   caml_call2
    (Ppx_inline_test_lib[5],
     cst_javascript_profiling,
     "javascript_profiling.ml");
   var cst_before = "_before", cst_after = "_after";
   function mark(name){return runtime.js_prof_mark(name);}
   function measure(name, start, end){
    return runtime.js_prof_measure(name, start, end);
   }
   function record(name, f){
    var
     before_name = caml_call2(Stdlib[28], name, cst_before),
     after_name = caml_call2(Stdlib[28], name, cst_after);
    runtime.js_prof_mark(before_name);
    var res = caml_call1(f, 0);
    runtime.js_prof_mark(after_name);
    runtime.js_prof_measure(name, before_name, after_name);
    return res;
   }
   function clear_marks(param){return runtime.js_prof_clear_marks(0);}
   function clear_measures(param){return runtime.js_prof_clear_measures(0);}
   var Manual = [0, mark, measure];
   caml_call1(Ppx_inline_test_lib[6], cst_javascript_profiling);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Javascript_profiling);
   var
    Javascript_profiling = [0, record, clear_marks, clear_measures, Manual];
   runtime.caml_register_global
    (14, Javascript_profiling, cst_Javascript_profiling);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamF2YXNjcmlwdF9wcm9maWxpbmcuY21hLmpzIiwic2VjdGlvbnMiOlt7Im9mZnNldCI6eyJsaW5lIjo5LCJjb2x1bW4iOjB9LCJtYXAiOnsidmVyc2lvbiI6MywiZmlsZSI6ImphdmFzY3JpcHRfcHJvZmlsaW5nLmNtYS5qcyIsIm5hbWVzIjpbInJ1bnRpbWUiLCJjc3RfSmF2YXNjcmlwdF9wcm9maWxpbmciLCJjc3RfamF2YXNjcmlwdF9wcm9maWxpbmciLCJjYW1sX2NhbGwxIiwiZiIsImEwIiwiY2FtbF9jYWxsMiIsImExIiwiZ2xvYmFsX2RhdGEiLCJTdGRsaWIiLCJQcHhfbW9kdWxlX3RpbWVyX3J1bnRpbWUiLCJQcHhfYmVuY2hfbGliX0JlbmNobWFya19hY2N1bXUiLCJFeHBlY3RfdGVzdF9jb2xsZWN0b3IiLCJQcHhfaW5saW5lX3Rlc3RfbGliIiwiY3N0X2JlZm9yZSIsImNzdF9hZnRlciIsIm1hcmsiLCJuYW1lIiwibWVhc3VyZSIsInN0YXJ0IiwiZW5kIiwicmVjb3JkIiwiYmVmb3JlX25hbWUiLCJhZnRlcl9uYW1lIiwicmVzIiwiY2xlYXJfbWFya3MiLCJwYXJhbSIsImNsZWFyX21lYXN1cmVzIiwiTWFudWFsIiwiSmF2YXNjcmlwdF9wcm9maWxpbmciXSwic291cmNlcyI6WyIvYnVpbHRpbi9ibGFja2JveC5tbCIsIi9Vc2Vycy95YW5uaWNrLy5vcGFtL2JvbnNhaS1mcm9udGVuZC9saWIvaW5jcl9kb20vamF2YXNjcmlwdF9wcm9maWxpbmcvamF2YXNjcmlwdF9wcm9maWxpbmcubWwiXSwibWFwcGluZ3MiOiJJQUFBQSxVQUFBO0FBQUEsSUFBQUMsMkJBQUE7QUFBQSxJQUFBQywyQkFBQTtBQUFBLFlBQUFDLFdBQUFDLEdBQUFDO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxXQUFBRixHQUFBQyxJQUFBRTtBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFBQyxjQUFBO0FBQUEsSUFBQUMsU0FBQTtBQUFBLElBQUFDLDJCQUFBO0FBQUEsSUFBQUM7QUFBQUEsTUFBQTtBQUFBLElBQUFDLHdCQUFBO0FBQUEsSUFBQUMsc0JBQUE7QUFBQSxHQ0FBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUFDLGFBQUEsV0FBQUMsWUFBQTtBQUFBLFlBQUFDLEtBQUFDLE1BS2dCLGlDQUFpQjtBQUFBLFlBQUFDLFFBQUFELE1BQUFFLE9BQUFDO0FBQUFBLElBQ0EsZ0RBQStCO0FBQUE7QUFBQSxZQUFBQyxPQUFBSixNQUFBYjtBQUFBQTtBQUFBQSxLQUFBa0IsY0FHNUM7QUFBQSxLQUFBQyxhQUNEO0FBQUEsSUFMSDtBQUFBLFFBQUFDLE1BT0o7QUFBQSxJQVBJO0FBQUEsSUFDaUI7QUFBQSxJQVFrQjtBQUFBLEdBQzlDO0FBQUEsWUFBQUMsWUFBQUMsT0FHZ0IscUNBQXNCO0FBQUEsWUFBQUMsZUFBQUQsT0FDbkIsd0NBQXlCO0FBQUEsT0FBQUUsU0FuQmpEO0FBQUEsR0F3Qkc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBQUFDLHVCQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUR4QkgiLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSIsImV4dGVybmFsIGpzX3Byb2ZfbWFyayA6IHN0cmluZyAtPiB1bml0ID0gXCJqc19wcm9mX21hcmtcIlxuZXh0ZXJuYWwganNfcHJvZl9tZWFzdXJlIDogc3RyaW5nIC0+IHN0cmluZyAtPiBzdHJpbmcgLT4gdW5pdCA9IFwianNfcHJvZl9tZWFzdXJlXCJcbmV4dGVybmFsIGpzX3Byb2ZfY2xlYXJfbWFya3MgOiB1bml0IC0+IHVuaXQgPSBcImpzX3Byb2ZfY2xlYXJfbWFya3NcIlxuZXh0ZXJuYWwganNfcHJvZl9jbGVhcl9tZWFzdXJlcyA6IHVuaXQgLT4gdW5pdCA9IFwianNfcHJvZl9jbGVhcl9tZWFzdXJlc1wiXG5cbmxldCBtYXJrIG5hbWUgPSBqc19wcm9mX21hcmsgbmFtZVxubGV0IG1lYXN1cmUgfm5hbWUgfnN0YXJ0IH5lbmRfID0ganNfcHJvZl9tZWFzdXJlIG5hbWUgc3RhcnQgZW5kX1xuXG5sZXQgcmVjb3JkIG5hbWUgfmYgPVxuICBsZXQgYmVmb3JlX25hbWUgPSBuYW1lIF4gXCJfYmVmb3JlXCIgaW5cbiAgbGV0IGFmdGVyX25hbWUgPSBuYW1lIF4gXCJfYWZ0ZXJcIiBpblxuICBsZXQgKCkgPSBtYXJrIGJlZm9yZV9uYW1lIGluXG4gIGxldCByZXMgPSBmICgpIGluXG4gIGxldCAoKSA9IG1hcmsgYWZ0ZXJfbmFtZSBpblxuICBtZWFzdXJlIH5uYW1lIH5zdGFydDpiZWZvcmVfbmFtZSB+ZW5kXzphZnRlcl9uYW1lO1xuICByZXNcbjs7XG5cbmxldCBjbGVhcl9tYXJrcyAoKSA9IGpzX3Byb2ZfY2xlYXJfbWFya3MgKClcbmxldCBjbGVhcl9tZWFzdXJlcyAoKSA9IGpzX3Byb2ZfY2xlYXJfbWVhc3VyZXMgKClcblxubW9kdWxlIE1hbnVhbCA9IHN0cnVjdFxuICBsZXQgbWFyayA9IG1hcmtcbiAgbGV0IG1lYXN1cmUgPSBtZWFzdXJlXG5lbmRcbiJdLCJpZ25vcmVMaXN0IjpbMF19fV19
