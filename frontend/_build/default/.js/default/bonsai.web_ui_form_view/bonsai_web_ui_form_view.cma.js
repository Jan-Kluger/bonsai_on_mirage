// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Bonsai_web_ui_form_view__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Bonsai_web_ui_form_view = [0];
   runtime.caml_register_global
    (0, Bonsai_web_ui_form_view, "Bonsai_web_ui_form_view__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_form_view__Import
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_form_view_Im = "Bonsai_web_ui_form_view__Import",
    cst_bonsai_web_ui_form_view = "bonsai_web_ui_form_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_form_view_Im);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_form_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/form/import.ml");
   caml_call2
    (Ppx_inline_test_lib[5], cst_bonsai_web_ui_form_view, "import.ml");
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_form_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_form_view_Im);
   var Bonsai_web_ui_form_view_Import = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_form_view_Import, cst_Bonsai_web_ui_form_view_Im);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_form_view
//# unitInfo: Requires: Core, Core__Error, Expect_test_collector, Inline_css, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_form_view = "Bonsai_web_ui_form_view",
    cst_bonsai_web_ui_form_view = "bonsai_web_ui_form_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    empty_context = [0, 0, 0, 0],
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core = global_data.Core,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core_Error = global_data.Core__Error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_form_view);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_form_view);
   caml_call1
    (Expect_test_collector[6][1],
     "web_ui/view/form/bonsai_web_ui_form_view.ml");
   caml_call2
    (Ppx_inline_test_lib[5],
     cst_bonsai_web_ui_form_view,
     "bonsai_web_ui_form_view.ml");
   caml_call1
    (Inline_css[2][1],
     "\n/* web_ui/view/form/bonsai_web_ui_form_view.ml */\n\n*.clear_fieldset_styles_hash_cf60476fba {\n border:0;\n margin:0;\n padding:0\n}");
   var
    clear_fieldset_styles =
      caml_call1
       (Virtual_dom_Vdom[1][15], "clear_fieldset_styles_hash_cf60476fba"),
    _a_ = [0, "label"],
    _b_ = [0, "error"],
    _c_ = [0, "tooltip"],
    _d_ = [0, "text"],
    _e_ = [0, "append"],
    _f_ = [0, "Append_info"],
    _g_ = [0, "Append_view"],
    _h_ = [0, "element_label"],
    _i_ = [0, "remove"],
    _j_ = [0, "Remove_info"],
    _k_ = [0, "Remove_view"],
    _l_ = [0, "view"],
    _m_ = [0, "context"],
    _n_ = [0, "Empty"],
    _o_ = [0, "Collapsible"],
    _p_ = [0, "Raw"],
    _q_ = [0, "Record"],
    _r_ = [0, "Variant"],
    _s_ = [0, "List"],
    _t_ = [0, "Tuple"],
    _u_ = [0, "Option"],
    _v_ = [0, "raw_view"],
    _w_ = [0, "id"],
    _x_ = [0, "state"],
    _y_ = [0, "collapse_label"],
    _z_ = [0, "Collapsed"],
    _A_ = [0, "Expanded"],
    _B_ = [0, "field_view"],
    _C_ = [0, "field_name"],
    _D_ = [0, "selected_clause"],
    _E_ = [0, "clause_selector"],
    _F_ = [0, "clause_view"],
    _G_ = [0, "clause_name"],
    _H_ = [0, "Indented"],
    _I_ = [0, "legacy_button_position"],
    _J_ = [0, "append_item"],
    _K_ = [0, "list_items"],
    _L_ = [0, "Inline"],
    _M_ = [0, "remove_item"],
    _N_ = [0, "item_view"],
    _O_ = [0, "status"],
    _P_ = [0, "toggle"],
    _Q_ = [0, "Currently_some"],
    _R_ = [0, "Currently_none"];
   function sexp_of_context(param){
    var
     label_006 = param[3],
     error_004 = param[2],
     tooltip_002 = param[1],
     arg_007 = caml_call1(Sexplib0_Sexp_conv[23], label_006),
     bnds_001 = [0, [1, [0, _a_, [0, arg_007, 0]]], 0],
     arg_005 = caml_call2(Core[466], Core_Error[6], error_004),
     bnds_001$0 = [0, [1, [0, _b_, [0, arg_005, 0]]], bnds_001],
     arg_003 = caml_call1(Sexplib0_Sexp_conv[23], tooltip_002),
     bnds_001$1 = [0, [1, [0, _c_, [0, arg_003, 0]]], bnds_001$0];
    return [1, bnds_001$1];
   }
   function sexp_of_append_item(param){
    if(0 === param[0]){
     var
      text_011 = param[2],
      append_009 = param[1],
      arg_012 = caml_call2(Core[466], Core[484], text_011),
      bnds_008 = [0, [1, [0, _d_, [0, arg_012, 0]]], 0],
      arg_010 = caml_call1(Sexplib0_Sexp_conv[23], append_009),
      bnds_008$0 = [0, [1, [0, _e_, [0, arg_010, 0]]], bnds_008];
     return [1, [0, _f_, bnds_008$0]];
    }
    var
     arg0_013 = param[1],
     res0_014 = caml_call1(Sexplib0_Sexp_conv[23], arg0_013);
    return [1, [0, _g_, [0, res0_014, 0]]];
   }
   function sexp_of_remove_item(param){
    if(0 === param[0]){
     var
      element_label_018 = param[2],
      remove_016 = param[1],
      arg_019 = caml_call1(Sexplib0_Sexp_conv[23], element_label_018),
      bnds_015 = [0, [1, [0, _h_, [0, arg_019, 0]]], 0],
      arg_017 = caml_call1(Sexplib0_Sexp_conv[23], remove_016),
      bnds_015$0 = [0, [1, [0, _i_, [0, arg_017, 0]]], bnds_015];
     return [1, [0, _j_, bnds_015$0]];
    }
    var
     arg0_020 = param[1],
     res0_021 = caml_call1(Sexplib0_Sexp_conv[23], arg0_020);
    return [1, [0, _k_, [0, res0_021, 0]]];
   }
   function sexp_of_t(param){
    var
     view_025 = param[2],
     context_023 = param[1],
     arg_026 = sexp_of_view(view_025),
     bnds_022 = [0, [1, [0, _l_, [0, arg_026, 0]]], 0],
     arg_024 = sexp_of_context(context_023),
     bnds_022$0 = [0, [1, [0, _m_, [0, arg_024, 0]]], bnds_022];
    return [1, bnds_022$0];
   }
   function sexp_of_view(param){
    if(typeof param === "number") return _n_;
    switch(param[0]){
      case 0:
       var arg0_027 = param[1], res0_028 = sexp_of_collapsible(arg0_027);
       return [1, [0, _o_, [0, res0_028, 0]]];
      case 1:
       var arg0_029 = param[1], res0_030 = sexp_of_raw(arg0_029);
       return [1, [0, _p_, [0, res0_030, 0]]];
      case 2:
       var
        arg0_031 = param[1],
        res0_032 = caml_call2(Core[431], sexp_of_field, arg0_031);
       return [1, [0, _q_, [0, res0_032, 0]]];
      case 3:
       var arg0_033 = param[1], res0_034 = sexp_of_variant(arg0_033);
       return [1, [0, _r_, [0, res0_034, 0]]];
      case 4:
       var arg0_035 = param[1], res0_036 = sexp_of_list_view(arg0_035);
       return [1, [0, _s_, [0, res0_036, 0]]];
      case 5:
       var
        arg0_037 = param[1],
        res0_038 = caml_call2(Core[431], sexp_of_t, arg0_037);
       return [1, [0, _t_, [0, res0_038, 0]]];
      default:
       var arg0_039 = param[1], res0_040 = sexp_of_option_view(arg0_039);
       return [1, [0, _u_, [0, res0_040, 0]]];
    }
   }
   function sexp_of_raw(param){
    var
     raw_view_044 = param[2],
     id_042 = param[1],
     arg_045 = caml_call1(Sexplib0_Sexp_conv[23], raw_view_044),
     bnds_041 = [0, [1, [0, _v_, [0, arg_045, 0]]], 0],
     arg_043 = caml_call1(Core[484], id_042),
     bnds_041$0 = [0, [1, [0, _w_, [0, arg_043, 0]]], bnds_041];
    return [1, bnds_041$0];
   }
   function sexp_of_collapsible(param){
    var
     state_049 = param[2],
     collapse_label_047 = param[1],
     arg_050 = sexp_of_collapsed_state(state_049),
     bnds_046 = [0, [1, [0, _x_, [0, arg_050, 0]]], 0],
     arg_048 = caml_call1(Sexplib0_Sexp_conv[23], collapse_label_047),
     bnds_046$0 = [0, [1, [0, _y_, [0, arg_048, 0]]], bnds_046];
    return [1, bnds_046$0];
   }
   function sexp_of_collapsed_state(param){
    if(0 === param[0]){
     var
      arg0_051 = param[1],
      res0_052 = caml_call2(Core[466], sexp_of_t, arg0_051);
     return [1, [0, _z_, [0, res0_052, 0]]];
    }
    var arg0_053 = param[1], res0_054 = sexp_of_t(arg0_053);
    return [1, [0, _A_, [0, res0_054, 0]]];
   }
   function sexp_of_field(param){
    var
     field_view_058 = param[2],
     field_name_056 = param[1],
     arg_059 = sexp_of_t(field_view_058),
     bnds_055 = [0, [1, [0, _B_, [0, arg_059, 0]]], 0],
     arg_057 = caml_call1(Core[484], field_name_056),
     bnds_055$0 = [0, [1, [0, _C_, [0, arg_057, 0]]], bnds_055];
    return [1, bnds_055$0];
   }
   function sexp_of_variant(param){
    var
     selected_clause_063 = param[2],
     clause_selector_061 = param[1],
     arg_064 = caml_call2(Core[466], sexp_of_clause, selected_clause_063),
     bnds_060 = [0, [1, [0, _D_, [0, arg_064, 0]]], 0],
     arg_062 = caml_call1(Sexplib0_Sexp_conv[23], clause_selector_061),
     bnds_060$0 = [0, [1, [0, _E_, [0, arg_062, 0]]], bnds_060];
    return [1, bnds_060$0];
   }
   function sexp_of_clause(param){
    var
     clause_view_068 = param[2],
     clause_name_066 = param[1],
     arg_069 = sexp_of_t(clause_view_068),
     bnds_065 = [0, [1, [0, _F_, [0, arg_069, 0]]], 0],
     arg_067 = caml_call1(Core[484], clause_name_066),
     bnds_065$0 = [0, [1, [0, _G_, [0, arg_067, 0]]], bnds_065];
    return [1, bnds_065$0];
   }
   function sexp_of_list_view(param){
    var
     legacy_button_position_075 = param[3],
     append_item_073 = param[2],
     list_items_071 = param[1],
     bnds_070 = 0,
     arg_076 = 433198059 <= legacy_button_position_075 ? _H_ : _L_,
     bnds_070$0 = [0, [1, [0, _I_, [0, arg_076, 0]]], bnds_070],
     arg_074 = sexp_of_append_item(append_item_073),
     bnds_070$1 = [0, [1, [0, _J_, [0, arg_074, 0]]], bnds_070$0],
     arg_072 = caml_call2(Core[431], sexp_of_list_item, list_items_071),
     bnds_070$2 = [0, [1, [0, _K_, [0, arg_072, 0]]], bnds_070$1];
    return [1, bnds_070$2];
   }
   function sexp_of_list_item(param){
    var
     remove_item_080 = param[2],
     item_view_078 = param[1],
     arg_081 = sexp_of_remove_item(remove_item_080),
     bnds_077 = [0, [1, [0, _M_, [0, arg_081, 0]]], 0],
     arg_079 = sexp_of_t(item_view_078),
     bnds_077$0 = [0, [1, [0, _N_, [0, arg_079, 0]]], bnds_077];
    return [1, bnds_077$0];
   }
   function sexp_of_option_view(param){
    var
     status_085 = param[2],
     toggle_083 = param[1],
     arg_086 = sexp_of_option_status(status_085),
     bnds_082 = [0, [1, [0, _O_, [0, arg_086, 0]]], 0],
     arg_084 = caml_call1(Sexplib0_Sexp_conv[23], toggle_083),
     bnds_082$0 = [0, [1, [0, _P_, [0, arg_084, 0]]], bnds_082];
    return [1, bnds_082$0];
   }
   function sexp_of_option_status(param){
    if(0 === param[0]){
     var arg0_087 = param[1], res0_088 = sexp_of_t(arg0_087);
     return [1, [0, _Q_, [0, res0_088, 0]]];
    }
    var
     arg0_089 = param[1],
     res0_090 = caml_call2(Core[466], sexp_of_t, arg0_089);
    return [1, [0, _R_, [0, res0_090, 0]]];
   }
   function of_vdom(id, raw_view){
    var view = [1, [0, id, raw_view]];
    return [0, empty_context, view];
   }
   function of_vdom$0(id, vdom){
    return of_vdom(id, function(context, param){return vdom;});
   }
   var empty = [0, empty_context, 0];
   function tuple(ts){var view = [5, ts]; return [0, empty_context, view];}
   function record(fields){
    var view = [2, fields];
    return [0, empty_context, view];
   }
   function collapsible(label, state){
    var view = [0, [0, label, state]];
    return [0, empty_context, view];
   }
   function variant(clause_selector, selected_clause){
    var view = [3, [0, clause_selector, selected_clause]];
    return [0, empty_context, view];
   }
   function list(append_item, legacy_button_position, list_items){
    var view = [4, [0, list_items, append_item, legacy_button_position]];
    return [0, empty_context, view];
   }
   function option(toggle, status){
    var view = [6, [0, toggle, status]];
    return [0, empty_context, view];
   }
   function list_item(view, remove_item){return [0, view, remove_item];}
   function suggest_error(error, t){
    if(t[1][2]) return t;
    var _V_ = t[1];
    return [0, [0, _V_[1], [0, error], _V_[3]], t[2]];
   }
   function suggest_label(label, t){
    if(t[1][3]) return t;
    var _U_ = t[1];
    return [0, [0, _U_[1], _U_[2], [0, label]], t[2]];
   }
   function suggest_label$0(label, t){
    return suggest_label(caml_call1(Virtual_dom_Node[5], label), t);
   }
   function set_label(label, t){
    var _T_ = t[1];
    return [0, [0, _T_[1], _T_[2], [0, label]], t[2]];
   }
   function set_tooltip(tooltip, t){
    var _S_ = t[1];
    return [0, [0, [0, tooltip], _S_[2], _S_[3]], t[2]];
   }
   function with_fieldset(currently_editable, view){
    var
     disabled =
       currently_editable ? Virtual_dom_Vdom[1][10] : Virtual_dom_Vdom[1][18];
    return caml_call3
            (Virtual_dom_Node[17],
             0,
             [0, [0, disabled, [0, clear_fieldset_styles, 0]]],
             [0, view, 0]);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_form_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_form_view);
   var
    Bonsai_web_ui_form_view =
      [0,
       sexp_of_context,
       sexp_of_append_item,
       sexp_of_remove_item,
       sexp_of_t,
       sexp_of_view,
       sexp_of_raw,
       sexp_of_collapsible,
       sexp_of_collapsed_state,
       sexp_of_option_view,
       sexp_of_option_status,
       sexp_of_list_view,
       sexp_of_list_item,
       sexp_of_variant,
       sexp_of_clause,
       sexp_of_field,
       of_vdom$0,
       of_vdom,
       empty,
       tuple,
       record,
       variant,
       option,
       collapsible,
       list_item,
       list,
       suggest_error,
       suggest_label,
       suggest_label$0,
       set_label,
       set_tooltip,
       with_fieldset];
   runtime.caml_register_global
    (65, Bonsai_web_ui_form_view, cst_Bonsai_web_ui_form_view);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
