// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Bonsai_web_ui_view__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Bonsai_web_ui_view = [0];
   runtime.caml_register_global(0, Bonsai_web_ui_view, "Bonsai_web_ui_view__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Import
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Import = "Bonsai_web_ui_view__Import",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Import);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/import.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "import.ml");
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Import);
   var Bonsai_web_ui_view_Import = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_view_Import, cst_Bonsai_web_ui_view_Import);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Constants
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv_error
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bold = "Bold",
    cst_Bonsai_web_ui_view_Constan = "Bonsai_web_ui_view__Constants",
    cst_Error = "Error",
    cst_Info = "Info",
    cst_Italic = "Italic",
    cst_Large = "Large",
    cst_Regular = "Regular",
    cst_Small = "Small",
    cst_Success = "Success",
    cst_Underlined = "Underlined",
    cst_Warning = "Warning",
    cst_bold = "bold",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_error = "error",
    cst_info = "info",
    cst_italic = "italic",
    cst_large = "large",
    cst_regular = "regular",
    cst_small = "small",
    cst_success = "success",
    cst_underlined = "underlined",
    cst_warning = "warning",
    caml_int_compare = runtime.caml_int_compare;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_003 = "web_ui/view/src/constants.ml.Intent.t",
    all = [0, 0, [0, 1, [0, 2, [0, 3, 0]]]],
    error_source_011 = "web_ui/view/src/constants.ml.Font_style.t",
    all$0 = [0, 0, [0, 1, [0, 2, [0, 3, 0]]]],
    error_source_019 = "web_ui/view/src/constants.ml.Font_size.t",
    all$1 = [0, 0, [0, 1, [0, 2, 0]]],
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Constan);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/constants.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "constants.ml");
   var
    Fg_bg = [0],
    _a_ = [0, cst_Info],
    _b_ = [0, cst_Success],
    _c_ = [0, cst_Warning],
    _d_ = [0, cst_Error];
   function t_of_sexp(sexp_004){
    a:
    {
     if(0 === sexp_004[0]){
      var _A_ = sexp_004[1];
      b:
      if(_A_ !== cst_Error){
       c:
       if(_A_ !== cst_Info){
        d:
        if(_A_ !== cst_Success){
         if(_A_ !== cst_Warning){
          if(_A_ === cst_error) break b;
          if(_A_ === cst_info) break c;
          if(_A_ === cst_success) break d;
          if(_A_ !== cst_warning) break a;
         }
         return 2;
        }
        return 1;
       }
       return 0;
      }
      return 3;
     }
     var _B_ = sexp_004[1];
     if(! _B_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
     var _C_ = _B_[1];
     if(0 !== _C_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_003, sexp_004);
     var _D_ = _C_[1];
     b:
     if(_D_ !== cst_Error){
      c:
      if(_D_ !== cst_Info){
       d:
       if(_D_ !== cst_Success){
        if(_D_ !== cst_Warning){
         if(_D_ === cst_error) break b;
         if(_D_ === cst_info) break c;
         if(_D_ === cst_success) break d;
         if(_D_ !== cst_warning) break a;
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[3], error_source_003, sexp_004);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_003, sexp_004);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_003, sexp_004);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_003, sexp_004);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_003, sexp_004);
   }
   function sexp_of_t(param){
    switch(param){
      case 0:
       return _a_;
      case 1:
       return _b_;
      case 2:
       return _c_;
      default: return _d_;
    }
   }
   function equal(_z_, _y_){return _z_ === _y_ ? 1 : 0;}
   var compare = caml_int_compare;
   function lookup(_x_, param){
    var error = _x_[4], warning = _x_[3], success = _x_[2], info = _x_[1];
    switch(param){
      case 0:
       return info;
      case 1:
       return success;
      case 2:
       return warning;
      default: return error;
    }
   }
   var
    Intent = [0, t_of_sexp, sexp_of_t, equal, compare, all, lookup],
    _e_ = [0, cst_Regular],
    _f_ = [0, cst_Bold],
    _g_ = [0, cst_Italic],
    _h_ = [0, cst_Underlined];
   function t_of_sexp$0(sexp_012){
    a:
    {
     if(0 === sexp_012[0]){
      var _t_ = sexp_012[1];
      b:
      if(_t_ !== cst_Bold){
       c:
       if(_t_ !== cst_Italic){
        d:
        if(_t_ !== cst_Regular){
         if(_t_ !== cst_Underlined){
          if(_t_ === cst_bold) break b;
          if(_t_ === cst_italic) break c;
          if(_t_ === cst_regular) break d;
          if(_t_ !== cst_underlined) break a;
         }
         return 3;
        }
        return 0;
       }
       return 2;
      }
      return 1;
     }
     var _u_ = sexp_012[1];
     if(! _u_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_011, sexp_012);
     var _v_ = _u_[1];
     if(0 !== _v_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_011, sexp_012);
     var _w_ = _v_[1];
     b:
     if(_w_ !== cst_Bold){
      c:
      if(_w_ !== cst_Italic){
       d:
       if(_w_ !== cst_Regular){
        if(_w_ !== cst_Underlined){
         if(_w_ === cst_bold) break b;
         if(_w_ === cst_italic) break c;
         if(_w_ === cst_regular) break d;
         if(_w_ !== cst_underlined) break a;
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[3], error_source_011, sexp_012);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_011, sexp_012);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_011, sexp_012);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_011, sexp_012);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_011, sexp_012);
   }
   function sexp_of_t$0(param){
    switch(param){
      case 0:
       return _e_;
      case 1:
       return _f_;
      case 2:
       return _g_;
      default: return _h_;
    }
   }
   function equal$0(_s_, _r_){return _s_ === _r_ ? 1 : 0;}
   var
    compare$0 = caml_int_compare,
    Font_style = [0, t_of_sexp$0, sexp_of_t$0, equal$0, compare$0, all$0],
    _i_ = [0, cst_Small],
    _j_ = [0, cst_Regular],
    _k_ = [0, cst_Large];
   function t_of_sexp$1(sexp_020){
    a:
    {
     if(0 === sexp_020[0]){
      var _n_ = sexp_020[1];
      b:
      if(_n_ !== cst_Large){
       c:
       if(_n_ !== cst_Regular){
        if(_n_ !== cst_Small){
         if(_n_ === cst_large) break b;
         if(_n_ === cst_regular) break c;
         if(_n_ !== cst_small) break a;
        }
        return 0;
       }
       return 1;
      }
      return 2;
     }
     var _o_ = sexp_020[1];
     if(! _o_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_019, sexp_020);
     var _p_ = _o_[1];
     if(0 !== _p_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_019, sexp_020);
     var _q_ = _p_[1];
     b:
     if(_q_ !== cst_Large){
      c:
      if(_q_ !== cst_Regular){
       if(_q_ !== cst_Small){
        if(_q_ === cst_large) break b;
        if(_q_ === cst_regular) break c;
        if(_q_ !== cst_small) break a;
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_019, sexp_020);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_019, sexp_020);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_019, sexp_020);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_019, sexp_020);
   }
   function sexp_of_t$1(param){
    switch(param){case 0: return _i_;case 1: return _j_;default: return _k_;
    }
   }
   function equal$1(_m_, _l_){return _m_ === _l_ ? 1 : 0;}
   var
    compare$1 = caml_int_compare,
    Font_size = [0, t_of_sexp$1, sexp_of_t$1, equal$1, compare$1, all$1],
    Table = [0],
    Form = [0],
    Card_title_kind = [0];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Constan);
   var
    Bonsai_web_ui_view_Constants =
      [0, Fg_bg, Intent, Font_style, Font_size, Table, Form, Card_title_kind];
   runtime.caml_register_global
    (73, Bonsai_web_ui_view_Constants, cst_Bonsai_web_ui_view_Constan);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__For_codemirror
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_For_cod = "Bonsai_web_ui_view__For_codemirror",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_For_cod);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1
    (Expect_test_collector[6][1], "web_ui/view/src/for_codemirror.ml");
   caml_call2
    (Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "for_codemirror.ml");
   var
    _a_ = [0, "Basic_dark"],
    _b_ = [0, "Basic_light"],
    _c_ = [0, "Gruvbox_dark"],
    _d_ = [0, "Nord"],
    _e_ = [0, "Solarized_dark"],
    _f_ = [0, "Solarized_light"],
    _g_ = [0, "Material_dark"];
   function sexp_of_t(param){
    switch(param){
      case 0:
       return _a_;
      case 1:
       return _b_;
      case 2:
       return _c_;
      case 3:
       return _d_;
      case 4:
       return _e_;
      case 5:
       return _f_;
      default: return _g_;
    }
   }
   var Theme = [0, sexp_of_t];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_For_cod);
   var Bonsai_web_ui_view_For_codemir = [0, Theme];
   runtime.caml_register_global
    (18, Bonsai_web_ui_view_For_codemir, cst_Bonsai_web_ui_view_For_cod);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Form_context
//# unitInfo: Requires: Base__Field, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Form_co = "Bonsai_web_ui_view__Form_context",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var global_data = runtime.caml_get_global_data();
   global_data.Base__Field;
   var
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Form_co);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/form_context.ml");
   caml_call2
    (Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "form_context.ml");
   function editable(r){return r[2];}
   function depth(r){return r[1];}
   function default$0(editable){return [0, 0, editable];}
   function incr_depth(t){return [0, t[1] + 1 | 0, t[2]];}
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Form_co);
   var
    Bonsai_web_ui_view_Form_contex =
      [0, default$0, incr_depth, depth, editable];
   runtime.caml_register_global
    (15, Bonsai_web_ui_view_Form_contex, cst_Bonsai_web_ui_view_Form_co);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Tooltip
//# unitInfo: Requires: Css_gen, Expect_test_collector, Inline_css, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Tooltip = "Bonsai_web_ui_view__Tooltip",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Css_gen = global_data.Css_gen,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Tooltip);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/tooltip.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "tooltip.ml");
   var Direction = [0];
   caml_call1
    (Inline_css[2][1],
     "\n/* web_ui/view/src/tooltip.ml */\n\n*.tooltip_container_hash_2e501bd088 {\n --dist_hash_2e501bd088:0.3em;\n position:relative;\n display:inline-flex;\n justify-content:center;\n text-decoration:underline;\n text-decoration-style:dotted;\n text-underline-offset:0.15em\n}\n\n*.tooltip_hash_2e501bd088 {\n z-index:9001\n}\n\n*.tooltip_container_hash_2e501bd088>.tooltip_hash_2e501bd088 {\n display:none\n}\n\n*.tooltip_container_hash_2e501bd088:hover>.tooltip_hash_2e501bd088 {\n display:block;\n position:absolute;\n padding:0.1em 0.3em;\n max-width:max(300px,100%);\n width:max-content;\n border:1px solid var(--border_hash_2e501bd088);\n border-radius:2px;\n background:var(--bg_hash_2e501bd088);\n color:var(--fg_hash_2e501bd088)\n}\n\n*.tooltip_container_hash_2e501bd088.top_hash_2e501bd088,*.tooltip_container_hash_2e501bd088.bottom_hash_2e501bd088 {\n flex-direction:row\n}\n\n*.tooltip_container_hash_2e501bd088.left_hash_2e501bd088,*.tooltip_container_hash_2e501bd088.right_hash_2e501bd088 {\n flex-direction:column\n}\n\n*.tooltip_container_hash_2e501bd088.top_hash_2e501bd088>.tooltip_hash_2e501bd088 {\n transform:translateY(-100%)\n}\n\n*.tooltip_container_hash_2e501bd088.bottom_hash_2e501bd088>.tooltip_hash_2e501bd088 {\n top:100%\n}\n\n*.tooltip_container_hash_2e501bd088.left_hash_2e501bd088 {\n padding-left:var(--dist_hash_2e501bd088);\n margin-left:calc(0 - var(--dist_hash_2e501bd088))\n}\n\n*.tooltip_container_hash_2e501bd088.right_hash_2e501bd088 {\n padding-right:var(--dist_hash_2e501bd088);\n margin-right:calc(0 - var(--dist_hash_2e501bd088))\n}\n\n*.tooltip_container_hash_2e501bd088.left_hash_2e501bd088>.tooltip_hash_2e501bd088 {\n transform:translateX(calc(-100% - var(--dist_hash_2e501bd088)))\n}\n\n*.tooltip_container_hash_2e501bd088.right_hash_2e501bd088>.tooltip_hash_2e501bd088 {\n left:100%\n}");
   var
    top = caml_call1(Virtual_dom_Vdom[1][15], "top_hash_2e501bd088"),
    tooltip_container =
      caml_call1(Virtual_dom_Vdom[1][15], "tooltip_container_hash_2e501bd088"),
    left = caml_call1(Virtual_dom_Vdom[1][15], "left_hash_2e501bd088"),
    right = caml_call1(Virtual_dom_Vdom[1][15], "right_hash_2e501bd088"),
    bottom = caml_call1(Virtual_dom_Vdom[1][15], "bottom_hash_2e501bd088"),
    tooltip = caml_call1(Virtual_dom_Vdom[1][15], "tooltip_hash_2e501bd088"),
    cst_bg_hash_2e501bd088 = "--bg_hash_2e501bd088",
    cst_border_hash_2e501bd088 = "--border_hash_2e501bd088",
    cst_fg_hash_2e501bd088 = "--fg_hash_2e501bd088";
   function make
   (constants, container_attr, tooltip_attr, direction, tipped, tooltip$0){
    switch(direction){
      case 0:
       var dir_class = top; break;
      case 1:
       var dir_class = right; break;
      case 2:
       var dir_class = bottom; break;
      default: var dir_class = left;
    }
    var
     ppx_css_value_002 = caml_call1(Css_gen[5][15], constants[2][1]),
     ppx_css_value_002$0 = caml_call1(Css_gen[5][15], constants[3]),
     ppx_css_value_002$1 = caml_call1(Css_gen[5][15], constants[2][2]),
     ppx_css_acc_001 =
       [0, [0, cst_bg_hash_2e501bd088, ppx_css_value_002$1], 0],
     ppx_css_acc_001$0 =
       [0,
        [0, cst_border_hash_2e501bd088, ppx_css_value_002$0],
        ppx_css_acc_001],
     ppx_css_acc_001$1 =
       [0, [0, cst_fg_hash_2e501bd088, ppx_css_value_002], ppx_css_acc_001$0],
     vars = caml_call1(Virtual_dom_Vdom[1][88], ppx_css_acc_001$1),
     tooltip$1 =
       caml_call3
        (Virtual_dom_Node[14],
         0,
         [0, [0, tooltip, [0, tooltip_attr, [0, vars, 0]]]],
         [0, tooltip$0, 0]);
    return caml_call3
            (Virtual_dom_Node[38],
             0,
             [0,
              [0, container_attr, [0, tooltip_container, [0, dir_class, 0]]]],
             [0, tipped, [0, tooltip$1, 0]]);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Tooltip);
   var Bonsai_web_ui_view_Tooltip = [0, Direction, make];
   runtime.caml_register_global
    (36, Bonsai_web_ui_view_Tooltip, cst_Bonsai_web_ui_view_Tooltip);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Underlying_intf
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Underly = "Bonsai_web_ui_view__Underlying_intf",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Underly);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1
    (Expect_test_collector[6][1], "web_ui/view/src/underlying_intf.ml");
   caml_call2
    (Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "underlying_intf.ml");
   var C = [0];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Underly);
   var Bonsai_web_ui_view_Underlying_ = [0, C];
   runtime.caml_register_global
    (11, Bonsai_web_ui_view_Underlying_, cst_Bonsai_web_ui_view_Underly);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Theme
//# unitInfo: Requires: CamlinternalOO, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Theme = "Bonsai_web_ui_view__Theme",
    cst_app_attr = "app_attr",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_button = "button",
    cst_card = "card",
    cst_codemirror_theme = "codemirror_theme",
    cst_constants = "constants",
    cst_devbar = "devbar",
    cst_form_append_item = "form_append_item",
    cst_form_collapsible = "form_collapsible",
    cst_form_empty = "form_empty",
    cst_form_list = "form_list",
    cst_form_option = "form_option",
    cst_form_raw = "form_raw",
    cst_form_record = "form_record",
    cst_form_remove_item = "form_remove_item",
    cst_form_to_vdom = "form_to_vdom",
    cst_form_toplevel_combine = "form_toplevel_combine",
    cst_form_tuple = "form_tuple",
    cst_form_variant = "form_variant",
    cst_form_view = "form_view",
    cst_form_view_error = "form_view_error",
    cst_form_view_error_details = "form_view_error_details",
    cst_form_view_tooltip = "form_view_tooltip",
    cst_humanize_sexp = "humanize_sexp",
    cst_table = "table",
    cst_table_body = "table_body",
    cst_table_body_cell = "table_body_cell",
    cst_table_body_cell_empty = "table_body_cell_empty",
    cst_table_body_row = "table_body_row",
    cst_table_header = "table_header",
    cst_table_header_cell = "table_header_cell",
    cst_table_header_row = "table_header_row",
    cst_tabs = "tabs",
    cst_theme_name = "theme_name",
    cst_themed_text = "themed_text",
    cst_tooltip = "tooltip",
    cst_use_intent_fg_or_bg_for_hi = "use_intent_fg_or_bg_for_highlighting",
    caml_get_public_method = runtime.caml_get_public_method;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) === 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    shared =
      [0,
       cst_card,
       cst_constants,
       cst_tabs,
       cst_table_header_cell,
       cst_form_tuple,
       cst_table_body,
       cst_table_body_cell_empty,
       cst_button,
       cst_form_append_item,
       cst_form_view_tooltip,
       cst_form_raw,
       cst_humanize_sexp,
       cst_tooltip,
       cst_form_list,
       cst_form_record,
       cst_devbar,
       cst_table_header_row,
       cst_form_view_error_details,
       cst_form_view,
       cst_theme_name,
       cst_codemirror_theme,
       cst_form_to_vdom,
       cst_themed_text,
       cst_table,
       cst_table_body_cell,
       cst_app_attr,
       cst_form_variant,
       cst_form_collapsible,
       cst_form_option,
       cst_form_view_error,
       cst_use_intent_fg_or_bg_for_hi,
       cst_form_remove_item,
       cst_table_body_row,
       cst_form_empty,
       cst_table_header,
       cst_form_toplevel_combine],
    CamlinternalOO = global_data.CamlinternalOO,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Theme);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/theme.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "theme.ml");
   var
    _a_ =
      [0,
       cst_use_intent_fg_or_bg_for_hi,
       cst_tooltip,
       cst_themed_text,
       cst_theme_name,
       cst_tabs,
       cst_table_header_row,
       cst_table_header_cell,
       cst_table_header,
       cst_table_body_row,
       cst_table_body_cell_empty,
       cst_table_body_cell,
       cst_table_body,
       cst_table,
       cst_humanize_sexp,
       cst_form_view_tooltip,
       cst_form_view_error_details,
       cst_form_view_error,
       cst_form_view,
       cst_form_variant,
       cst_form_tuple,
       cst_form_toplevel_combine,
       cst_form_to_vdom,
       cst_form_remove_item,
       cst_form_record,
       cst_form_raw,
       cst_form_option,
       cst_form_list,
       cst_form_empty,
       cst_form_collapsible,
       cst_form_append_item,
       cst_devbar,
       cst_constants,
       cst_codemirror_theme,
       cst_card,
       cst_button,
       cst_app_attr],
    _b_ =
      [0,
       cst_app_attr,
       cst_button,
       cst_card,
       cst_codemirror_theme,
       cst_constants,
       cst_devbar,
       cst_form_append_item,
       cst_form_collapsible,
       cst_form_empty,
       cst_form_list,
       cst_form_option,
       cst_form_raw,
       cst_form_record,
       cst_form_remove_item,
       cst_form_to_vdom,
       cst_form_toplevel_combine,
       cst_form_tuple,
       cst_form_variant,
       cst_form_view,
       cst_form_view_error,
       cst_form_view_error_details,
       cst_form_view_tooltip,
       cst_humanize_sexp,
       cst_table,
       cst_table_body,
       cst_table_body_cell,
       cst_table_body_cell_empty,
       cst_table_body_row,
       cst_table_header,
       cst_table_header_cell,
       cst_table_header_row,
       cst_tabs,
       cst_theme_name,
       cst_themed_text,
       cst_tooltip,
       cst_use_intent_fg_or_bg_for_hi],
    _c_ = [0, 0, 0, 0];
   function override_constants(theme, f){
    var
     _e_ = theme[2],
     prev_constants =
       caml_call1(caml_get_public_method(_e_, -999590257, 1), _e_),
     new_constants = caml_call1(f, prev_constants),
     c = [],
     _f_ = caml_call2(CamlinternalOO[28], _c_, [0, theme[1][2]]);
    if(! _f_[1])
     caml_call3
      (CamlinternalOO[20],
       shared,
       function(_j_){
        var
         _k_ = caml_call2(CamlinternalOO[3], _j_, cst),
         _l_ = caml_call2(CamlinternalOO[8], _j_, _a_)[32],
         _m_ = caml_call6(CamlinternalOO[18], _j_, 0, 0, _b_, theme[1], 0)[1];
        caml_call3
         (CamlinternalOO[10],
          _j_,
          _l_,
          function(self_1){var env = self_1[1 + _k_]; return env[1];});
        return function(_n_){
         var _o_ = _n_[1];
         return function(_p_){
          var _q_ = caml_call2(CamlinternalOO[24], _p_, _j_);
          caml_call2(_m_, _n_[2], _q_);
          _q_[1 + _k_] = _o_;
          return caml_call3(CamlinternalOO[26], _p_, _q_, _j_);};};
       },
       _f_);
    var
     _g_ = [0, [0, new_constants], theme[1][4]],
     _h_ = _f_[1],
     _i_ = _f_[2];
    runtime.caml_update_dummy(c, [0, caml_call1(_f_[1], _g_), _i_, _h_, _g_]);
    var singleton = caml_call1(c[1], 0);
    return [0, c, singleton];
   }
   function name(T){
    var _d_ = T[2];
    return caml_call1(caml_get_public_method(_d_, -143159423, 2), _d_);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Theme);
   var Bonsai_web_ui_view_Theme = [0, override_constants, name];
   runtime.caml_register_global
    (16, Bonsai_web_ui_view_Theme, cst_Bonsai_web_ui_view_Theme);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Table
//# unitInfo: Requires: Core, Core__Fn, Core__Int, Core__List, Core__Option, Css_gen, Expect_test_collector, Inline_css, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_bg_hash_983aa8de59$0 = "--bg_hash_983aa8de59",
    cst_body_body_border_hash_983a$0 = "--body-body-border_hash_983aa8de59",
    cst_fg_hash_983aa8de59$0 = "--fg_hash_983aa8de59",
    cst_header_bg_hash_983aa8de59$0 = "--header-bg_hash_983aa8de59",
    cst_header_body_border_hash_98$0 = "--header-body-border_hash_983aa8de59",
    cst_header_fg_hash_983aa8de59$0 = "--header-fg_hash_983aa8de59",
    cst_header_header_border_hash_$0 =
      "--header-header-border_hash_983aa8de59",
    cst_row_even_bg_hash_983aa8de5$0 = "--row-even-bg_hash_983aa8de59",
    cst_row_even_fg_hash_983aa8de5$0 = "--row-even-fg_hash_983aa8de59",
    cst_row_odd_bg_hash_983aa8de59$0 = "--row-odd-bg_hash_983aa8de59",
    cst_row_odd_fg_hash_983aa8de59$0 = "--row-odd-fg_hash_983aa8de59",
    cst_Bonsai_web_ui_view_Table = "Bonsai_web_ui_view__Table",
    cst_body_cell_hash_983aa8de59 = "body_cell_hash_983aa8de59",
    cst_body_hash_983aa8de59 = "body_hash_983aa8de59",
    cst_body_row_hash_983aa8de59 = "body_row_hash_983aa8de59",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_empty_hash_983aa8de59 = "empty_hash_983aa8de59",
    cst_header_cell_hash_983aa8de5 = "header_cell_hash_983aa8de59",
    cst_header_hash_983aa8de59 = "header_hash_983aa8de59",
    cst_header_row_hash_983aa8de59 = "header_row_hash_983aa8de59",
    cst_table_hash_983aa8de59 = "table_hash_983aa8de59",
    caml_get_public_method = runtime.caml_get_public_method;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) === 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call12(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11){
    return (f.l >= 0 ? f.l : f.l = f.length) === 12
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11)
            : runtime.caml_call_gen
              (f, [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    table$0 = cst_table_hash_983aa8de59,
    header = cst_header_hash_983aa8de59,
    header_cell$0 = cst_header_cell_hash_983aa8de5,
    header_row$0 = cst_header_row_hash_983aa8de59,
    empty = cst_empty_hash_983aa8de59,
    body_row = cst_body_row_hash_983aa8de59,
    body_cell = cst_body_cell_hash_983aa8de59,
    body = cst_body_hash_983aa8de59,
    fg = cst_fg_hash_983aa8de59$0,
    header_fg = cst_header_fg_hash_983aa8de59$0,
    bg = cst_bg_hash_983aa8de59$0,
    body_body_border = cst_body_body_border_hash_983a$0,
    row_even_fg = cst_row_even_fg_hash_983aa8de5$0,
    row_even_bg = cst_row_even_bg_hash_983aa8de5$0,
    header_body_border = cst_header_body_border_hash_98$0,
    row_odd_bg = cst_row_odd_bg_hash_983aa8de59$0,
    header_bg = cst_header_bg_hash_983aa8de59$0,
    header_header_border = cst_header_header_border_hash_$0,
    row_odd_fg = cst_row_odd_fg_hash_983aa8de59$0,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_List = global_data.Core__List,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core_Option = global_data.Core__Option,
    Core_Int = global_data.Core__Int,
    Core = global_data.Core,
    Core_Fn = global_data.Core__Fn,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Table);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/table.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "table.ml");
   var Header_cell = [0], Header_row = [0], Data_row = [0], Data_cell = [0];
   function combine_attrs(default$0, optional){
    if(! optional) return default$0;
    var attrs = optional[1];
    return caml_call1(Virtual_dom_Vdom[1][8], [0, default$0, attrs]);
   }
   function table_node(attrs, rows, T){
    var
     _Y_ = T[2],
     _Z_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_Y_, 182695950, 3), _Y_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[44], 0, _Z_, rows);
   }
   function thead(attrs, rows, T){
    var
     _W_ = T[2],
     _X_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_W_, 901554398, 4), _W_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[48], 0, _X_, rows);
   }
   function tbody(attrs, rows, T){
    var
     _U_ = T[2],
     _V_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_U_, -707990605, 5), _U_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[45], 0, _V_, rows);
   }
   function header_row(attrs, cells, theme){
    var
     _R_ =
       caml_call2
        (Core_List[50],
         cells,
         function(cell){return caml_call1(cell, theme);}),
     _S_ = theme[2],
     _T_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_S_, -224162055, 6), _S_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[49], 0, _T_, _R_);
   }
   function data_row(attrs, cells, theme){
    var
     _O_ =
       caml_call2
        (Core_List[50],
         cells,
         function(cell){return caml_call1(cell, theme);}),
     _P_ = theme[2],
     _Q_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_P_, 637167694, 7), _P_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[49], 0, _Q_, _O_);
   }
   function header_cell(attrs, rows, T){
    var
     _M_ = T[2],
     _N_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_M_, -762857501, 8), _M_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[47], 0, _N_, rows);
   }
   function data_cell(attrs, rows, T){
    var
     _K_ = T[2],
     _L_ =
       [0,
        [0,
         combine_attrs
          (caml_call1(caml_get_public_method(_K_, 187631854, 9), _K_), attrs),
         0]];
    return caml_call3(Virtual_dom_Node[46], 0, _L_, rows);
   }
   function table(theme, table_attr, header_rows, data_rows, param){
    var
     _I_ =
       [0,
        tbody
         (0,
          caml_call2
           (Core_List[50],
            data_rows,
            function(row){return caml_call1(row, theme);}),
          theme),
        0],
     _J_ =
       [0,
        thead
         (0,
          caml_call2
           (Core_List[50],
            header_rows,
            function(row){return caml_call1(row, theme);}),
          theme),
        _I_];
    return table_node
            (caml_call2(Core_Option[30], table_attr, Core_List[49]),
             _J_,
             theme);
   }
   var
    Raw =
      [0,
       Header_cell,
       Header_row,
       Data_row,
       Data_cell,
       combine_attrs,
       table_node,
       thead,
       tbody,
       header_row,
       data_row,
       header_cell,
       data_cell,
       table];
   function depth(param){
    var param$0 = param;
    for(;;)
     switch(param$0[0]){
       case 0:
        var depth = param$0[4]; return depth;
       case 1:
        return 1;
       default: var t = param$0[2]; param$0 = t;
     }
   }
   function lift(t, f){return [2, f, t];}
   function make_opt(_H_, opt, header, get, render){
    var
     cell_attr =
       _H_ ? _H_[1] : function(param){return Virtual_dom_Vdom[1][10];},
     header_attr = opt ? opt[1] : Virtual_dom_Vdom[1][10];
    return [1, header, get, render, cell_attr, header_attr];
   }
   function make_opt$0(cell_attr, header_attr, header){
    var _E_ = caml_call1(Virtual_dom_Node[5], header);
    return function(_F_, _G_){
     return make_opt(cell_attr, header_attr, _E_, _F_, _G_);};
   }
   function make(cell_attr, header_attr, header, get){
    function get$0(x){return [0, caml_call1(get, x)];}
    return function(_D_){
     return make_opt(cell_attr, header_attr, header, get$0, _D_);};
   }
   function make$0(cell_attr, header_attr, header, get){
    return make
            (cell_attr,
             header_attr,
             caml_call1(Virtual_dom_Node[5], header),
             get);
   }
   function empty_group(col){
    var _C_ = depth(col) + 1 | 0;
    return [0, 0, Virtual_dom_Vdom[1][10], [0, col, 0], _C_];
   }
   function group(opt, header, children){
    var
     header_attr = opt ? opt[1] : Virtual_dom_Vdom[1][10],
     _B_ = caml_call2(Core_List[50], children, depth),
     match =
       caml_call2
        (Core_List[32],
         _B_,
         function(a_001, b_002){return caml_call2(Core[358], a_001, b_002);});
    if(match) var max = match[1], max_depth = max; else var max_depth = 0;
    var
     children$0 =
       caml_call2
        (Core_List[50],
         children,
         function(child){
          var delta = max_depth - depth(child) | 0;
          return caml_call3(Core_Fn[4], delta, empty_group, child);
         });
    return [0, [0, header], header_attr, children$0, max_depth + 1 | 0];
   }
   function group$0(header_attr, header, children){
    return group
            (header_attr, caml_call1(Virtual_dom_Node[5], header), children);
   }
   function colspan(param){
    var param$0 = param;
    for(;;)
     switch(param$0[0]){
       case 0:
        var children = param$0[3];
        return caml_call3
                (Core_List[26],
                 [0, Core_Int[57], function(_A_, _z_){return _A_ + _z_ | 0;}],
                 children,
                 colspan);
       case 1:
        return 1;
       default: var t = param$0[2]; param$0 = t;
     }
   }
   function headers_at_level(level, col){
    var col$0 = col;
    for(;;){
     var _x_ = depth(col$0);
     if(caml_call2(Core[89], _x_, level))
      switch(col$0[0]){
        case 0:
         var header_attr = col$0[2], header = col$0[1];
         return [0, [0, header, header_attr, colspan(col$0)], 0];
        case 1:
         var header_attr$0 = col$0[5], header$0 = col$0[1];
         return [0, [0, [0, header$0], header_attr$0, 1], 0];
        default: var col$1 = col$0[2]; col$0 = col$1;
      }
     else
      switch(col$0[0]){
        case 0:
         var children = col$0[3];
         return caml_call2
                 (Core_List[48],
                  children,
                  function(_y_){return headers_at_level(level, _y_);});
        case 1:
         return 0;
        default: var col$2 = col$0[2]; col$0 = col$2;
      }
    }
   }
   function renderers(param){
    switch(param[0]){
      case 0:
       var children = param[3];
       return caml_call2(Core_List[48], children, renderers);
      case 1:
       var cell_attr = param[4], render = param[3], get = param[2];
       return [0,
               function(theme, x){
                var match = caml_call1(get, x);
                if(! match) return 0;
                var x$0 = match[1], _w_ = caml_call1(cell_attr, x$0);
                return [0, [0, caml_call2(render, theme, x$0), _w_]];
               },
               0];
      default:
       var t = param[2], f = param[1], _v_ = renderers(t);
       return caml_call2
               (Core_List[50],
                _v_,
                function(render, theme, a){
                 return caml_call2(render, theme, caml_call1(f, a));
                });
    }
   }
   var
    Col =
      [0,
       depth,
       lift,
       make_opt,
       make_opt$0,
       make,
       make$0,
       empty_group,
       group,
       group$0,
       colspan,
       headers_at_level,
       renderers],
    _a_ = [0, -1];
   function render(theme, _p_, opt, cols, xs){
    var
     table_attr = _p_ ? _p_[1] : Virtual_dom_Vdom[1][10],
     row_attr =
       opt ? opt[1] : function(param){return Virtual_dom_Vdom[1][10];},
     mega_group = caml_call3(Col[8], 0, Virtual_dom_Node[4], cols),
     depth = caml_call1(Col[1], mega_group),
     _q_ = theme[2],
     body_cell_empty =
       caml_call1(caml_get_public_method(_q_, -656740036, 10), _q_);
    function for_each_level(level){
     var
      _t_ = caml_call2(Col[11], level, mega_group),
      _u_ =
        caml_call2
         (Core_List[12],
          _t_,
          function(param){
           var node = param[1];
           if(0 === param[3]) return 0;
           var
            colspan = param[3],
            attr = param[2],
            node$0 = caml_call2(Core_Option[35], node, Virtual_dom_Node[4]),
            cell_attr =
              [0, caml_call1(Virtual_dom_Vdom[1][36], colspan), [0, attr, 0]];
           return [0, caml_call2(Raw[11], [0, cell_attr], [0, node$0, 0])];
          });
     return caml_call2(Raw[9], 0, _u_);
    }
    var
     _r_ = caml_call5(Core_List[125], _a_, 0, 0, depth - 1 | 0, 0),
     header_rows = caml_call2(Core_List[50], _r_, for_each_level),
     renderers = caml_call1(Col[12], mega_group);
    function for_each_row(row){
     var
      extra_row_attr = caml_call1(row_attr, row),
      _s_ =
        caml_call2
         (Core_List[50],
          renderers,
          function(f){
           var match = caml_call2(f, theme, row);
           if(! match)
            return caml_call2(Raw[12], [0, [0, body_cell_empty, 0]], 0);
           var
            match$0 = match[1],
            extra_cell_attr = match$0[2],
            cell = match$0[1];
           return caml_call2
                   (Raw[12], [0, [0, extra_cell_attr, 0]], [0, cell, 0]);
          });
     return caml_call2(Raw[10], [0, [0, extra_row_attr, 0]], _s_);
    }
    var data_rows = caml_call2(Core_List[50], xs, for_each_row);
    return caml_call5
            (Raw[13], theme, [0, table_attr], header_rows, data_rows, 0);
   }
   caml_call1
    (Inline_css[2][1],
     '\n/* web_ui/view/src/table.ml */\n\n*.table_hash_983aa8de59 {\n background-color:var(--bg_hash_983aa8de59);\n color:var(--fg_hash_983aa8de59);\n border-collapse:collapse\n}\n\n*.header_hash_983aa8de59 {\n background-color:var(--header-bg_hash_983aa8de59);\n color:var(--header-fg_hash_983aa8de59)\n}\n\n*.header_row_hash_983aa8de59 {\n \n}\n\n*.header_cell_hash_983aa8de59 {\n border:1px solid var(--header-header-border_hash_983aa8de59,blue);\n font-weight:300;\n font-size:0.9em;\n padding:0.3em 0.5em\n}\n\n*.header_row_hash_983aa8de59:last-child *.header_cell_hash_983aa8de59 {\n border-bottom:1px solid var(--header-body-border_hash_983aa8de59,red)\n}\n\n*.body_hash_983aa8de59 {\n \n}\n\n*.body_row_hash_983aa8de59:nth-child(even) {\n background:var(--row-even-bg_hash_983aa8de59);\n color:var(--row-even-fg_hash_983aa8de59)\n}\n\n*.body_row_hash_983aa8de59:nth-child(odd) {\n background:var(--row-odd-bg_hash_983aa8de59);\n color:var(--row-odd-fg_hash_983aa8de59)\n}\n\n*.body_cell_hash_983aa8de59 {\n border:1px solid var(--body-body-border_hash_983aa8de59,green)\n}\n\n*.body_row_hash_983aa8de59:first-child *.body_cell_hash_983aa8de59 {\n border-top:unset\n}\n\n*.body_cell_hash_983aa8de59 {\n padding:0.3em 0.5em\n}\n\n*.body_cell_hash_983aa8de59.empty_hash_983aa8de59 {\n \n}\n\n*.body_cell_hash_983aa8de59.empty_hash_983aa8de59::before {\n content:"";\n border-top:1px solid var(--body-body-border_hash_983aa8de59);\n display:block;\n width:100%\n}');
   var
    cst_bg_hash_983aa8de59 = cst_bg_hash_983aa8de59$0,
    cst_body_body_border_hash_983a = cst_body_body_border_hash_983a$0,
    cst_fg_hash_983aa8de59 = cst_fg_hash_983aa8de59$0,
    cst_header_bg_hash_983aa8de59 = cst_header_bg_hash_983aa8de59$0,
    cst_header_body_border_hash_98 = cst_header_body_border_hash_98$0,
    cst_header_fg_hash_983aa8de59 = cst_header_fg_hash_983aa8de59$0,
    cst_header_header_border_hash_ = cst_header_header_border_hash_$0,
    cst_row_even_bg_hash_983aa8de5 = cst_row_even_bg_hash_983aa8de5$0,
    cst_row_even_fg_hash_983aa8de5 = cst_row_even_fg_hash_983aa8de5$0,
    cst_row_odd_bg_hash_983aa8de59 = cst_row_odd_bg_hash_983aa8de59$0,
    cst_row_odd_fg_hash_983aa8de59 = cst_row_odd_fg_hash_983aa8de59$0;
   function type_info_for_ppx_css(_o_, _n_, _m_, param){return 0;}
   function set
   (bg,
    body_body_border,
    fg,
    header_bg,
    header_body_border,
    header_fg,
    header_header_border,
    row_even_bg,
    row_even_fg,
    row_odd_bg,
    row_odd_fg,
    param){
    var ppx_css_acc_003 = 0;
    if(bg)
     var
      ppx_css_value_004 = bg[1],
      ppx_css_acc_003$0 =
        [0, [0, cst_bg_hash_983aa8de59, ppx_css_value_004], ppx_css_acc_003];
    else
     var ppx_css_acc_003$0 = ppx_css_acc_003;
    if(body_body_border)
     var
      ppx_css_value_004$0 = body_body_border[1],
      ppx_css_acc_003$1 =
        [0,
         [0, cst_body_body_border_hash_983a, ppx_css_value_004$0],
         ppx_css_acc_003$0];
    else
     var ppx_css_acc_003$1 = ppx_css_acc_003$0;
    if(fg)
     var
      ppx_css_value_004$1 = fg[1],
      ppx_css_acc_003$2 =
        [0,
         [0, cst_fg_hash_983aa8de59, ppx_css_value_004$1],
         ppx_css_acc_003$1];
    else
     var ppx_css_acc_003$2 = ppx_css_acc_003$1;
    if(header_bg)
     var
      ppx_css_value_004$2 = header_bg[1],
      ppx_css_acc_003$3 =
        [0,
         [0, cst_header_bg_hash_983aa8de59, ppx_css_value_004$2],
         ppx_css_acc_003$2];
    else
     var ppx_css_acc_003$3 = ppx_css_acc_003$2;
    if(header_body_border)
     var
      ppx_css_value_004$3 = header_body_border[1],
      ppx_css_acc_003$4 =
        [0,
         [0, cst_header_body_border_hash_98, ppx_css_value_004$3],
         ppx_css_acc_003$3];
    else
     var ppx_css_acc_003$4 = ppx_css_acc_003$3;
    if(header_fg)
     var
      ppx_css_value_004$4 = header_fg[1],
      ppx_css_acc_003$5 =
        [0,
         [0, cst_header_fg_hash_983aa8de59, ppx_css_value_004$4],
         ppx_css_acc_003$4];
    else
     var ppx_css_acc_003$5 = ppx_css_acc_003$4;
    if(header_header_border)
     var
      ppx_css_value_004$5 = header_header_border[1],
      ppx_css_acc_003$6 =
        [0,
         [0, cst_header_header_border_hash_, ppx_css_value_004$5],
         ppx_css_acc_003$5];
    else
     var ppx_css_acc_003$6 = ppx_css_acc_003$5;
    if(row_even_bg)
     var
      ppx_css_value_004$6 = row_even_bg[1],
      ppx_css_acc_003$7 =
        [0,
         [0, cst_row_even_bg_hash_983aa8de5, ppx_css_value_004$6],
         ppx_css_acc_003$6];
    else
     var ppx_css_acc_003$7 = ppx_css_acc_003$6;
    if(row_even_fg)
     var
      ppx_css_value_004$7 = row_even_fg[1],
      ppx_css_acc_003$8 =
        [0,
         [0, cst_row_even_fg_hash_983aa8de5, ppx_css_value_004$7],
         ppx_css_acc_003$7];
    else
     var ppx_css_acc_003$8 = ppx_css_acc_003$7;
    if(row_odd_bg)
     var
      ppx_css_value_004$8 = row_odd_bg[1],
      ppx_css_acc_003$9 =
        [0,
         [0, cst_row_odd_bg_hash_983aa8de59, ppx_css_value_004$8],
         ppx_css_acc_003$8];
    else
     var ppx_css_acc_003$9 = ppx_css_acc_003$8;
    if(row_odd_fg)
     var
      ppx_css_value_004$9 = row_odd_fg[1],
      ppx_css_acc_003$10 =
        [0,
         [0, cst_row_odd_fg_hash_983aa8de59, ppx_css_value_004$9],
         ppx_css_acc_003$9];
    else
     var ppx_css_acc_003$10 = ppx_css_acc_003$9;
    return caml_call1(Virtual_dom_Vdom[1][88], ppx_css_acc_003$10);
   }
   var
    Variables = [0, set],
    table$1 = caml_call1(Virtual_dom_Vdom[1][15], cst_table_hash_983aa8de59),
    header$0 = caml_call1(Virtual_dom_Vdom[1][15], cst_header_hash_983aa8de59),
    header_cell$1 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_header_cell_hash_983aa8de5),
    header_row$1 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_header_row_hash_983aa8de59),
    empty$0 = caml_call1(Virtual_dom_Vdom[1][15], cst_empty_hash_983aa8de59),
    body_row$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_body_row_hash_983aa8de59),
    body_cell$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_body_cell_hash_983aa8de59),
    body$0 = caml_call1(Virtual_dom_Vdom[1][15], cst_body_hash_983aa8de59),
    Default =
      [0,
       Variables,
       [0,
        bg,
        body,
        body_body_border,
        body_cell,
        body_row,
        empty,
        fg,
        header,
        header_bg,
        header_body_border,
        header_cell$0,
        header_fg,
        header_header_border,
        header_row$0,
        row_even_bg,
        row_even_fg,
        row_odd_bg,
        row_odd_fg,
        table$0],
       body$0,
       body_cell$0,
       body_row$0,
       empty$0,
       header$0,
       header_cell$1,
       header_row$1,
       table$1],
    Variables$0 = Default[1],
    For_referencing = Default[2],
    body$1 = Default[3],
    body_cell$1 = Default[4],
    body_row$1 = Default[5],
    empty$1 = Default[6],
    header$1 = Default[7],
    header_cell$2 = Default[8],
    header_row$2 = Default[9],
    table$2 = Default[10],
    Default_table_styling =
      [0,
       type_info_for_ppx_css,
       Default,
       Variables$0,
       For_referencing,
       body$1,
       body_cell$1,
       body_row$1,
       empty$1,
       header$1,
       header_cell$2,
       header_row$2,
       table$2,
       Default];
   function table_attr(constants){
    var
     _b_ = [0, caml_call1(Css_gen[5][15], constants[5][2][1])],
     _c_ = [0, caml_call1(Css_gen[5][15], constants[5][2][2])],
     _d_ = [0, caml_call1(Css_gen[5][15], constants[5][1][1])],
     _e_ = [0, caml_call1(Css_gen[5][15], constants[5][1][2])],
     _f_ = [0, caml_call1(Css_gen[5][15], constants[5][4])],
     _g_ = [0, caml_call1(Css_gen[5][15], constants[5][3][1])],
     _h_ = [0, caml_call1(Css_gen[5][15], constants[5][5])],
     _i_ = [0, caml_call1(Css_gen[5][15], constants[5][3][2])],
     _j_ = [0, caml_call1(Css_gen[5][15], constants[1][1])],
     _k_ = [0, caml_call1(Css_gen[5][15], constants[5][6])],
     _l_ = [0, caml_call1(Css_gen[5][15], constants[1][2])],
     vars =
       caml_call12
        (Default_table_styling[3][1],
         _l_,
         _k_,
         _j_,
         _i_,
         _h_,
         _g_,
         _f_,
         _e_,
         _d_,
         _c_,
         _b_,
         0);
    return caml_call1
            (Virtual_dom_Vdom[1][8],
             [0, vars, [0, Default_table_styling[12], 0]]);
   }
   var
    table_header_attr = Default_table_styling[9],
    table_header_row = Default_table_styling[11],
    table_header_cell = Default_table_styling[10],
    table_body_attr = Default_table_styling[5],
    table_body_row = Default_table_styling[7],
    table_body_cell = Default_table_styling[6],
    table_body_cell_empty = Default_table_styling[8];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Table);
   var
    Bonsai_web_ui_view_Table =
      [0,
       Raw,
       Col,
       render,
       Default_table_styling,
       table_attr,
       table_header_attr,
       table_header_row,
       table_header_cell,
       table_body_attr,
       table_body_row,
       table_body_cell,
       table_body_cell_empty];
   runtime.caml_register_global
    (60, Bonsai_web_ui_view_Table, cst_Bonsai_web_ui_view_Table);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Raw_intf
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Raw_int = "Bonsai_web_ui_view__Raw_intf",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Raw_int);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/raw_intf.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "raw_intf.ml");
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Raw_int);
   var Bonsai_web_ui_view_Raw_intf = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_view_Raw_intf, cst_Bonsai_web_ui_view_Raw_int);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Layout
//# unitInfo: Requires: Core__Option, Css_gen, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv_error, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Baseline = "Baseline",
    cst_Bonsai_web_ui_view_Layout = "Bonsai_web_ui_view__Layout",
    cst_Bottom_to_top = "Bottom_to_top",
    cst_Center = "Center",
    cst_End = "End",
    cst_Left_to_right = "Left_to_right",
    cst_No_wrap = "No_wrap",
    cst_Normal = "Normal",
    cst_Right_to_left = "Right_to_left",
    cst_Space_around = "Space_around",
    cst_Space_between = "Space_between",
    cst_Space_evenly = "Space_evenly",
    cst_Start = "Start",
    cst_Stretch = "Stretch",
    cst_Top_to_bottom = "Top_to_bottom",
    cst_Wrap = "Wrap",
    cst_Wrap_reverse = "Wrap_reverse",
    cst_baseline = "baseline",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_bottom_to_top = "bottom_to_top",
    cst_center = "center",
    cst_end = "end",
    cst_left_to_right = "left_to_right",
    cst_no_wrap = "no_wrap",
    cst_normal = "normal",
    cst_right_to_left = "right_to_left",
    cst_space_around = "space_around",
    cst_space_between = "space_between",
    cst_space_evenly = "space_evenly",
    cst_start = "start",
    cst_stretch = "stretch",
    cst_top_to_bottom = "top_to_bottom",
    cst_wrap = "wrap",
    cst_wrap_reverse = "wrap_reverse",
    caml_int_compare = runtime.caml_int_compare,
    caml_string_compare = runtime.caml_string_compare;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) === 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_007 = "web_ui/view/src/layout.ml.Flex.Horizontal_dir.t",
    all = [0, 0, [0, 1, 0]],
    error_source_015 = "web_ui/view/src/layout.ml.Flex.Vertical_dir.t",
    all$0 = [0, 0, [0, 1, 0]],
    error_source_023 = "web_ui/view/src/layout.ml.Flex.Wrap.t",
    all$1 = [0, 0, [0, 1, [0, 2, 0]]],
    error_source_031 = "web_ui/view/src/layout.ml.Flex.Align_content.t",
    all$2 = [0, 0, [0, 1, [0, 2, [0, 3, [0, 4, [0, 5, [0, 6, 0]]]]]]],
    error_source_039 = "web_ui/view/src/layout.ml.Flex.Main_axis_alignment.t",
    all$3 = [0, 0, [0, 1, [0, 2, [0, 3, [0, 4, [0, 5, 0]]]]]],
    error_source_047 = "web_ui/view/src/layout.ml.Flex.Cross_axis_alignment.t",
    all$4 = [0, 0, [0, 1, [0, 2, [0, 3, [0, 4, 0]]]]],
    Core_Option = global_data.Core__Option,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Layout);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/layout.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "layout.ml");
   function equal(_aX_, _aW_){return _aX_ === _aW_ ? 1 : 0;}
   var
    compare = caml_int_compare,
    _a_ = [0, cst_Right_to_left],
    _b_ = [0, cst_Left_to_right];
   function t_of_sexp(sexp_008){
    a:
    {
     if(0 === sexp_008[0]){
      var _aS_ = sexp_008[1];
      b:
      if(_aS_ !== cst_Left_to_right){
       if(_aS_ !== cst_Right_to_left){
        if(_aS_ === cst_left_to_right) break b;
        if(_aS_ !== cst_right_to_left) break a;
       }
       return 1;
      }
      return 0;
     }
     var _aT_ = sexp_008[1];
     if(! _aT_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_007, sexp_008);
     var _aU_ = _aT_[1];
     if(0 !== _aU_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_007, sexp_008);
     var _aV_ = _aU_[1];
     b:
     if(_aV_ !== cst_Left_to_right){
      if(_aV_ !== cst_Right_to_left){
       if(_aV_ === cst_left_to_right) break b;
       if(_aV_ !== cst_right_to_left) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_007, sexp_008);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_007, sexp_008);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_007, sexp_008);
   }
   function sexp_of_t(param){return param ? _a_ : _b_;}
   function equal$0(_aR_, _aQ_){return _aR_ === _aQ_ ? 1 : 0;}
   var
    compare$0 = caml_int_compare,
    _c_ = [0, cst_Bottom_to_top],
    _d_ = [0, cst_Top_to_bottom];
   function t_of_sexp$0(sexp_016){
    a:
    {
     if(0 === sexp_016[0]){
      var _aM_ = sexp_016[1];
      b:
      if(_aM_ !== cst_Bottom_to_top){
       if(_aM_ !== cst_Top_to_bottom){
        if(_aM_ === cst_bottom_to_top) break b;
        if(_aM_ !== cst_top_to_bottom) break a;
       }
       return 0;
      }
      return 1;
     }
     var _aN_ = sexp_016[1];
     if(! _aN_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_015, sexp_016);
     var _aO_ = _aN_[1];
     if(0 !== _aO_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_015, sexp_016);
     var _aP_ = _aO_[1];
     b:
     if(_aP_ !== cst_Bottom_to_top){
      if(_aP_ !== cst_Top_to_bottom){
       if(_aP_ === cst_bottom_to_top) break b;
       if(_aP_ !== cst_top_to_bottom) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_015, sexp_016);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_015, sexp_016);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_015, sexp_016);
   }
   function sexp_of_t$0(param){return param ? _c_ : _d_;}
   function equal$1(_aL_, _aK_){return _aL_ === _aK_ ? 1 : 0;}
   var
    compare$1 = caml_int_compare,
    _e_ = [0, cst_Wrap],
    _f_ = [0, cst_Wrap_reverse],
    _g_ = [0, cst_No_wrap];
   function t_of_sexp$1(sexp_024){
    a:
    {
     if(0 === sexp_024[0]){
      var _aG_ = sexp_024[1];
      b:
      if(_aG_ !== cst_No_wrap){
       c:
       if(_aG_ !== cst_Wrap){
        if(_aG_ !== cst_Wrap_reverse){
         if(_aG_ === cst_no_wrap) break b;
         if(_aG_ === cst_wrap) break c;
         if(_aG_ !== cst_wrap_reverse) break a;
        }
        return 1;
       }
       return 0;
      }
      return 2;
     }
     var _aH_ = sexp_024[1];
     if(! _aH_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_023, sexp_024);
     var _aI_ = _aH_[1];
     if(0 !== _aI_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_023, sexp_024);
     var _aJ_ = _aI_[1];
     b:
     if(_aJ_ !== cst_No_wrap){
      c:
      if(_aJ_ !== cst_Wrap){
       if(_aJ_ !== cst_Wrap_reverse){
        if(_aJ_ === cst_no_wrap) break b;
        if(_aJ_ === cst_wrap) break c;
        if(_aJ_ !== cst_wrap_reverse) break a;
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_023, sexp_024);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_023, sexp_024);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_023, sexp_024);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_023, sexp_024);
   }
   function sexp_of_t$1(param){
    switch(param){case 0: return _e_;case 1: return _f_;default: return _g_;
    }
   }
   function equal$2(_aF_, _aE_){return _aF_ === _aE_ ? 1 : 0;}
   var
    compare$2 = caml_int_compare,
    _h_ = [0, cst_Start],
    _i_ = [0, cst_End],
    _j_ = [0, cst_Normal],
    _k_ = [0, cst_Center],
    _l_ = [0, cst_Space_between],
    _m_ = [0, cst_Space_around],
    _n_ = [0, cst_Stretch];
   function t_of_sexp$2(sexp_032){
    a:
    {
     if(0 === sexp_032[0]){
      var _ay_ = sexp_032[1], _az_ = caml_string_compare(_ay_, cst_center);
      b:
      {
       c:
       {
        d:
        {
         e:
         {
          f:
          {
           g:
           {
            if(0 <= _az_){
             if(0 < _az_){
              if(_ay_ === cst_end) break g;
              if(_ay_ === cst_normal) break f;
              if(_ay_ === cst_space_around) break e;
              if(_ay_ === cst_space_between) break d;
              if(_ay_ === cst_start) break c;
              if(_ay_ !== cst_stretch) break a;
              break b;
             }
            }
            else if(_ay_ !== cst_Center){
             if(_ay_ === cst_End) break g;
             if(_ay_ === cst_Normal) break f;
             if(_ay_ === cst_Space_around) break e;
             if(_ay_ === cst_Space_between) break d;
             if(_ay_ === cst_Start) break c;
             if(_ay_ !== cst_Stretch) break a;
             break b;
            }
            return 3;
           }
           return 1;
          }
          return 2;
         }
         return 5;
        }
        return 4;
       }
       return 0;
      }
      return 6;
     }
     var _aA_ = sexp_032[1];
     if(! _aA_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_031, sexp_032);
     var _aB_ = _aA_[1];
     if(0 !== _aB_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_031, sexp_032);
     var _aC_ = _aB_[1], _aD_ = caml_string_compare(_aC_, cst_center);
     b:
     {
      c:
      {
       d:
       {
        e:
        {
         f:
         {
          g:
          {
           if(0 <= _aD_){
            if(0 < _aD_){
             if(_aC_ === cst_end) break g;
             if(_aC_ === cst_normal) break f;
             if(_aC_ === cst_space_around) break e;
             if(_aC_ === cst_space_between) break d;
             if(_aC_ === cst_start) break c;
             if(_aC_ !== cst_stretch) break a;
             break b;
            }
           }
           else if(_aC_ !== cst_Center){
            if(_aC_ === cst_End) break g;
            if(_aC_ === cst_Normal) break f;
            if(_aC_ === cst_Space_around) break e;
            if(_aC_ === cst_Space_between) break d;
            if(_aC_ === cst_Start) break c;
            if(_aC_ !== cst_Stretch) break a;
            break b;
           }
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
          }
          return caml_call2
                  (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
         }
         return caml_call2
                 (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_031, sexp_032);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_031, sexp_032);
   }
   function sexp_of_t$2(param){
    switch(param){
      case 0:
       return _h_;
      case 1:
       return _i_;
      case 2:
       return _j_;
      case 3:
       return _k_;
      case 4:
       return _l_;
      case 5:
       return _m_;
      default: return _n_;
    }
   }
   function equal$3(_ax_, _aw_){return _ax_ === _aw_ ? 1 : 0;}
   var
    compare$3 = caml_int_compare,
    _o_ = [0, cst_Start],
    _p_ = [0, cst_End],
    _q_ = [0, cst_Center],
    _r_ = [0, cst_Space_between],
    _s_ = [0, cst_Space_around],
    _t_ = [0, cst_Space_evenly];
   function t_of_sexp$3(sexp_040){
    a:
    {
     if(0 === sexp_040[0]){
      var _aq_ = sexp_040[1], _ar_ = caml_string_compare(_aq_, cst_center);
      b:
      {
       c:
       {
        d:
        {
         e:
         {
          f:
          {
           if(0 <= _ar_){
            if(0 < _ar_){
             if(_aq_ === cst_end) break f;
             if(_aq_ === cst_space_around) break e;
             if(_aq_ === cst_space_between) break d;
             if(_aq_ === cst_space_evenly) break c;
             if(_aq_ !== cst_start) break a;
             break b;
            }
           }
           else if(_aq_ !== cst_Center){
            if(_aq_ === cst_End) break f;
            if(_aq_ === cst_Space_around) break e;
            if(_aq_ === cst_Space_between) break d;
            if(_aq_ === cst_Space_evenly) break c;
            if(_aq_ !== cst_Start) break a;
            break b;
           }
           return 2;
          }
          return 1;
         }
         return 4;
        }
        return 3;
       }
       return 5;
      }
      return 0;
     }
     var _as_ = sexp_040[1];
     if(! _as_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_039, sexp_040);
     var _at_ = _as_[1];
     if(0 !== _at_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_039, sexp_040);
     var _au_ = _at_[1], _av_ = caml_string_compare(_au_, cst_center);
     b:
     {
      c:
      {
       d:
       {
        e:
        {
         f:
         {
          if(0 <= _av_){
           if(0 < _av_){
            if(_au_ === cst_end) break f;
            if(_au_ === cst_space_around) break e;
            if(_au_ === cst_space_between) break d;
            if(_au_ === cst_space_evenly) break c;
            if(_au_ !== cst_start) break a;
            break b;
           }
          }
          else if(_au_ !== cst_Center){
           if(_au_ === cst_End) break f;
           if(_au_ === cst_Space_around) break e;
           if(_au_ === cst_Space_between) break d;
           if(_au_ === cst_Space_evenly) break c;
           if(_au_ !== cst_Start) break a;
           break b;
          }
          return caml_call2
                  (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
         }
         return caml_call2
                 (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_039, sexp_040);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_039, sexp_040);
   }
   function sexp_of_t$3(param){
    switch(param){
      case 0:
       return _o_;
      case 1:
       return _p_;
      case 2:
       return _q_;
      case 3:
       return _r_;
      case 4:
       return _s_;
      default: return _t_;
    }
   }
   function equal$4(_ap_, _ao_){return _ap_ === _ao_ ? 1 : 0;}
   var
    compare$4 = caml_int_compare,
    _u_ = [0, cst_Start],
    _v_ = [0, cst_End],
    _w_ = [0, cst_Center],
    _x_ = [0, cst_Stretch],
    _y_ = [0, cst_Baseline],
    _z_ = [0, 0];
   function t_of_sexp$4(sexp_048){
    a:
    {
     if(0 === sexp_048[0]){
      var _ai_ = sexp_048[1], _aj_ = caml_string_compare(_ai_, cst_baseline);
      b:
      {
       c:
       {
        d:
        {
         e:
         {
          if(0 <= _aj_){
           if(0 < _aj_){
            if(_ai_ === cst_center) break e;
            if(_ai_ === cst_end) break d;
            if(_ai_ === cst_start) break c;
            if(_ai_ !== cst_stretch) break a;
            break b;
           }
          }
          else if(_ai_ !== cst_Baseline){
           if(_ai_ === cst_Center) break e;
           if(_ai_ === cst_End) break d;
           if(_ai_ === cst_Start) break c;
           if(_ai_ !== cst_Stretch) break a;
           break b;
          }
          return 4;
         }
         return 2;
        }
        return 1;
       }
       return 0;
      }
      return 3;
     }
     var _ak_ = sexp_048[1];
     if(! _ak_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_047, sexp_048);
     var _al_ = _ak_[1];
     if(0 !== _al_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[6], error_source_047, sexp_048);
     var _am_ = _al_[1], _an_ = caml_string_compare(_am_, cst_baseline);
     b:
     {
      c:
      {
       d:
       {
        e:
        {
         if(0 <= _an_){
          if(0 < _an_){
           if(_am_ === cst_center) break e;
           if(_am_ === cst_end) break d;
           if(_am_ === cst_start) break c;
           if(_am_ !== cst_stretch) break a;
           break b;
          }
         }
         else if(_am_ !== cst_Baseline){
          if(_am_ === cst_Center) break e;
          if(_am_ === cst_End) break d;
          if(_am_ === cst_Start) break c;
          if(_am_ !== cst_Stretch) break a;
          break b;
         }
         return caml_call2
                 (Sexplib0_Sexp_conv_error[3], error_source_047, sexp_048);
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[3], error_source_047, sexp_048);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[3], error_source_047, sexp_048);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[3], error_source_047, sexp_048);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[3], error_source_047, sexp_048);
    }
    return caml_call2(Sexplib0_Sexp_conv_error[8], error_source_047, sexp_048);
   }
   function sexp_of_t$4(param){
    switch(param){
      case 0:
       return _u_;
      case 1:
       return _v_;
      case 2:
       return _w_;
      case 3:
       return _x_;
      default: return _y_;
    }
   }
   function to_css_gen_wrap(param){
    switch(param){
      case 0:
       return 970483178;
      case 1:
       return 899936909;
      default: return -397426005;
    }
   }
   function to_css_gen_align_content(param){
    switch(param){
      case 0:
       return 555646908;
      case 1:
       return -401431371;
      case 2:
       return -453122489;
      case 3:
       return 980392437;
      case 4:
       return -337248785;
      case 5:
       return -682324474;
      default: return -1012636187;
    }
   }
   function to_css_gen_justify_content(param){
    switch(param){
      case 0:
       return 555646908;
      case 1:
       return -401431371;
      case 2:
       return 980392437;
      case 3:
       return -337248785;
      case 4:
       return -682324474;
      default: return 934993376;
    }
   }
   function to_css_gen_align_items(param){
    switch(param){
      case 0:
       return 555646908;
      case 1:
       return -401431371;
      case 2:
       return 980392437;
      case 3:
       return -1012636187;
      default: return -354838363;
    }
   }
   function to_css_gen_horizontal_directio(param){return param ? 175421085 : 4102650;
   }
   function to_css_gen_vertical_direction(param){return param ? 744569753 : -81804554;
   }
   function box
   (default_direction,
    direction_to_css_gen_direction,
    opt,
    row_gap,
    column_gap,
    main_axis_alignment,
    cross_axis_alignment,
    direction,
    wrap,
    align_content,
    children){
    var attrs = opt ? opt[1] : 0;
    if(direction)
     var
      direction$0 = direction[1],
      direction$1 = caml_call1(direction_to_css_gen_direction, direction$0);
    else if(default_direction)
     var
      default_direction$0 = default_direction[1],
      direction$1 =
        caml_call1(direction_to_css_gen_direction, default_direction$0);
    else
     var direction$1 = -384499551;
    var
     wrap$0 = caml_call3(Core_Option[37], wrap, -384499551, to_css_gen_wrap),
     align_content$0 =
       caml_call2(Core_Option[30], align_content, to_css_gen_align_content),
     justify_content =
       caml_call2
        (Core_Option[30], main_axis_alignment, to_css_gen_justify_content),
     align_items =
       caml_call2
        (Core_Option[30], cross_axis_alignment, to_css_gen_align_items),
     flex_options =
       caml_call9
        (Css_gen[89],
         0,
         [0, direction$1],
         [0, wrap$0],
         align_items,
         align_content$0,
         justify_content,
         row_gap,
         column_gap,
         0),
     _ah_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][29], flex_options), attrs]];
    return caml_call3(Virtual_dom_Node[14], 0, _ah_, children);
   }
   function hbox(attrs, gap){
    var _$_ = 0, _aa_ = 0;
    return function(_ad_, _ac_, _ab_){
     var _ae_ = 0, _af_ = 0;
     return function(_ag_){
      return box
              (_aa_,
               to_css_gen_horizontal_directio,
               attrs,
               _$_,
               gap,
               _ad_,
               _ac_,
               _ab_,
               _af_,
               _ae_,
               _ag_);};};
   }
   function vbox(attrs, gap){
    var _U_ = 0;
    return function(_X_, _W_, _V_){
     var _Y_ = 0, _Z_ = 0;
     return function(___){
      return box
              (_z_,
               to_css_gen_vertical_direction,
               attrs,
               gap,
               _U_,
               _X_,
               _W_,
               _V_,
               _Z_,
               _Y_,
               ___);};};
   }
   var _A_ = 0, _B_ = [0, 0], _C_ = [0, 0], _D_ = [0, 0];
   function hbox_wrap(_R_, _Q_, _P_, _O_, _N_, _M_){
    return function(_S_, _T_){
     return box
             (_A_,
              to_css_gen_horizontal_directio,
              _R_,
              _Q_,
              _P_,
              _O_,
              _N_,
              _M_,
              _B_,
              _S_,
              _T_);};
   }
   function vbox_wrap(_J_, _I_, _H_, _G_, _F_, _E_){
    return function(_K_, _L_){
     return box
             (_C_,
              to_css_gen_vertical_direction,
              _J_,
              _I_,
              _H_,
              _G_,
              _F_,
              _E_,
              _D_,
              _K_,
              _L_);};
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Layout);
   var
    Bonsai_web_ui_view_Layout =
      [0,
       [0,
        [0, compare, equal, t_of_sexp, sexp_of_t, all],
        [0, compare$0, equal$0, t_of_sexp$0, sexp_of_t$0, all$0],
        [0, compare$1, equal$1, t_of_sexp$1, sexp_of_t$1, all$1],
        [0, compare$2, equal$2, t_of_sexp$2, sexp_of_t$2, all$2],
        [0, compare$3, equal$3, t_of_sexp$3, sexp_of_t$3, all$3],
        [0, compare$4, equal$4, t_of_sexp$4, sexp_of_t$4, all$4]],
       hbox,
       vbox,
       hbox_wrap,
       vbox_wrap];
   runtime.caml_register_global
    (157, Bonsai_web_ui_view_Layout, cst_Bonsai_web_ui_view_Layout);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Form
//# unitInfo: Requires: Base__Error, Base__Exn, Bonsai_web_ui_form_view, Bonsai_web_ui_toggle, Bonsai_web_ui_view__Form_context, Core, Core__Fn, Core__List, Core__Option, Core__Sexp, Core__Source_code_position, Css_gen, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$3 = "",
    cst_Bonsai_web_ui_view_Form = "Bonsai_web_ui_view__Form",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_button$1 = "button",
    caml_get_public_method = runtime.caml_get_public_method;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) === 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) === 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) === 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$2 = cst$3,
    cst$1 = cst$3,
    cst$0 = "\xe2\x93\x98",
    cst = "\xe2\x9a\xa0",
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core_Sexp = global_data.Core__Sexp,
    Base_Exn = global_data.Base__Exn,
    Core_Source_code_position = global_data.Core__Source_code_position,
    Core_List = global_data.Core__List,
    Core_Fn = global_data.Core__Fn,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Option = global_data.Core__Option,
    Core = global_data.Core,
    Bonsai_web_ui_view_Form_contex =
      global_data.Bonsai_web_ui_view__Form_context,
    Bonsai_web_ui_form_view = global_data.Bonsai_web_ui_form_view,
    Css_gen = global_data.Css_gen,
    Bonsai_web_ui_toggle = global_data.Bonsai_web_ui_toggle,
    Base_Error = global_data.Base__Error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Form);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/form.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "form.ml");
   var
    cst_Add_new_element = "Add new element",
    cst_button = cst_button$1,
    cst_remove = "[ remove ]",
    cst_none = "none",
    cst_background = "background",
    _a_ = [0, 869834347, "blue"],
    cst_pointer = "pointer",
    cst_cursor = "cursor",
    cst_button$0 = cst_button$1,
    _b_ = [0, [4, 0, 0, 0, [11, " - ", 0]], "%d - "],
    _c_ = [0, 4102650],
    _d_ = [0, 2],
    _e_ = [0, 15496, 1],
    _f_ = [0, 2];
   function view_error(e){
    function bold(text){
     var _bc_ = [0, caml_call1(Virtual_dom_Node[5], text), 0];
     return caml_call3(Virtual_dom_Node[39], 0, 0, _bc_);
    }
    function pre(text){
     var _bb_ = [0, caml_call1(Virtual_dom_Node[5], text), 0];
     return caml_call3(Virtual_dom_Node[36], 0, 0, _bb_);
    }
    function view_sexp(sexp){return pre(caml_call2(Core_Sexp[81], 0, sexp));}
    function div(contents){
     return caml_call3(Virtual_dom_Node[14], 0, 0, [0, contents, 0]);
    }
    switch(e[0]){
      case 0:
       var sexp = e[1]; return [0, div(view_sexp(sexp)), 0];
      case 1:
       var s = e[1]; return [0, div(caml_call1(Virtual_dom_Node[5], s)), 0];
      case 2:
       var e$0 = e[1]; return [0, div(pre(caml_call1(Base_Exn[10], e$0))), 0];
      case 3:
       var s$0 = e[1]; return [0, div(view_sexp(s$0)), 0];
      case 4:
       var match = e[3], sexp$0 = e[2], string = e[1];
       if(match){
        var
         there = match[1],
         _a4_ =
           [0, div(pre(caml_call1(Core_Source_code_position[2], there))), 0],
         _a5_ = [0, div(view_sexp(sexp$0)), _a4_];
        return [0, div(bold(string)), _a5_];
       }
       var _a6_ = [0, div(view_sexp(sexp$0)), 0];
       return [0, div(bold(string)), _a6_];
      case 5:
       var error = e[2], string$0 = e[1], _a7_ = view_error(error);
       return [0, div(bold(string$0)), _a7_];
      case 6:
       var
        error$0 = e[3],
        sexp$1 = e[2],
        string$1 = e[1],
        _a8_ = view_error(error$0),
        _a9_ = [0, div(view_sexp(sexp$1)), _a8_];
       return [0, div(bold(string$1)), _a9_];
      case 7:
       var match$0 = e[1];
       if(match$0){
        var
         errors = e[2],
         truncate_after = match$0[1],
         _a__ = caml_call3(Core_Fn[6], Core_List[131], truncate_after, errors);
        return caml_call2(Core_List[13], _a__, view_error);
       }
       var errors$0 = e[2];
       return caml_call2(Core_List[13], errors$0, view_error);
      default:
       var
        backtrace = e[2],
        error$1 = e[1],
        _a$_ = [0, div(pre(backtrace)), 0],
        _ba_ = view_error(error$1);
       return caml_call2(Core_List[9], _ba_, _a$_);
    }
   }
   function view_error$0(error){
    return view_error(caml_call1(Base_Error[28][2], error));
   }
   function disabled_of_editable(param){return -75845830 === param ? 1 : 0;}
   function render_append_item(self, eval_context, append_item){
    if(0 === append_item[0]){
     var
      text = append_item[2],
      append = append_item[1],
      text$0 = caml_call2(Core_Option[35], text, cst_Add_new_element),
      _a2_ = [0, caml_call1(Virtual_dom_Node[5], text$0), 0],
      _a3_ =
        disabled_of_editable
         (caml_call1(Bonsai_web_ui_view_Form_contex[4], eval_context));
     return caml_call7
             (caml_get_public_method(self, -639606286, 11),
              self,
              [0, caml_call1(Virtual_dom_Vdom[1][40], cst_button), 0],
              _a3_,
              0,
              0,
              append,
              _a2_);
    }
    var view = append_item[1];
    return view;
   }
   function render_remove_item(self, eval_context, remove_item, index){
    if(0 !== remove_item[0]){var view = remove_item[1]; return view;}
    var
     element_label = remove_item[2],
     remove = remove_item[1],
     _aQ_ = [0, caml_call1(Virtual_dom_Node[5], cst_remove), 0],
     _aR_ =
       disabled_of_editable
        (caml_call1(Bonsai_web_ui_view_Form_contex[4], eval_context)),
     _aS_ = caml_call2(Css_gen[19], cst_background, cst_none),
     _aT_ = caml_call1(Css_gen[49], _a_),
     _aU_ = caml_call2(Css_gen[28], _aT_, _aS_),
     _aV_ = caml_call2(Css_gen[19], cst_cursor, cst_pointer),
     _aW_ = caml_call2(Css_gen[28], _aV_, _aU_),
     _aX_ = caml_call4(Css_gen[83], 0, 0, 870530776, 0),
     _aY_ = caml_call2(Css_gen[28], _aX_, _aW_),
     _aZ_ = [0, caml_call1(Virtual_dom_Vdom[1][29], _aY_), 0],
     _a0_ = [0, caml_call1(Virtual_dom_Vdom[1][40], cst_button$0), _aZ_],
     delete_button =
       caml_call7
        (caml_get_public_method(self, -639606286, 12),
         self,
         [0, caml_call1(Virtual_dom_Vdom[1][8], _a0_), 0],
         _aR_,
         0,
         0,
         remove,
         _aQ_);
    if(element_label){
     var f = element_label[1];
     return caml_call2(f, delete_button, index);
    }
    var
     _a1_ =
       [0, caml_call2(Virtual_dom_Node[6], _b_, index), [0, delete_button, 0]];
    return caml_call3(Virtual_dom_Node[14], 0, 0, _a1_);
   }
   function view_error_details(self, error){
    var
     constants =
       caml_call1(caml_get_public_method(self, -999590257, 13), self),
     _aN_ =
       caml_call2(caml_get_public_method(self, 569756041, 14), self, error),
     _aO_ = caml_call3(Virtual_dom_Node[14], 0, 0, _aN_),
     _aP_ = caml_call1(Virtual_dom_Node[5], cst);
    return caml_call4
            (Bonsai_web_ui_toggle[2],
             [0,
              constants[6][2],
              constants[6][1][2],
              constants[6][3],
              constants[6][1][1]],
             _aP_,
             _aO_,
             -57574468);
   }
   function view_tooltip(self, inner){
    var
     constants =
       caml_call1(caml_get_public_method(self, -999590257, 15), self),
     _aM_ = caml_call1(Virtual_dom_Node[5], cst$0);
    return caml_call4
            (Bonsai_web_ui_toggle[2],
             [0,
              constants[6][5],
              constants[6][4][2],
              constants[6][6],
              constants[6][4][1]],
             _aM_,
             inner,
             774323965);
   }
   function wrap_tooltip_and_error(self, tooltip, error){
    var
     _aE_ = caml_call1(Core_Option[57], tooltip),
     _aF_ = _aE_ ? caml_call1(Core_Option[57], error) : _aE_;
    if(_aF_) return Virtual_dom_Node[4];
    var
     _aG_ = caml_call1(caml_get_public_method(self, -492544764, 16), self),
     tooltip$0 =
       caml_call3(Core_Option[37], tooltip, Virtual_dom_Node[4], _aG_),
     _aH_ = caml_call1(caml_get_public_method(self, -223924020, 17), self),
     _aI_ = caml_call1(Virtual_dom_Node[5], cst$1),
     error$0 = caml_call3(Core_Option[37], error, _aI_, _aH_),
     _aJ_ = caml_call9(Css_gen[89], 0, _c_, 0, 0, 0, 0, 0, 0, 0),
     _aK_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][29], _aJ_), 0]],
     _aL_ =
       [0,
        caml_call3
         (Virtual_dom_Node[14], 0, _aK_, [0, tooltip$0, [0, error$0, 0]]),
        0];
    return caml_call3(Virtual_dom_Node[46], 0, 0, _aL_);
   }
   function depth_td(depth, extra_attrs){
    var
     _az_ = caml_call1(Css_gen[67], [0, 15496, depth]),
     _aA_ = caml_call1(Virtual_dom_Vdom[1][29], _az_),
     attr = caml_call2(Virtual_dom_Vdom[1][11], _aA_, extra_attrs),
     _aB_ = [0, [0, attr, 0]],
     _aC_ = Virtual_dom_Node[46];
    return function(_aD_){return caml_call2(_aC_, _aD_, _aB_);};
   }
   function depth_td_of_context(context){
    var _ax_ = caml_call1(Bonsai_web_ui_view_Form_contex[3], context);
    return function(_ay_){return depth_td(_ax_, _ay_);};
   }
   function render_label(id, colspan, opt, label, depth_td){
    var
     extra_attrs = opt ? opt[1] : 0,
     colspan$0 =
       caml_call3
        (Core_Option[37],
         colspan,
         Virtual_dom_Vdom[1][10],
         Virtual_dom_Vdom[1][36]),
     for$0 =
       caml_call3
        (Core_Option[37],
         id,
         Virtual_dom_Vdom[1][10],
         Virtual_dom_Vdom[1][19]);
    if(label)
     var
      label$0 = label[1],
      _av_ = caml_call1(Css_gen[34], -936778451),
      _aw_ =
        [0, [0, for$0, [0, caml_call1(Virtual_dom_Vdom[1][29], _av_), 0]]],
      label$1 = caml_call3(Virtual_dom_Node[33], 0, _aw_, [0, label$0, 0]);
    else
     var label$1 = caml_call1(Virtual_dom_Node[5], cst$2);
    return caml_call3
            (depth_td,
             caml_call1(Virtual_dom_Vdom[1][8], [0, colspan$0, extra_attrs]),
             0,
             [0, label$1, 0]);
   }
   function render_context_above(self, view_context, eval_context){
    var
     depth_td = depth_td_of_context(eval_context),
     _aq_ = caml_call1(Core_Option[58], view_context[3]);
    if(_aq_)
     var inhabited_header = _aq_;
    else
     var
      _au_ = caml_call1(Core_Option[58], view_context[2]),
      inhabited_header = _au_ || caml_call1(Core_Option[58], view_context[1]);
    if(! inhabited_header) return 0;
    var
     _ar_ = view_context[3],
     _as_ = caml_call1(Css_gen[44], 737455525),
     label =
       render_label
        (0,
         _d_,
         [0, [0, caml_call1(Virtual_dom_Vdom[1][29], _as_), 0]],
         _ar_,
         depth_td),
     _at_ =
       [0,
        label,
        [0, wrap_tooltip_and_error(self, view_context[1], view_context[2]), 0]];
    return [0, caml_call3(Virtual_dom_Node[49], 0, 0, _at_), 0];
   }
   function render_context_inline
   (self, id, inline_view, view_context, eval_context){
    var
     depth_td = depth_td_of_context(eval_context),
     inline_view$0 =
       caml_call3(Virtual_dom_Node[46], 0, 0, [0, inline_view, 0]),
     _ai_ = caml_call1(Css_gen[94], 870530776),
     _aj_ = caml_call1(Css_gen[44], 737455525),
     _ak_ = caml_call2(Css_gen[28], _aj_, _ai_),
     _al_ = caml_call1(Css_gen[53], 847852583),
     _am_ = caml_call2(Css_gen[28], _al_, _ak_),
     _an_ = caml_call1(Css_gen[68], _e_),
     _ao_ = caml_call2(Css_gen[28], _an_, _am_),
     label_attrs = [0, caml_call1(Virtual_dom_Vdom[1][29], _ao_), 0],
     label = render_label(id, 0, [0, label_attrs], view_context[3], depth_td),
     _ap_ =
       [0,
        label,
        [0,
         inline_view$0,
         [0,
          wrap_tooltip_and_error(self, view_context[1], view_context[2]),
          0]]];
    return caml_call3(Virtual_dom_Node[49], id, 0, _ap_);
   }
   function empty(_ah_, _ag_, param){return 0;}
   function collapsible(self, eval_context, view_context, param){
    var
     state = param[2],
     collapse_label = param[1],
     tooltip_and_error =
       wrap_tooltip_and_error(self, view_context[1], view_context[2]),
     _ac_ = depth_td_of_context(eval_context),
     _ad_ = caml_call1(Css_gen[44], 737455525),
     _ae_ =
       [0,
        render_label
         (0,
          _f_,
          [0, [0, caml_call1(Virtual_dom_Vdom[1][29], _ad_), 0]],
          [0, collapse_label],
          _ac_),
        [0, tooltip_and_error, 0]],
     label = caml_call3(Virtual_dom_Node[49], 0, 0, _ae_);
    a:
    {
     if(0 === state[0]){
      var _af_ = state[1];
      if(! _af_){var rest = 0; break a;}
      var t = _af_[1];
     }
     else
      var t = state[1];
     var
      rest =
        caml_call3
         (caml_get_public_method(self, -203106688, 18),
          self,
          caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context),
          t);
    }
    return [0, label, rest];
   }
   function tuple(self, eval_context, view_context, ts){
    var
     _$_ =
       caml_call2
        (caml_get_public_method(self, -203106688, 19), self, eval_context),
     _aa_ = caml_call2(Core_List[13], ts, _$_),
     _ab_ = render_context_above(self, view_context, eval_context);
    return caml_call2(Core[155], _ab_, _aa_);
   }
   function raw(self, eval_context, view_context, param){
    var raw_view = param[2], id = param[1];
    return [0,
            render_context_inline
             (self,
              [0, id],
              caml_call2
               (raw_view,
                view_context,
                caml_call1(Bonsai_web_ui_view_Form_contex[4], eval_context)),
              view_context,
              eval_context),
            0];
   }
   function record(self, eval_context, view_context, fields){
    var
     rest =
       caml_call2
        (Core_List[13],
         fields,
         function(param){
          var
           field_view = param[2],
           field_name = param[1],
           ___ =
             caml_call2(Bonsai_web_ui_form_view[28], field_name, field_view);
          return caml_call3
                  (caml_get_public_method(self, -203106688, 20),
                   self,
                   caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context),
                   ___);
         }),
     _Z_ = render_context_above(self, view_context, eval_context);
    return caml_call2(Core[155], _Z_, rest);
   }
   function variant(self, eval_context, view_context, param){
    var selected_clause = param[2], clause_selector = param[1];
    if(selected_clause)
     var
      clause = selected_clause[1],
      _Y_ = clause[2],
      rest =
        caml_call3
         (caml_get_public_method(self, -203106688, 21),
          self,
          caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context),
          _Y_);
    else
     var rest = 0;
    return [0,
            render_context_inline
             (self, 0, clause_selector, view_context, eval_context),
            rest];
   }
   function option(self, eval_context, view_context, param){
    var status = param[2], toggle = param[1];
    a:
    {
     if(0 === status[0])
      var view = status[1];
     else{
      var _X_ = status[1];
      if(! _X_){var rest = 0; break a;}
      var view = _X_[1];
     }
     var
      rest =
        caml_call3
         (caml_get_public_method(self, -203106688, 22),
          self,
          caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context),
          view);
    }
    return [0,
            render_context_inline(self, 0, toggle, view_context, eval_context),
            rest];
   }
   function list(self, eval_context, view_context, param){
    var
     legacy_button_position = param[3],
     append_item = param[2],
     list_items = param[1],
     items_and_removals =
       caml_call2
        (Core_List[44],
         list_items,
         function(i, param){
          var
           remove_item = param[2],
           item_view = param[1],
           remove_button =
             render_remove_item(self, eval_context, remove_item, i),
           _R_ =
             caml_call3
              (caml_get_public_method(self, -203106688, 23),
               self,
               caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context),
               item_view),
           _S_ = caml_call1(Css_gen[44], 737455525),
           _T_ = [0, caml_call1(Virtual_dom_Vdom[1][29], _S_), 0],
           _U_ = [0, caml_call1(Virtual_dom_Vdom[1][36], 2), _T_],
           _V_ = caml_call1(Virtual_dom_Vdom[1][8], _U_),
           _W_ =
             [0,
              caml_call2
               (depth_td_of_context(eval_context)(_V_),
                0,
                [0, remove_button, 0]),
              0];
          return [0, caml_call3(Virtual_dom_Node[49], 0, 0, _W_), _R_];
         });
    a:
    {
     if(list_items && 433198059 <= legacy_button_position){
      var
       append_button_context =
         caml_call1(Bonsai_web_ui_view_Form_contex[2], eval_context);
      break a;
     }
     var append_button_context = eval_context;
    }
    var
     _J_ = [0, render_append_item(self, eval_context, append_item), 0],
     _K_ = caml_call1(Css_gen[44], 737455525),
     _L_ = [0, caml_call1(Virtual_dom_Vdom[1][29], _K_), 0],
     _M_ = [0, caml_call1(Virtual_dom_Vdom[1][36], 2), _L_],
     _N_ = caml_call1(Virtual_dom_Vdom[1][8], _M_),
     _O_ =
       [0,
        caml_call2(depth_td_of_context(append_button_context)(_N_), 0, _J_),
        0],
     append_item$0 = caml_call3(Virtual_dom_Node[49], 0, 0, _O_),
     _P_ = caml_call2(Core[155], items_and_removals, [0, append_item$0, 0]),
     _Q_ = render_context_above(self, view_context, eval_context);
    return caml_call2(Core[155], _Q_, _P_);
   }
   function view(self, eval_context, t){
    var match = t[2];
    if(typeof match === "number")
     return caml_call4
             (caml_get_public_method(self, 758394386, 24),
              self,
              eval_context,
              t[1],
              0);
    switch(match[0]){
      case 0:
       var collapsible = match[1];
       return caml_call4
               (caml_get_public_method(self, 474483663, 25),
                self,
                eval_context,
                t[1],
                collapsible);
      case 1:
       var raw = match[1];
       return caml_call4
               (caml_get_public_method(self, -395940307, 26),
                self,
                eval_context,
                t[1],
                raw);
      case 2:
       var fields = match[1];
       return caml_call4
               (caml_get_public_method(self, -280520852, 27),
                self,
                eval_context,
                t[1],
                fields);
      case 3:
       var variant = match[1];
       return caml_call4
               (caml_get_public_method(self, 457432906, 28),
                self,
                eval_context,
                t[1],
                variant);
      case 4:
       var list = match[1];
       return caml_call4
               (caml_get_public_method(self, -313999239, 29),
                self,
                eval_context,
                t[1],
                list);
      case 5:
       var ts = match[1];
       return caml_call4
               (caml_get_public_method(self, -712994931, 30),
                self,
                eval_context,
                t[1],
                ts);
      default:
       var option = match[1];
       return caml_call4
               (caml_get_public_method(self, 483783760, 31),
                self,
                eval_context,
                t[1],
                option);
    }
   }
   function to_vdom_plain(self, eval_context, t){
    function to_vdom_plain(t){
     var t$0 = t;
     for(;;){
      var match = t$0[2];
      if(typeof match === "number") return 0;
      switch(match[0]){
        case 0:
         var _z_ = match[1][2];
         if(0 === _z_[0]){
          var _A_ = _z_[1];
          if(! _A_) return 0;
          var t$1 = _A_[1];
         }
         else
          var t$1 = _z_[1];
         t$0 = t$1;
         break;
        case 1:
         var
          raw_view = match[1][2],
          _B_ = caml_call1(Bonsai_web_ui_view_Form_contex[4], eval_context);
         return [0, caml_call2(raw_view, t$0[1], _B_), 0];
        case 2:
         var fields = match[1];
         return caml_call2
                 (Core_List[13],
                  fields,
                  function(param){
                   var field_view = param[2];
                   return to_vdom_plain(field_view);
                  });
        case 3:
         var _C_ = match[1], _D_ = _C_[2], clause_selector = _C_[1];
         if(! _D_) return [0, clause_selector, 0];
         var clause_view = _D_[1][2];
         return [0, clause_selector, to_vdom_plain(clause_view)];
        case 4:
         var
          match$0 = match[1],
          append_item = match$0[2],
          list_items = match$0[1],
          _E_ = [0, render_append_item(self, eval_context, append_item), 0],
          _F_ =
            caml_call2
             (Core_List[13],
              list_items,
              function(param){
               var item_view = param[1];
               return to_vdom_plain(item_view);
              });
         return caml_call2(Core[155], _F_, _E_);
        case 5:
         var ts = match[1];
         return caml_call2(Core_List[13], ts, to_vdom_plain);
        default:
         var _G_ = match[1], _H_ = _G_[2], toggle = _G_[1];
         if(0 === _H_[0])
          var t$2 = _H_[1];
         else{
          var _I_ = _H_[1];
          if(! _I_) return [0, toggle, 0];
          var t$2 = _I_[1];
         }
         return [0, toggle, to_vdom_plain(t$2)];
      }
     }
    }
    return to_vdom_plain(t);
   }
   var
    _g_ = [0, caml_call1(Virtual_dom_Vdom[1][40], "submit"), 0],
    _h_ = caml_call1(Css_gen[34], 870530776),
    _i_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][29], _h_), _g_]],
    hidden_submit_input = caml_call3(Virtual_dom_Node[27], 0, _i_, 0),
    cst_form = "form";
   function to_vdom(self, on_submit, eval_context, view){
    a:
    {
     if(on_submit){
      var _k_ = on_submit[1], match = _k_[3];
      if(match){
       var
        button_attr = _k_[4],
        button_text = match[1],
        on_submit$0 = _k_[1],
        _l_ = 0,
        _m_ = 0,
        _n_ = 0;
       if(on_submit$0)
        var
         event = on_submit$0[1],
         event$0 =
           [0,
            Virtual_dom_Effect[2],
            [0,
             event,
             [0, Virtual_dom_Effect[19], [0, Virtual_dom_Effect[17], 0]]]],
         _o_ = [0, caml_call1(Virtual_dom_Node[5], button_text), 0],
         _p_ =
           [0,
            [0,
             button_attr,
             [0,
              caml_call1
               (Virtual_dom_Vdom[1][55], function(param){return event$0;}),
              0]]],
         _q_ = caml_call3(Virtual_dom_Node[10], 0, _p_, _o_);
       else
        var
         _y_ = [0, caml_call1(Virtual_dom_Node[5], button_text), 0],
         _q_ =
           caml_call3
            (Virtual_dom_Node[10],
             0,
             [0, [0, button_attr, [0, Virtual_dom_Vdom[1][18], 0]]],
             _y_);
       var
        _r_ =
          [0,
           caml_call1
            (depth_td(0, caml_call1(Virtual_dom_Vdom[1][36], 3))(0),
             [0, _q_, _n_]),
           _m_],
        submit_button = [0, caml_call3(Virtual_dom_Node[49], 0, 0, _r_), _l_];
       break a;
      }
     }
     var submit_button = 0;
    }
    var
     match$0 =
       caml_call2(Core_Option[30], on_submit, function(o){return o[5];});
    a:
    {
     if(match$0 && 818927100 > match$0[1]){
      var
       _x_ =
         caml_call3
          (caml_get_public_method(self, -203106688, 34),
           self,
           eval_context,
           view),
       form_parts = caml_call2(Core[155], submit_button, _x_);
      break a;
     }
     var
      _s_ =
        caml_call3
         (caml_get_public_method(self, -203106688, 32),
          self,
          eval_context,
          view),
      form_parts = caml_call2(Core[155], _s_, submit_button);
    }
    var
     inner_table =
       caml_call2
        (caml_get_public_method(self, 921370218, 33), self, form_parts),
     match$1 = caml_call1(Bonsai_web_ui_view_Form_contex[4], eval_context),
     inner_table$0 =
       -75845830 === match$1
        ? caml_call2(Bonsai_web_ui_form_view[31], 0, inner_table)
        : 266793998
          <= match$1
          ? caml_call2(Bonsai_web_ui_form_view[31], 1, inner_table)
          : inner_table;
    if(on_submit){
     var _t_ = on_submit[1];
     if(_t_[2]){
      var
       button_text$0 = _t_[3],
       on_submit$1 = _t_[1],
       always_use =
         [0, Virtual_dom_Effect[19], [0, Virtual_dom_Effect[17], 0]];
      if(on_submit$1)
       var
        event$1 = on_submit$1[1],
        event$2 = [0, Virtual_dom_Effect[2], [0, event$1, always_use]];
      else
       var event$2 = [0, Virtual_dom_Effect[2], always_use];
      var
       _u_ = 0,
       _v_ =
         caml_call1(Core_Option[57], button_text$0)
          ? hidden_submit_input
          : Virtual_dom_Node[4],
       _w_ =
         [0,
          [0,
           caml_call1
            (Virtual_dom_Vdom[1][77], function(param){return event$2;}),
           0]];
      return caml_call4
              (Virtual_dom_Node[62],
               cst_form,
               0,
               _w_,
               [0, inner_table$0, [0, _v_, _u_]]);
     }
    }
    return inner_table$0;
   }
   function toplevel_combine(rows){
    var _j_ = [0, caml_call3(Virtual_dom_Node[45], 0, 0, rows), 0];
    return caml_call3(Virtual_dom_Node[44], 0, 0, _j_);
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Form);
   var
    Bonsai_web_ui_view_Form =
      [0,
       to_vdom,
       to_vdom_plain,
       view_error$0,
       view_error_details,
       view_tooltip,
       render_remove_item,
       render_append_item,
       empty,
       collapsible,
       raw,
       record,
       variant,
       tuple,
       option,
       list,
       view,
       toplevel_combine];
   runtime.caml_register_global
    (46, Bonsai_web_ui_view_Form, cst_Bonsai_web_ui_view_Form);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Card_style__generated
//# unitInfo: Requires: Expect_test_collector, Inline_css, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_extreme_fg_hash_3108b43958$0 = "--extreme-fg_hash_3108b43958",
    cst_intent_bg_hash_3108b43958$0 = "--intent-bg_hash_3108b43958",
    cst_intent_fg_hash_3108b43958$0 = "--intent-fg_hash_3108b43958",
    cst_Bonsai_web_ui_view_Card_st =
      "Bonsai_web_ui_view__Card_style__generated",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_card_legend_hash_3108b4395 = "card_legend_hash_3108b43958",
    cst_container_hash_3108b43958 = "container_hash_3108b43958",
    cst_content_common_hash_3108b4 = "content_common_hash_3108b43958",
    cst_fieldset_container_hash_31 = "fieldset_container_hash_3108b43958",
    cst_title_bar_hash_3108b43958 = "title-bar_hash_3108b43958",
    cst_title_text_hash_3108b43958 = "title-text_hash_3108b43958";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    card_legend = cst_card_legend_hash_3108b4395,
    content_common = cst_content_common_hash_3108b4,
    title_bar = cst_title_bar_hash_3108b43958,
    container = cst_container_hash_3108b43958,
    title_text = cst_title_text_hash_3108b43958,
    fieldset_container = cst_fieldset_container_hash_31,
    intent_bg = cst_intent_bg_hash_3108b43958$0,
    extreme_fg = cst_extreme_fg_hash_3108b43958$0,
    intent_fg = cst_intent_fg_hash_3108b43958$0,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Card_st);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1
    (Expect_test_collector[6][1], "web_ui/view/src/card_style__generated.ml");
   caml_call2
    (Ppx_inline_test_lib[5],
     cst_bonsai_web_ui_view,
     "card_style__generated.ml");
   caml_call1
    (Inline_css[2][1],
     "\n/* _none_ */\n\n@layer view.card{\n *.container_hash_3108b43958 {\n  border-radius:2px;\n  border:1px solid var(--extreme-fg_hash_3108b43958)\n }\n \n *.content_common_hash_3108b43958 {\n  padding-left:0.25em;\n  padding-right:0.25em\n }\n \n *:not(.card_legend_hash_3108b43958).title-text_hash_3108b43958 {\n  color:var(--intent-fg_hash_3108b43958);\n  padding-left:0.5em;\n  padding-right:0.25em\n }\n \n *.card_legend_hash_3108b43958.title-text_hash_3108b43958 {\n  color:var(--intent-fg_hash_3108b43958);\n  margin-left:0.25em\n }\n \n *:not(.card_legend_hash_3108b43958).title-bar_hash_3108b43958 {\n  background:var(--intent-bg_hash_3108b43958);\n  border-radius:2px\n }\n \n *.fieldset_container_hash_3108b43958 {\n  padding:0 0.5em 0.25em 0.5em;\n  border-radius:2px;\n  border:1px solid var(--extreme-fg_hash_3108b43958);\n  padding-left:0px;\n  padding-right:0px\n }\n \n *.fieldset_container_hash_3108b43958>legend {\n  line-height:1em\n }\n \n}");
   var
    cst_extreme_fg_hash_3108b43958 = cst_extreme_fg_hash_3108b43958$0,
    cst_intent_bg_hash_3108b43958 = cst_intent_bg_hash_3108b43958$0,
    cst_intent_fg_hash_3108b43958 = cst_intent_fg_hash_3108b43958$0;
   function set(extreme_fg, intent_bg, intent_fg, param){
    var ppx_css_acc_001 = 0;
    if(extreme_fg)
     var
      ppx_css_value_002 = extreme_fg[1],
      ppx_css_acc_001$0 =
        [0,
         [0, cst_extreme_fg_hash_3108b43958, ppx_css_value_002],
         ppx_css_acc_001];
    else
     var ppx_css_acc_001$0 = ppx_css_acc_001;
    if(intent_bg)
     var
      ppx_css_value_002$0 = intent_bg[1],
      ppx_css_acc_001$1 =
        [0,
         [0, cst_intent_bg_hash_3108b43958, ppx_css_value_002$0],
         ppx_css_acc_001$0];
    else
     var ppx_css_acc_001$1 = ppx_css_acc_001$0;
    if(intent_fg)
     var
      ppx_css_value_002$1 = intent_fg[1],
      ppx_css_acc_001$2 =
        [0,
         [0, cst_intent_fg_hash_3108b43958, ppx_css_value_002$1],
         ppx_css_acc_001$1];
    else
     var ppx_css_acc_001$2 = ppx_css_acc_001$1;
    return caml_call1(Virtual_dom_Vdom[1][88], ppx_css_acc_001$2);
   }
   var
    Variables = [0, set],
    card_legend$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_card_legend_hash_3108b4395),
    content_common$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_content_common_hash_3108b4),
    title_bar$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_title_bar_hash_3108b43958),
    container$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_container_hash_3108b43958),
    title_text$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_title_text_hash_3108b43958),
    fieldset_container$0 =
      caml_call1(Virtual_dom_Vdom[1][15], cst_fieldset_container_hash_31),
    Default =
      [0,
       Variables,
       [0,
        card_legend,
        container,
        content_common,
        extreme_fg,
        fieldset_container,
        intent_bg,
        intent_fg,
        title_bar,
        title_text],
       card_legend$0,
       container$0,
       content_common$0,
       fieldset_container$0,
       title_bar$0,
       title_text$0],
    Variables$0 = Default[1],
    For_referencing = Default[2],
    card_legend$1 = Default[3],
    container$1 = Default[4],
    content_common$1 = Default[5],
    fieldset_container$1 = Default[6],
    title_bar$1 = Default[7],
    title_text$1 = Default[8];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Card_st);
   var
    Bonsai_web_ui_view_Card_style_ =
      [0,
       Default,
       Variables$0,
       For_referencing,
       card_legend$1,
       container$1,
       content_common$1,
       fieldset_container$1,
       title_bar$1,
       title_text$1];
   runtime.caml_register_global
    (32, Bonsai_web_ui_view_Card_style_, cst_Bonsai_web_ui_view_Card_st);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Card_style
//# unitInfo: Requires: Bonsai_web_ui_view__Card_style__generated, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Card_st = "Bonsai_web_ui_view__Card_style",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Bonsai_web_ui_view_Card_style_ =
      global_data.Bonsai_web_ui_view__Card_style__generated;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Card_st);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/card_style.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "card_style.ml");
   var
    default$0 = Bonsai_web_ui_view_Card_style_[1],
    Variables = Bonsai_web_ui_view_Card_style_[2],
    For_referencing = Bonsai_web_ui_view_Card_style_[3],
    card_legend = Bonsai_web_ui_view_Card_style_[4],
    container = Bonsai_web_ui_view_Card_style_[5],
    content_common = Bonsai_web_ui_view_Card_style_[6],
    fieldset_container = Bonsai_web_ui_view_Card_style_[7],
    title_bar = Bonsai_web_ui_view_Card_style_[8],
    title_text = Bonsai_web_ui_view_Card_style_[9];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Card_st);
   var
    Bonsai_web_ui_view_Card_style =
      [0,
       default$0,
       Variables,
       For_referencing,
       card_legend,
       container,
       content_common,
       fieldset_container,
       title_bar,
       title_text];
   runtime.caml_register_global
    (12, Bonsai_web_ui_view_Card_style, cst_Bonsai_web_ui_view_Card_st);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view__Expert
//# unitInfo: Requires: Bonsai_web_ui_view__Card_style, Bonsai_web_ui_view__Constants, Bonsai_web_ui_view__Form, Bonsai_web_ui_view__Layout, Bonsai_web_ui_view__Table, Bonsai_web_ui_view__Tooltip, Bonsai_web_ui_view__Underlying_intf, CamlinternalOO, Core, Core__List, Core__Option, Core__Percent, Core__Sexp, Core__String, Css_gen, Expect_test_collector, Inline_css, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view_Expert = "Bonsai_web_ui_view__Expert",
    cst_app_attr = "app_attr",
    cst_black = "black",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_button = "button",
    cst_card = "card",
    cst_codemirror_theme = "codemirror_theme",
    cst_constants = "constants",
    cst_devbar = "devbar",
    cst_form_append_item = "form_append_item",
    cst_form_collapsible = "form_collapsible",
    cst_form_empty = "form_empty",
    cst_form_list = "form_list",
    cst_form_option = "form_option",
    cst_form_raw = "form_raw",
    cst_form_record = "form_record",
    cst_form_remove_item = "form_remove_item",
    cst_form_to_vdom = "form_to_vdom",
    cst_form_toplevel_combine = "form_toplevel_combine",
    cst_form_tuple = "form_tuple",
    cst_form_variant = "form_variant",
    cst_form_view = "form_view",
    cst_form_view_error = "form_view_error",
    cst_form_view_error_details = "form_view_error_details",
    cst_form_view_tooltip = "form_view_tooltip",
    cst_humanize_sexp = "humanize_sexp",
    cst_table = "table",
    cst_table_body = "table_body",
    cst_table_body_cell = "table_body_cell",
    cst_table_body_cell_empty = "table_body_cell_empty",
    cst_table_body_row = "table_body_row",
    cst_table_header = "table_header",
    cst_table_header_cell = "table_header_cell",
    cst_table_header_row = "table_header_row",
    cst_tabs = "tabs",
    cst_theme_name = "theme_name",
    cst_themed_text = "themed_text",
    cst_tooltip = "tooltip",
    cst_use_intent_fg_or_bg_for_hi = "use_intent_fg_or_bg_for_highlighting";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) === 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) === 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    primary = [0, [0, 869834347, cst_black], [0, 869834347, "white"]],
    table_row_even = [0, [0, 869834347, cst_black], [0, 869834347, "#e6e6e6"]],
    extreme_primary_border = [0, 869834347, "grey"],
    shared =
      [0,
       cst_card,
       cst_constants,
       cst_tabs,
       cst_table_header_cell,
       cst_form_tuple,
       cst_table_body,
       cst_table_body_cell_empty,
       cst_button,
       cst_form_append_item,
       cst_form_view_tooltip,
       cst_form_raw,
       cst_humanize_sexp,
       cst_tooltip,
       cst_form_list,
       cst_form_record,
       cst_devbar,
       cst_table_header_row,
       cst_form_view_error_details,
       cst_form_view,
       cst_theme_name,
       cst_codemirror_theme,
       cst_form_to_vdom,
       cst_themed_text,
       cst_table,
       cst_table_body_cell,
       cst_app_attr,
       cst_form_variant,
       cst_form_collapsible,
       cst_form_option,
       cst_form_view_error,
       cst_use_intent_fg_or_bg_for_hi,
       cst_form_remove_item,
       cst_table_body_row,
       cst_form_empty,
       cst_table_header,
       cst_form_toplevel_combine],
    CamlinternalOO = global_data.CamlinternalOO,
    Core_String = global_data.Core__String,
    Core_Sexp = global_data.Core__Sexp,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Css_gen = global_data.Css_gen,
    Bonsai_web_ui_view_Constants = global_data.Bonsai_web_ui_view__Constants,
    Core = global_data.Core,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core_List = global_data.Core__List,
    Bonsai_web_ui_view_Layout = global_data.Bonsai_web_ui_view__Layout,
    Core_Option = global_data.Core__Option,
    Core_Percent = global_data.Core__Percent,
    Bonsai_web_ui_view_Tooltip = global_data.Bonsai_web_ui_view__Tooltip,
    Bonsai_web_ui_view_Table = global_data.Bonsai_web_ui_view__Table,
    Bonsai_web_ui_view_Form = global_data.Bonsai_web_ui_view__Form,
    Bonsai_web_ui_view_Card_style = global_data.Bonsai_web_ui_view__Card_style,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view_Expert);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], "web_ui/view/src/expert.ml");
   caml_call2(Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "expert.ml");
   function override_theme(M, f){
    var
     include = caml_call1(f, [0, M[1]]),
     c = include[1],
     singleton = caml_call1(c[1], 0);
    return [0, c, singleton];
   }
   caml_call1
    (Inline_css[2][1],
     "\n/* web_ui/view/src/expert.ml */\n\n@layer bonsai_web_ui_view.app{\n *:root:has(.app_hash_eb9374985e) {\n  font-family:sans-serif\n }\n \n *:root:has(.app_hash_eb9374985e) *,*:root:has(.app_hash_eb9374985e) *::before,*:root:has(.app_hash_eb9374985e) *::after {\n  box-sizing:border-box\n }\n \n}");
   var
    app = caml_call1(Virtual_dom_Vdom[1][15], "app_hash_eb9374985e"),
    _a_ =
      [0,
       cst_use_intent_fg_or_bg_for_hi,
       cst_tooltip,
       cst_themed_text,
       cst_theme_name,
       cst_tabs,
       cst_table_header_row,
       cst_table_header_cell,
       cst_table_header,
       cst_table_body_row,
       cst_table_body_cell_empty,
       cst_table_body_cell,
       cst_table_body,
       cst_table,
       cst_humanize_sexp,
       cst_form_view_tooltip,
       cst_form_view_error_details,
       cst_form_view_error,
       cst_form_view,
       cst_form_variant,
       cst_form_tuple,
       cst_form_toplevel_combine,
       cst_form_to_vdom,
       cst_form_remove_item,
       cst_form_record,
       cst_form_raw,
       cst_form_option,
       cst_form_list,
       cst_form_empty,
       cst_form_collapsible,
       cst_form_append_item,
       cst_devbar,
       cst_constants,
       cst_codemirror_theme,
       cst_card,
       cst_button,
       cst_app_attr],
    cst_4px = "4px",
    cst_text_underline_offset = "text-underline-offset",
    _b_ = [0, 698610924, 0],
    _c_ = [0, -696935855],
    _d_ = [0, 698610924, 0],
    _e_ = [0, 498753381, 0.5],
    _f_ = [0, 498753381, 0.5],
    cst_pointer = "pointer",
    cst_cursor = "cursor",
    _g_ = [0, [0, 17960, 3]],
    _h_ = [0, [0, 17960, 1]],
    _i_ = [0, [0, 498753381, 0.5]],
    _j_ = [0, 498753381, 1.2],
    _k_ = [0, 498753381, 0.8],
    _l_ =
      [0,
       [0, [0, 869834347, cst_black], [0, 869834347, "pink"]],
       [0, 3603131, "#f54646"],
       [0, 869834347, "red"],
       [0, [0, 869834347, cst_black], [0, 869834347, "azure"]],
       [0, 869834347, "blue"],
       [0, 869834347, "darkblue"]],
    _m_ =
      [0,
       [0, [0, 869834347, "#0a90bf"], [0, 3603131, "#e0f7ff"]],
       [0, [0, 869834347, "#348203"], [0, 3603131, "#ecffe0"]],
       [0, [0, 869834347, "#6b6001"], [0, 3603131, "#ffeb3b"]],
       [0, [0, 869834347, "#630100"], [0, 869834347, "#ff2522"]]],
    cst_default_theme = "default theme",
    c =
      caml_call2
       (CamlinternalOO[19],
        shared,
        function(_n_){
         var
          _o_ = caml_call2(CamlinternalOO[8], _n_, _a_),
          _p_ = _o_[1],
          _q_ = _o_[32];
         caml_call2
          (CamlinternalOO[11],
           _n_,
           [0,
            _o_[4],
            function(self_1){return cst_default_theme;},
            _o_[36],
            function(self_1){return app;},
            _q_,
            function(self_1){
             var header = [0, primary[2], primary[1]];
             return [0,
                     primary,
                     primary,
                     extreme_primary_border,
                     _m_,
                     [0,
                      table_row_even,
                      primary,
                      header,
                      extreme_primary_border,
                      extreme_primary_border,
                      extreme_primary_border],
                     _l_,
                     _k_,
                     _j_,
                     0];
            },
            _o_[14],
            function(self_1, sexp){
             if(0 !== sexp[0]) return caml_call2(Core_Sexp[81], 0, sexp);
             var text = sexp[1];
             return caml_call2
                     (Core_String[9],
                      text,
                      function(o){return 95 === o ? 32 : o;});
            },
            _o_[35],
            function
            (self_1, attrs, disabled, intent, tooltip, on_click, content){
             var
              on_click_attr =
                caml_call1
                 (Virtual_dom_Vdom[1][55], function(param){return on_click;}),
              disabled_attr =
                disabled ? Virtual_dom_Vdom[1][18] : Virtual_dom_Vdom[1][10];
             if(intent)
              var
               intent$0 = intent[1],
               maybe_transparent =
                 disabled ? caml_call1(Css_gen[40], 0.3) : Css_gen[20],
               _ar_ = caml_call1(self_1[1][1 + _q_], self_1)[4],
               match =
                 caml_call2
                  (Bonsai_web_ui_view_Constants[2][6], _ar_, intent$0),
               background = match[2],
               foreground = match[1],
               _as_ = caml_call1(Css_gen[49], foreground),
               _at_ = caml_call2(Css_gen[28], _as_, maybe_transparent),
               _au_ = caml_call1(Css_gen[50], background),
               _av_ = caml_call2(Css_gen[28], _au_, _at_),
               maybe_colors = caml_call1(Virtual_dom_Vdom[1][29], _av_);
             else
              var maybe_colors = Virtual_dom_Vdom[1][10];
             if(tooltip)
              var
               s = tooltip[1],
               maybe_title = caml_call1(Virtual_dom_Vdom[1][43], s);
             else
              var maybe_title = Virtual_dom_Vdom[1][10];
             var
              attrs$0 =
                caml_call2
                 (Core[155],
                  attrs,
                  [0,
                   on_click_attr,
                   [0, disabled_attr, [0, maybe_colors, [0, maybe_title, 0]]]]);
             return caml_call3(Virtual_dom_Node[10], 0, [0, attrs$0], content);
            },
            _o_[5],
            function
            (self_1, attrs, per_tab_attr, on_change, equal, active, tabs){
             var
              color = caml_call1(self_1[1][1 + _q_], self_1)[1][1],
              _ah_ = caml_call2(Css_gen[19], cst_cursor, cst_pointer),
              all_attr = caml_call1(Virtual_dom_Vdom[1][29], _ah_),
              _ai_ = caml_call4(Css_gen[80], _g_, [0, color], 334701579, 0),
              active_attr = caml_call1(Virtual_dom_Vdom[1][29], _ai_),
              _aj_ =
                caml_call2
                 (Core_List[50],
                  tabs,
                  function(param){
                   var
                    tab = param[2],
                    i = param[1],
                    is_active = caml_call2(equal, active, i),
                    _ap_ = [0, tab, 0],
                    _aq_ =
                      [0,
                       all_attr,
                       [0, caml_call2(per_tab_attr, i, is_active), 0]];
                   if(is_active)
                    var active_attr$0 = active_attr;
                   else
                    var
                     _ak_ =
                       [0,
                        caml_call1
                         (Virtual_dom_Vdom[1][55],
                          function(param){return caml_call2(on_change, active, i);}),
                        0],
                     _al_ = [0, caml_call1(Css_gen[40], 0.6), 0],
                     _am_ =
                       [0,
                        caml_call4(Css_gen[80], _h_, [0, color], 334701579, 0),
                        _al_],
                     _an_ = caml_call1(Css_gen[29], _am_),
                     _ao_ = [0, caml_call1(Virtual_dom_Vdom[1][29], _an_), _ak_],
                     active_attr$0 = caml_call1(Virtual_dom_Vdom[1][8], _ao_);
                   return caml_call3
                           (Virtual_dom_Node[14],
                            0,
                            [0, [0, active_attr$0, _aq_]],
                            _ap_);
                  });
             return caml_call6
                     (Bonsai_web_ui_view_Layout[2],
                      [0, attrs],
                      _i_,
                      0,
                      0,
                      0,
                      _aj_);
            },
            _o_[31],
            function(self_1, attrs, count, intent, text){
             var
              intent$0 = caml_call2(Core_Option[35], intent, 3),
              _Q_ = caml_call1(Css_gen[68], _e_),
              _R_ = caml_call1(Css_gen[67], _f_),
              both_style = caml_call2(Css_gen[28], _R_, _Q_),
              match = caml_call1(self_1[1][1 + _q_], self_1)[1],
              normal_bg = match[2],
              normal_fg = match[1],
              _S_ = caml_call1(self_1[1][1 + _q_], self_1)[4],
              match$0 =
                caml_call2(Bonsai_web_ui_view_Constants[2][6], _S_, intent$0),
              intent_bg = match$0[2],
              intent_fg = match$0[1],
              _T_ = caml_call1(Css_gen[50], normal_fg),
              _U_ = caml_call2(Css_gen[28], _T_, both_style),
              _V_ = caml_call1(Css_gen[49], normal_bg),
              _W_ = caml_call2(Css_gen[28], _V_, _U_),
              even_attr = caml_call1(Virtual_dom_Vdom[1][29], _W_),
              _X_ = caml_call1(Css_gen[50], intent_bg),
              _Y_ = caml_call2(Css_gen[28], _X_, both_style),
              _Z_ = caml_call1(Css_gen[49], intent_fg),
              ___ = caml_call2(Css_gen[28], _Z_, _Y_),
              odd_attr = caml_call1(Virtual_dom_Vdom[1][29], ___),
              _$_ = caml_call1(Css_gen[36], 19559306),
              _aa_ =
                caml_call1(Css_gen[61], [0, -970206555, Core_Percent[67]]),
              _ab_ = caml_call2(Css_gen[28], _aa_, _$_),
              main_attr = caml_call1(Virtual_dom_Vdom[1][29], _ab_),
              _ac_ =
                caml_call2
                 (Core_List[40],
                  count,
                  function(i){
                   var
                    _ae_ = [0, caml_call1(Virtual_dom_Node[5], text), 0],
                    _ag_ = caml_call2(Core[231], i, 2),
                    _af_ = 0,
                    even_attr$0 =
                      caml_call2(Core[89], _ag_, 0) ? even_attr : odd_attr;
                   return caml_call3
                           (Virtual_dom_Node[38], 0, [0, [0, even_attr$0, _af_]], _ae_);
                  }),
              _ad_ = [0, caml_call2(Core[155], attrs, [0, main_attr, 0])];
             return caml_call6
                     (Bonsai_web_ui_view_Layout[2], _ad_, 0, 0, 0, 0, _ac_);
            },
            _o_[2],
            function(self_1){
             var _P_ = caml_call1(self_1[1][1 + _q_], self_1);
             return caml_call1(Bonsai_web_ui_view_Tooltip[2], _P_);
            },
            _p_,
            function(self_1){return 15713;},
            _o_[3],
            function(self_1, attrs, intent, style, size, text){
             if(intent){
              var
               intent$0 = intent[1],
               _x_ = caml_call1(self_1[1][1 + _q_], self_1)[4],
               match =
                 caml_call2(Bonsai_web_ui_view_Constants[2][6], _x_, intent$0),
               background = match[2],
               foreground = match[1],
               highlight_color =
                 15713 <= caml_call1(self_1[1][1 + _p_], self_1)
                  ? foreground
                  : background;
              if(2 <= intent$0)
               var
                _y_ = caml_call1(Css_gen[49], highlight_color),
                _z_ = caml_call1(Css_gen[44], 737455525),
                intense_intents = caml_call2(Css_gen[28], _z_, _y_);
              else
               var intense_intents = Css_gen[20];
              var
               _A_ =
                 caml_call2(Css_gen[19], cst_text_underline_offset, cst_4px),
               _B_ = caml_call2(Css_gen[28], _A_, intense_intents),
               _C_ =
                 caml_call4(Css_gen[88], _c_, [0, highlight_color], _b_, 0),
               _D_ = caml_call2(Css_gen[28], _C_, _B_),
               maybe_colors = caml_call1(Virtual_dom_Vdom[1][29], _D_);
             }
             else
              var maybe_colors = Virtual_dom_Vdom[1][10];
             a:
             {
              b:
              if(style){
               switch(style[1]){
                 case 0:
                  break b;
                 case 1:
                  var
                   _L_ = caml_call1(Css_gen[44], 737455525),
                   _M_ = caml_call1(Virtual_dom_Vdom[1][29], _L_);
                  break;
                 case 2:
                  var
                   _N_ = caml_call1(Css_gen[43], 989373200),
                   _M_ = caml_call1(Virtual_dom_Vdom[1][29], _N_);
                  break;
                 default:
                  var
                   _O_ = caml_call4(Css_gen[88], 0, 0, _d_, 0),
                   _M_ = caml_call1(Virtual_dom_Vdom[1][29], _O_);
               }
               var maybe_style = _M_;
               break a;
              }
              var maybe_style = Virtual_dom_Vdom[1][10];
             }
             a:
             {
              b:
              if(size){
               switch(size[1]){
                 case 0:
                  var
                   _E_ = caml_call1(self_1[1][1 + _q_], self_1)[7],
                   _F_ = caml_call1(Css_gen[41], _E_),
                   _G_ = caml_call1(Virtual_dom_Vdom[1][29], _F_);
                  break;
                 case 1:
                  break b;
                 default:
                  var
                   _J_ = caml_call1(self_1[1][1 + _q_], self_1)[8],
                   _K_ = caml_call1(Css_gen[41], _J_),
                   _G_ = caml_call1(Virtual_dom_Vdom[1][29], _K_);
               }
               var maybe_size = _G_;
               break a;
              }
              var maybe_size = Virtual_dom_Vdom[1][10];
             }
             var
              _H_ = [0, caml_call1(Virtual_dom_Node[5], text), 0],
              _I_ =
                [0,
                 caml_call2
                  (Core[155],
                   attrs,
                   [0, maybe_colors, [0, maybe_size, [0, maybe_style, 0]]])];
             return caml_call3(Virtual_dom_Node[38], 0, _I_, _H_);
            },
            _o_[33],
            function(self_1){return 0;},
            _o_[13],
            function(self_1){
             var _w_ = caml_call1(self_1[1][1 + _q_], self_1);
             return caml_call1(Bonsai_web_ui_view_Table[5], _w_);
            },
            _o_[8],
            function(self_1){return Bonsai_web_ui_view_Table[6];},
            _o_[6],
            function(self_1){return Bonsai_web_ui_view_Table[7];},
            _o_[7],
            function(self_1){return Bonsai_web_ui_view_Table[8];},
            _o_[12],
            function(self_1){return Bonsai_web_ui_view_Table[9];},
            _o_[9],
            function(self_1){return Bonsai_web_ui_view_Table[10];},
            _o_[11],
            function(self_1){return Bonsai_web_ui_view_Table[11];},
            _o_[10],
            function(self_1){return Bonsai_web_ui_view_Table[12];},
            _o_[17],
            function(self_1){return Bonsai_web_ui_view_Form[3];},
            _o_[16],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[4], self_1);
            },
            _o_[15],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[5], self_1);
            },
            _o_[23],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[6], self_1);
            },
            _o_[30],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[7], self_1);
            },
            _o_[28],
            function(self_1){return Bonsai_web_ui_view_Form[8];},
            _o_[29],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[9], self_1);
            },
            _o_[25],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[10], self_1);
            },
            _o_[24],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[11], self_1);
            },
            _o_[19],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[12], self_1);
            },
            _o_[20],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[13], self_1);
            },
            _o_[26],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[14], self_1);
            },
            _o_[27],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[15], self_1);
            },
            _o_[18],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[16], self_1);
            },
            _o_[21],
            function(self_1){return Bonsai_web_ui_view_Form[17];},
            _o_[22],
            function(self_1){
             return caml_call1(Bonsai_web_ui_view_Form[1], self_1);
            },
            _o_[34],
            function
            (self_1,
             container_attr,
             title_attr,
             content_attr,
             intent,
             on_click,
             title,
             title_kind,
             content){
             var
              constants = caml_call1(self_1[1][1 + _q_], self_1),
              _t_ =
                caml_call3
                 (Core_Option[37],
                  intent,
                  constants[1][1],
                  function(intent){
                   return caml_call2
                            (Bonsai_web_ui_view_Constants[2][6], constants[4], intent)
                           [1];
                  }),
              intent_fg = caml_call1(Css_gen[5][15], _t_),
              _u_ =
                caml_call3
                 (Core_Option[37],
                  intent,
                  constants[1][2],
                  function(intent){
                   return caml_call2
                            (Bonsai_web_ui_view_Constants[2][6], constants[4], intent)
                           [2];
                  }),
              intent_bg = caml_call1(Css_gen[5][15], _u_),
              extreme_fg = caml_call1(Css_gen[5][15], constants[2][1]),
              vars =
                caml_call4
                 (Bonsai_web_ui_view_Card_style[2][1],
                  [0, extreme_fg],
                  [0, intent_bg],
                  [0, intent_fg],
                  0);
             if(title){
              if(title_kind)
               var
                extra_attr = Bonsai_web_ui_view_Card_style[4],
                attrs$0 =
                  [0,
                   Bonsai_web_ui_view_Card_style[8],
                   [0,
                    Bonsai_web_ui_view_Card_style[9],
                    [0, title_attr, [0, extra_attr, 0]]]],
                title$0 =
                  caml_call3(Virtual_dom_Node[18], 0, [0, attrs$0], title);
              else
               var
                extra_attr$0 = Virtual_dom_Vdom[1][10],
                attrs =
                  [0,
                   Bonsai_web_ui_view_Card_style[8],
                   [0,
                    Bonsai_web_ui_view_Card_style[9],
                    [0, title_attr, [0, extra_attr$0, 0]]]],
                title$0 =
                  caml_call6
                   (Bonsai_web_ui_view_Layout[2],
                    [0, attrs],
                    0,
                    0,
                    0,
                    0,
                    title);
              var title$1 = title$0;
             }
             else
              var title$1 = Virtual_dom_Node[4];
             function create_card(f, extra_container_attr){
              var
               _v_ =
                 [0,
                  title$1,
                  [0,
                   caml_call6
                    (Bonsai_web_ui_view_Layout[3],
                     [0,
                      [0, content_attr, [0, Bonsai_web_ui_view_Card_style[6], 0]]],
                     0,
                     0,
                     0,
                     0,
                     content),
                   0]];
              return caml_call2
                      (f,
                       [0,
                        container_attr,
                        [0,
                         caml_call1
                          (Virtual_dom_Vdom[1][55], function(param){return on_click;}),
                         [0, vars, [0, extra_container_attr, 0]]]],
                       _v_);
             }
             return title_kind
                     ? create_card
                       (function(attrs, x){
                         return caml_call3(Virtual_dom_Node[17], 0, [0, attrs], x);
                        },
                        Bonsai_web_ui_view_Card_style[7])
                     : create_card
                       (function(attrs, x){
                         return caml_call6
                                 (Bonsai_web_ui_view_Layout[3], [0, attrs], 0, 0, 0, 0, x);
                        },
                        Bonsai_web_ui_view_Card_style[5]);
            }]);
         return function(_s_, _r_){
          return caml_call2(CamlinternalOO[24], _r_, _n_);};
        }),
    singleton = caml_call1(c[1], 0),
    default_theme = [0, c, singleton];
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view_Expert);
   var Bonsai_web_ui_view_Expert = [0, default_theme, override_theme];
   runtime.caml_register_global
    (55, Bonsai_web_ui_view_Expert, cst_Bonsai_web_ui_view_Expert);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_view
//# unitInfo: Requires: Bonsai, Bonsai_web_ui_view__Constants, Bonsai_web_ui_view__Expert, Bonsai_web_ui_view__Form, Bonsai_web_ui_view__Form_context, Bonsai_web_ui_view__Layout, Bonsai_web_ui_view__Table, Bonsai_web_ui_view__Theme, Bonsai_web_ui_view__Tooltip, Core, Core__Lazy, Core__List, Core__Option, Core__Printf, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_view = "Bonsai_web_ui_view",
    cst_bonsai_web_ui_view = "bonsai_web_ui_view",
    cst_web_ui_view_src_bonsai_web = "web_ui/view/src/bonsai_web_ui_view.ml",
    caml_get_public_method = runtime.caml_get_public_method;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) === 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) === 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) === 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) === 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) === 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Core = global_data.Core,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core_Lazy = global_data.Core__Lazy,
    Bonsai_web_ui_view_Theme = global_data.Bonsai_web_ui_view__Theme,
    Bonsai = global_data.Bonsai,
    Bonsai_web_ui_view_Form_contex =
      global_data.Bonsai_web_ui_view__Form_context,
    Bonsai_web_ui_view_Form = global_data.Bonsai_web_ui_view__Form,
    Core_Option = global_data.Core__Option,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Core_Printf = global_data.Core__Printf,
    Core_List = global_data.Core__List,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Bonsai_web_ui_view_Layout = global_data.Bonsai_web_ui_view__Layout,
    Bonsai_web_ui_view_Expert = global_data.Bonsai_web_ui_view__Expert,
    Bonsai_web_ui_view_Table = global_data.Bonsai_web_ui_view__Table,
    Bonsai_web_ui_view_Constants = global_data.Bonsai_web_ui_view__Constants,
    Bonsai_web_ui_view_Tooltip = global_data.Bonsai_web_ui_view__Tooltip;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_view);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][1], cst_web_ui_view_src_bonsai_web);
   caml_call2
    (Ppx_inline_test_lib[5], cst_bonsai_web_ui_view, "bonsai_web_ui_view.ml");
   var
    hbox = Bonsai_web_ui_view_Layout[2],
    vbox = Bonsai_web_ui_view_Layout[3],
    hbox_wrap = Bonsai_web_ui_view_Layout[4],
    vbox_wrap = Bonsai_web_ui_view_Layout[5];
   function primary_colors(T){
    var _al_ = T[2];
    return caml_call1(caml_get_public_method(_al_, -999590257, 35), _al_)[1];
   }
   function extreme_colors(T){
    var _ak_ = T[2];
    return caml_call1(caml_get_public_method(_ak_, -999590257, 36), _ak_)[2];
   }
   function extreme_primary_border_color(T){
    var _aj_ = T[2];
    return caml_call1(caml_get_public_method(_aj_, -999590257, 37), _aj_)[3];
   }
   function intent_colors(T, intent){
    var
     _ai_ = T[2],
     match = caml_call1(caml_get_public_method(_ai_, -999590257, 38), _ai_)[4],
     error = match[4],
     warning = match[3],
     success = match[2],
     info = match[1];
    switch(intent){
      case 0:
       return info;
      case 1:
       return success;
      case 2:
       return warning;
      default: return error;
    }
   }
   function button(T, _af_, opt, intent, tooltip, on_click, text){
    var
     attrs = _af_ ? _af_[1] : 0,
     disabled = opt ? opt[1] : 0,
     _ag_ = [0, caml_call1(Virtual_dom_Node[5], text), 0],
     _ah_ = T[2];
    return caml_call7
            (caml_get_public_method(_ah_, -639606286, 39),
             _ah_,
             attrs,
             disabled,
             intent,
             tooltip,
             on_click,
             _ag_);
   }
   function button$0(T, _ad_, opt, intent, tooltip, on_click, content){
    var attrs = _ad_ ? _ad_[1] : 0, disabled = opt ? opt[1] : 0, _ae_ = T[2];
    return caml_call7
            (caml_get_public_method(_ae_, -639606286, 40),
             _ae_,
             attrs,
             disabled,
             intent,
             tooltip,
             on_click,
             content);
   }
   function tabs(T, _aa_, opt, equal, on_change, active, tabs){
    var
     attrs = _aa_ ? _aa_[1] : 0,
     per_tab_attr =
       opt ? opt[1] : function(_ac_, param){return Virtual_dom_Vdom[1][10];},
     _ab_ = T[2];
    return caml_call7
            (caml_get_public_method(_ab_, -856248194, 41),
             _ab_,
             attrs,
             per_tab_attr,
             on_change,
             equal,
             active,
             tabs);
   }
   function tabs_enum(T, _W_, opt, tab_to_vdom, A, on_change, active){
    var
     attrs = _W_ ? _W_[1] : 0,
     per_tab_attr =
       opt ? opt[1] : function(_$_, param){return Virtual_dom_Vdom[1][10];},
     tab_to_vdom$0 =
       caml_call2
        (Core_Option[35],
         tab_to_vdom,
         function(tab){
          var
           _Y_ = caml_call1(A[3], tab),
           _Z_ = T[2],
           ___ =
             caml_call2(caml_get_public_method(_Z_, -374418238, 42), _Z_, _Y_);
          return caml_call1(Virtual_dom_Node[5], ___);
         }),
     tabs =
       caml_call2
        (Core_List[50],
         A[1],
         function(tab){return [0, tab, caml_call1(tab_to_vdom$0, tab)];}),
     _X_ = T[2];
    return caml_call7
            (caml_get_public_method(_X_, -856248194, 43),
             _X_,
             attrs,
             per_tab_attr,
             on_change,
             A[2],
             active,
             tabs);
   }
   function devbar(T, _U_, opt, intent, text){
    var attrs = _U_ ? _U_[1] : 0, count = opt ? opt[1] : 100, _V_ = T[2];
    return caml_call5
            (caml_get_public_method(_V_, -244151522, 44),
             _V_,
             attrs,
             count,
             intent,
             text);
   }
   function constants(T){
    var _T_ = T[2];
    return caml_call1(caml_get_public_method(_T_, -999590257, 45), _T_);
   }
   function text(attrs, s){
    var _S_ = [0, caml_call1(Virtual_dom_Node[5], s), 0];
    return caml_call3(Virtual_dom_Node[38], 0, attrs, _S_);
   }
   function textf(attrs, format){
    return caml_call2
            (Core_Printf[4], function(_R_){return text(attrs, _R_);}, format);
   }
   function themed_text(T, opt, intent, style, size, text){
    var attrs = opt ? opt[1] : 0, _Q_ = T[2];
    return caml_call6
            (caml_get_public_method(_Q_, -92985231, 46),
             _Q_,
             attrs,
             intent,
             style,
             size,
             text);
   }
   function themed_textf(theme, attrs, intent, style, size, format){
    return caml_call2
            (Core_Printf[4],
             function(_P_){
              return themed_text(theme, attrs, intent, style, size, _P_);
             },
             format);
   }
   function tooltip(T, _N_, _M_, opt, tooltip, tipped){
    var
     container_attr = _N_ ? _N_[1] : Virtual_dom_Vdom[1][10],
     tooltip_attr = _M_ ? _M_[1] : Virtual_dom_Vdom[1][10],
     direction = opt ? opt[1] : 0,
     _O_ = T[2];
    return caml_call6
            (caml_get_public_method(_O_, -359879421, 47),
             _O_,
             container_attr,
             tooltip_attr,
             direction,
             tipped,
             tooltip);
   }
   function tooltip$0
   (theme, container_attr, tooltip_attr, direction, tooltip$0, tipped){
    var
     tipped$0 = caml_call1(Virtual_dom_Node[5], tipped),
     tooltip$1 = caml_call1(Virtual_dom_Node[5], tooltip$0);
    return tooltip
            (theme,
             container_attr,
             tooltip_attr,
             direction,
             tooltip$1,
             tipped$0);
   }
   function card(T, _K_, _J_, _I_, intent, _H_, _G_, opt, content){
    var
     container_attr = _K_ ? _K_[1] : Virtual_dom_Vdom[1][10],
     title_attr = _J_ ? _J_[1] : Virtual_dom_Vdom[1][10],
     content_attr = _I_ ? _I_[1] : Virtual_dom_Vdom[1][10],
     title = _H_ ? _H_[1] : 0,
     title_kind = _G_ ? _G_[1] : 0,
     on_click = opt ? opt[1] : Virtual_dom_Effect[1],
     _L_ = T[2];
    return caml_call9
            (caml_get_public_method(_L_, -1044767280, 48),
             _L_,
             container_attr,
             title_attr,
             content_attr,
             intent,
             on_click,
             title,
             title_kind,
             content);
   }
   function card$0
   (theme,
    container_attr,
    title_attr,
    content_attr,
    intent,
    title,
    title_kind,
    on_click,
    content){
    var _F_ = [0, caml_call1(Virtual_dom_Node[5], content), 0];
    return card
            (theme,
             container_attr,
             title_attr,
             content_attr,
             intent,
             caml_call2
              (Core_Option[30],
               title,
               function(title){
                return [0, caml_call1(Virtual_dom_Node[5], title), 0];
               }),
             title_kind,
             on_click,
             _F_);
   }
   function top_attr(T){
    var _E_ = T[2];
    return caml_call1(caml_get_public_method(_E_, 419484879, 49), _E_);
   }
   var
    App = [0, top_attr],
    theme_dyn_var =
      caml_call4
       (Bonsai[41][1], 0, "web-ui theme", Bonsai_web_ui_view_Expert[1], 0),
    current_theme = caml_call1(Bonsai[41][5], theme_dyn_var);
   function theme(T){
    var _D_ = T[2];
    return caml_call1(caml_get_public_method(_D_, -123588234, 50), _D_);
   }
   var Codemirror = [0, theme];
   function to_vdom(T, on_submit, opt){
    var
     editable = opt ? opt[1] : -98992569,
     _B_ = caml_call1(Bonsai_web_ui_view_Form_contex[1], editable),
     _C_ = T[2];
    return caml_call3
            (caml_get_public_method(_C_, -116062443, 51), _C_, on_submit, _B_);
   }
   function to_vdom_plain(T, opt){
    var
     editable = opt ? opt[1] : -98992569,
     _A_ = caml_call1(Bonsai_web_ui_view_Form_contex[1], editable);
    return caml_call2(Bonsai_web_ui_view_Form[2], T[2], _A_);
   }
   function view_error(T){
    var _z_ = T[2];
    return caml_call1(caml_get_public_method(_z_, 569756041, 52), _z_);
   }
   function append_item(T, opt){
    var
     editable = opt ? opt[1] : -98992569,
     _x_ = caml_call1(Bonsai_web_ui_view_Form_contex[1], editable),
     _y_ = T[2];
    return caml_call2(caml_get_public_method(_y_, -493687267, 53), _y_, _x_);
   }
   function remove_item(T, opt){
    var
     editable = opt ? opt[1] : -98992569,
     _v_ = caml_call1(Bonsai_web_ui_view_Form_contex[1], editable),
     _w_ = T[2];
    return caml_call2(caml_get_public_method(_w_, 609235827, 54), _w_, _v_);
   }
   var
    default_theme = Bonsai_web_ui_view_Expert[1],
    override_theme = Bonsai_web_ui_view_Expert[2],
    _a_ = [0, [0, cst_web_ui_view_src_bonsai_web, 213, 5556, 5562]],
    _b_ = [0, [0, cst_web_ui_view_src_bonsai_web, 212, 5532, 5536]],
    _c_ = [0, [0, cst_web_ui_view_src_bonsai_web, 211, 5487, 5491]];
   function set_theme_for_computation(theme, inside){
    return caml_call3(Bonsai[41][3], theme_dyn_var, theme, inside);
   }
   function override_theme_for_computation(f, inside){
    return caml_call3
            (Bonsai[43][5][1],
             _c_,
             current_theme,
             function(current_theme){
              var
               _u_ =
                 caml_call3
                  (Bonsai[43][5][7],
                   _a_,
                   current_theme,
                   function(current_theme){
                    return caml_call2(override_theme, current_theme, f);
                   });
              return caml_call3
                      (Bonsai[43][5][1],
                       _b_,
                       _u_,
                       function(new_theme){
                        return set_theme_for_computation(new_theme, inside);
                       });
             });
   }
   var
    override_constants = Bonsai_web_ui_view_Theme[1],
    name = Bonsai_web_ui_view_Theme[2],
    _d_ = [0, [0, cst_web_ui_view_src_bonsai_web, 247, 6536, 6540]],
    _e_ = [0, [0, cst_web_ui_view_src_bonsai_web, 246, 6480, 6484]],
    _f_ = [0, [0, cst_web_ui_view_src_bonsai_web, 254, 6739, 6743]],
    _g_ = [0, [0, cst_web_ui_view_src_bonsai_web, 253, 6676, 6680]],
    _h_ = [0, [0, cst_web_ui_view_src_bonsai_web, 262, 6993, 6999]],
    _i_ = [0, [0, cst_web_ui_view_src_bonsai_web, 261, 6969, 6973]],
    _j_ = [0, [0, cst_web_ui_view_src_bonsai_web, 260, 6924, 6928]];
   function set_for_computation(theme, inside){
    return set_theme_for_computation(theme, inside);
   }
   function with_attr(attrs, vdom){
    if(typeof vdom === "number")
     return caml_call3(Virtual_dom_Node[14], 0, [0, attrs], 0);
    switch(vdom[0]){
      case 0:
       return caml_call3(Virtual_dom_Node[38], 0, [0, attrs], [0, vdom, 0]);
      case 1:
       var e = vdom[1];
       return [1,
               caml_call2
                (Virtual_dom_Node[1][5],
                 e,
                 function(xs){
                  var _t_ = caml_call2(Core[155], attrs, [0, xs, 0]);
                  return caml_call1(Virtual_dom_Vdom[1][8], _t_);
                 })];
      case 2:
       return caml_call3(Virtual_dom_Node[14], 0, [0, attrs], [0, vdom, 0]);
      default:
       var t = vdom[2], key = vdom[1];
       return [3,
               key,
               caml_call2
                (Core_Lazy[25],
                 t,
                 function(_s_){return with_attr(attrs, _s_);})];
    }
   }
   function set_for_app(theme, inside){
    var _q_ = set_theme_for_computation(theme, inside);
    return caml_call3
            (Bonsai[43][5][1],
             _e_,
             _q_,
             function(app_vdom){
              var _r_ = caml_call2(Bonsai[43][5][6], app_vdom, theme);
              return caml_call3
                      (Bonsai[43][5][7],
                       _d_,
                       _r_,
                       function(param){
                        var theme = param[2], app_vdom = param[1];
                        return with_attr
                                ([0, caml_call1(App[1], theme), 0], app_vdom);
                       });
             });
   }
   function set_for_app$0(theme, inside){
    var _o_ = set_theme_for_computation(theme, inside);
    return caml_call3
            (Bonsai[43][5][1],
             _g_,
             _o_,
             function(result_and_vdom){
              var _p_ = caml_call2(Bonsai[43][5][6], result_and_vdom, theme);
              return caml_call3
                      (Bonsai[43][5][7],
                       _f_,
                       _p_,
                       function(param){
                        var
                         theme = param[2],
                         match = param[1],
                         app_vdom = match[2],
                         result = match[1];
                        return [0,
                                result,
                                with_attr([0, caml_call1(App[1], theme), 0], app_vdom)];
                       });
             });
   }
   function override_constants_for_computa(f, inside){
    return caml_call3
            (Bonsai[43][5][1],
             _j_,
             current_theme,
             function(current_theme){
              var
               _n_ =
                 caml_call3
                  (Bonsai[43][5][7],
                   _h_,
                   current_theme,
                   function(current_theme){
                    return caml_call2
                            (Bonsai_web_ui_view_Theme[1], current_theme, f);
                   });
              return caml_call3
                      (Bonsai[43][5][1],
                       _i_,
                       _n_,
                       function(new_theme){
                        return set_theme_for_computation(new_theme, inside);
                       });
             });
   }
   caml_call1(Ppx_inline_test_lib[6], cst_bonsai_web_ui_view);
   caml_call1(Expect_test_collector[6][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_view);
   var
    _k_ = Bonsai_web_ui_view_Table[1],
    _l_ = Bonsai_web_ui_view_Table[2],
    _m_ = Bonsai_web_ui_view_Constants[2],
    Bonsai_web_ui_view =
      [0,
       [0,
        name,
        current_theme,
        set_for_app,
        set_for_app$0,
        override_constants_for_computa,
        set_for_computation],
       constants,
       Bonsai_web_ui_view_Constants[1],
       [0, _m_[1], _m_[2], _m_[3], _m_[4], _m_[5]],
       primary_colors,
       extreme_colors,
       extreme_primary_border_color,
       intent_colors,
       text,
       textf,
       Bonsai_web_ui_view_Constants[3],
       Bonsai_web_ui_view_Constants[4],
       themed_text,
       themed_textf,
       hbox,
       vbox,
       hbox_wrap,
       vbox_wrap,
       button,
       button$0,
       Bonsai_web_ui_view_Tooltip[1],
       tooltip$0,
       tooltip,
       tabs,
       tabs_enum,
       devbar,
       Bonsai_web_ui_view_Constants[7],
       card$0,
       card,
       [0,
        [0, _l_[6], _l_[4], _l_[9], _l_[2], _l_[5], _l_[8], _l_[3]],
        Bonsai_web_ui_view_Table[3]],
       [0,
        Codemirror,
        [0, to_vdom, to_vdom_plain, view_error, remove_item, append_item]],
       App,
       [0,
        default_theme,
        override_theme,
        override_constants,
        override_theme_for_computation],
       [0,
        [0,
         _k_[1],
         _k_[2],
         _k_[3],
         _k_[4],
         _k_[11],
         _k_[9],
         _k_[12],
         _k_[10],
         _k_[13]]]];
   runtime.caml_register_global
    (39, Bonsai_web_ui_view, cst_Bonsai_web_ui_view);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
